{"version":3,"mappings":"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","names":[],"sources":["../../../../ui/packages/icons/src/Music.svelte","../../../../ui/node_modules/.pnpm/svelte-range-slider-pips@2.0.2/node_modules/svelte-range-slider-pips/src/RangePips.svelte","../../../../ui/node_modules/.pnpm/svelte-range-slider-pips@2.0.2/node_modules/svelte-range-slider-pips/src/RangeSlider.svelte","../../../../ui/packages/audio/src/Audio.svelte","../../../../ui/packages/audio/src/StaticAudio.svelte","../../../../ui/packages/app/src/components/Audio/Audio.svelte","../../../../ui/packages/app/src/components/Audio/index.ts"],"sourcesContent":["<svg\n\txmlns=\"http://www.w3.org/2000/svg\"\n\twidth=\"100%\"\n\theight=\"100%\"\n\tviewBox=\"0 0 24 24\"\n\tfill=\"none\"\n\tstroke=\"currentColor\"\n\tstroke-width=\"1.5\"\n\tstroke-linecap=\"round\"\n\tstroke-linejoin=\"round\"\n\tclass=\"feather feather-music\"\n>\n\t<path d=\"M9 18V5l12-2v13\" />\n\t<circle cx=\"6\" cy=\"18\" r=\"3\" />\n\t<circle cx=\"18\" cy=\"16\" r=\"3\" />\n</svg>\n","<script>\n\n  // range slider props\n  export let range = false;\n  export let min = 0;\n  export let max = 100;\n  export let step = 1;\n  export let values = [(max + min) / 2];\n  export let vertical = false;\n  export let reversed = false;\n  export let hoverable = true;\n  export let disabled = false;\n\n  // range pips / values props\n  export let pipstep = undefined;\n  export let all = true;\n  export let first = undefined;\n  export let last = undefined;\n  export let rest = undefined;\n\n  // formatting props\n  export let prefix = \"\";\n  export let suffix = \"\";\n  export let formatter = (v,i) => v;\n\n  // stylistic props\n  export let focus = undefined;\n  export let orientationStart = undefined;\n\n  // methods\n  export let percentOf = undefined;\n  export let moveHandle = undefined;\n\n  $: pipStep = pipstep || ((max - min) / step >= ( vertical ? 50 : 100 ) ? (max - min) / ( vertical ? 10 : 20 ) : 1);\n\n  $: pipCount = parseInt((max - min) / (step * pipStep), 10);\n\n  $: pipVal = function(val) {\n    return min + val * step * pipStep;\n  };\n\n  $: isSelected = function(val) {\n    return values.some(v => v === val);\n  };\n\n  $: inRange = function(val) {\n    if (range === \"min\") {\n      return values[0] > val;\n    } else if (range === \"max\") {\n      return values[0] < val;\n    } else if (range) {\n      return values[0] < val && values[1] > val;\n    }\n  };\n\n  function labelClick(val) {\n    moveHandle( undefined, val );\n  }\n</script>\n\n<style>\n  :global(.rangeSlider) {\n    --pip: var(--range-pip, lightslategray);\n    --pip-text: var(--range-pip-text, var(--pip));\n    --pip-active: var(--range-pip-active, darkslategrey);\n    --pip-active-text: var(--range-pip-active-text, var(--pip-active));\n    --pip-hover: var(--range-pip-hover, darkslategrey);\n    --pip-hover-text: var(--range-pip-hover-text, var(--pip-hover));\n    --pip-in-range: var(--range-pip-in-range, var(--pip-active));\n    --pip-in-range-text: var(--range-pip-in-range-text, var(--pip-active-text));\n  }\n  :global(.rangePips) {\n    position: absolute;\n    height: 1em;\n    left: 0;\n    right: 0;\n    bottom: -1em;\n  }\n  :global(.rangePips.vertical) {\n    height: auto;\n    width: 1em;\n    left: 100%;\n    right: auto;\n    top: 0;\n    bottom: 0;\n  }\n  :global(.rangePips .pip) {\n    height: 0.4em;\n    position: absolute;\n    top: 0.25em;\n    width: 1px;\n    white-space: nowrap;\n  }\n  :global(.rangePips.vertical .pip) {\n    height: 1px;\n    width: 0.4em;\n    left: 0.25em;\n    top: auto;\n    bottom: auto;\n  }\n  :global(.rangePips .pipVal) {\n    position: absolute;\n    top: 0.4em;\n    transform: translate(-50%, 25%);\n  }\n  :global(.rangePips.vertical .pipVal) {\n    position: absolute;\n    top: 0;\n    left: 0.4em;\n    transform: translate(25%, -50%);\n  }\n  :global(.rangePips .pip) {\n    transition: all 0.15s ease;\n  }\n  :global(.rangePips .pipVal) {\n    transition: all 0.15s ease, font-weight 0s linear;\n  }\n  :global(.rangePips .pip) {\n    color: lightslategray;\n    color: var(--pip-text);\n    background-color: lightslategray;\n    background-color: var(--pip);\n  }\n  :global(.rangePips .pip.selected) {\n    color: darkslategrey;\n    color: var(--pip-active-text);\n    background-color: darkslategrey;\n    background-color: var(--pip-active);\n  }\n  :global(.rangePips.hoverable:not(.disabled) .pip:hover) {\n    color: darkslategrey;\n    color: var(--pip-hover-text);\n    background-color: darkslategrey;\n    background-color: var(--pip-hover);\n  }\n  :global(.rangePips .pip.in-range) {\n    color: darkslategrey;\n    color: var(--pip-in-range-text);\n    background-color: darkslategrey;\n    background-color: var(--pip-in-range);\n  }\n  :global(.rangePips .pip.selected) {\n    height: 0.75em;\n  }\n  :global(.rangePips.vertical .pip.selected) {\n    height: 1px;\n    width: 0.75em;\n  }\n  :global(.rangePips .pip.selected .pipVal) {\n    font-weight: bold;\n    top: 0.75em;\n  }\n  :global(.rangePips.vertical .pip.selected .pipVal) {\n    top: 0;\n    left: 0.75em;\n  }\n  :global(.rangePips.hoverable:not(.disabled) .pip:not(.selected):hover) {\n    transition: none;\n  }\n  :global(.rangePips.hoverable:not(.disabled) .pip:not(.selected):hover .pipVal) {\n    transition: none;\n    font-weight: bold;\n  }\n</style>\n\n<div \n  class=\"rangePips\" \n  class:disabled\n  class:hoverable \n  class:vertical \n  class:reversed \n  class:focus \n>\n  {#if ( all && first !== false ) || first }\n    <span\n      class=\"pip first\"\n      class:selected={isSelected(min)}\n      class:in-range={inRange(min)}\n      style=\"{orientationStart}: 0%;\"\n      on:click={labelClick(min)}\n      on:touchend|preventDefault={labelClick(min)}\n    >\n      {#if all === 'label' || first === 'label'}\n        <span class=\"pipVal\">\n          {#if prefix}<span class=\"pipVal-prefix\">{prefix}</span>{/if}{formatter(min,0,0)}{#if suffix}<span class=\"pipVal-suffix\">{suffix}</span>{/if}\n        </span>\n      {/if}\n    </span>\n  {/if}\n\n  {#if ( all && rest !== false ) || rest}\n    {#each Array(pipCount + 1) as _, i}\n      {#if pipVal(i) !== min && pipVal(i) !== max}\n        <span\n          class=\"pip\"\n          class:selected={isSelected(pipVal(i))}\n          class:in-range={inRange(pipVal(i))}\n          style=\"{orientationStart}: {percentOf(pipVal(i))}%;\"\n          on:click={labelClick(pipVal(i))}\n          on:touchend|preventDefault={labelClick(pipVal(i))}\n        >\n          {#if all === 'label' || rest === 'label'}\n            <span class=\"pipVal\">\n              {#if prefix}<span class=\"pipVal-prefix\">{prefix}</span>{/if}{formatter(pipVal(i),i,percentOf(pipVal(i)))}{#if suffix}<span class=\"pipVal-suffix\">{suffix}</span>{/if}\n            </span>\n          {/if}\n        </span>\n      {/if}\n    {/each}\n  {/if}\n\n  {#if ( all && last !== false ) || last}\n    <span\n      class=\"pip last\"\n      class:selected={isSelected(max)}\n      class:in-range={inRange(max)}\n      style=\"{orientationStart}: 100%;\"\n      on:click={labelClick(max)}\n      on:touchend|preventDefault={labelClick(max)}\n    >\n      {#if all === 'label' || last === 'label'}\n        <span class=\"pipVal\">\n          {#if prefix}<span class=\"pipVal-prefix\">{prefix}</span>{/if}{formatter(max,pipCount,100)}{#if suffix}<span class=\"pipVal-suffix\">{suffix}</span>{/if}\n        </span>\n      {/if}\n    </span>\n  {/if}\n  \n</div>\n","<script>\n  import { spring } from \"svelte/motion\";\n  import { createEventDispatcher } from \"svelte\";\n  import RangePips from \"./RangePips.svelte\";\n\n  // dom references\n  export let slider;\n\n  // range slider props\n  export let range = false;\n  export let pushy = false;\n  export let min = 0;\n  export let max = 100;\n  export let step = 1;\n  export let values = [(max + min) / 2];\n  export let vertical = false;\n  export let float = false;\n  export let reversed = false;\n  export let hoverable = true;\n  export let disabled = false;\n\n  // range pips / values props\n  export let pips = false;\n  export let pipstep = undefined;\n  export let all = undefined;\n  export let first = undefined;\n  export let last = undefined;\n  export let rest = undefined;\n\n  // formatting props\n  export let id = undefined;\n  export let prefix = \"\";\n  export let suffix = \"\";\n  export let formatter = (v,i,p) => v;\n  export let handleFormatter = formatter;\n\n  // stylistic props\n  export let precision = 2;\n  export let springValues = { stiffness: 0.15, damping: 0.4 };\n\n  // prepare dispatched events\n  const dispatch = createEventDispatcher();\n\n  // state management\n  let valueLength = 0;\n  let focus = false;\n  let handleActivated = false;\n  let handlePressed = false;\n  let keyboardActive = false;\n  let activeHandle = values.length - 1;\n  let startValue;\n  let previousValue;\n\n  // copy the initial values in to a spring function which\n  // will update every time the values array is modified\n\n  let springPositions;\n\n  $: {\n\n    // check that \"values\" is an array, or set it as array\n    // to prevent any errors in springs, or range trimming\n    if ( !Array.isArray( values ) ) {\n      values = [(max + min) / 2];\n      console.error( \"'values' prop should be an Array (https://github.com/simeydotme/svelte-range-slider-pips#slider-props)\" );\n    }\n    // trim the range so it remains as a min/max (only 2 handles)\n    // and also align the handles to the steps\n    values = trimRange(values.map((v) => alignValueToStep(v)));\n\n    // check if the valueLength (length of values[]) has changed,\n    // because if so we need to re-seed the spring function with the\n    // new values array.\n    if ( valueLength !== values.length ) {\n      // set the initial spring values when the slider initialises,\n      // or when values array length has changed\n      springPositions = spring(values.map((v) => percentOf(v)), springValues );\n    } else {\n      // update the value of the spring function for animated handles\n      // whenever the values has updated\n      springPositions.set(values.map((v) => percentOf(v)));\n    }\n    // set the valueLength for the next check\n    valueLength = values.length;\n  };\n\n  /**\n   * take in a value, and then calculate that value's percentage\n   * of the overall range (min-max);\n   * @param {number} val the value we're getting percent for\n   * @return {number} the percentage value\n   **/\n  $: percentOf = function (val) {\n    let perc = ((val - min) / (max - min)) * 100;\n    if (isNaN(perc) || perc <= 0) {\n      return 0;\n    } else if (perc >= 100) {\n      return 100;\n    } else {\n      return parseFloat(perc.toFixed(precision));\n    }\n  };\n\n  /**\n   * clamp a value from the range so that it always\n   * falls within the min/max values\n   * @param {number} val the value to clamp\n   * @return {number} the value after it's been clamped\n   **/\n  $: clampValue = function (val) {\n    // return the min/max if outside of that range\n    return val <= min ? min : val >= max ? max : val;\n  };\n\n  /**\n   * align the value with the steps so that it\n   * always sits on the closest (above/below) step\n   * @param {number} val the value to align\n   * @return {number} the value after it's been aligned\n   **/\n  $: alignValueToStep = function (val) {\n    // sanity check for performance\n    if (val <= min) {\n      return min;\n    } else if (val >= max) {\n      return max;\n    }\n\n    // find the middle-point between steps\n    // and see if the value is closer to the\n    // next step, or previous step\n    let remainder = (val - min) % step;\n    let aligned = val - remainder;\n    if (Math.abs(remainder) * 2 >= step) {\n      aligned += remainder > 0 ? step : -step;\n    }\n    // make sure the value is within acceptable limits\n    aligned = clampValue(aligned);\n    // make sure the returned value is set to the precision desired\n    // this is also because javascript often returns weird floats\n    // when dealing with odd numbers and percentages\n\n    return parseFloat(aligned.toFixed(precision));\n  };\n\n  /**\n   * the orientation of the handles/pips based on the\n   * input values of vertical and reversed\n   **/\n  $: orientationStart = vertical ? reversed ? 'top' : 'bottom' : reversed ? 'right' : 'left';\n  $: orientationEnd = vertical ? reversed ? 'bottom' : 'top' : reversed ? 'left' : 'right';\n\n  /**\n   * helper func to get the index of an element in it's DOM container\n   * @param {object} el dom object reference we want the index of\n   * @returns {number} the index of the input element\n   **/\n  function index(el) {\n    if (!el) return -1;\n    var i = 0;\n    while ((el = el.previousElementSibling)) {\n      i++;\n    }\n    return i;\n  }\n\n  /**\n   * normalise a mouse or touch event to return the\n   * client (x/y) object for that event\n   * @param {event} e a mouse/touch event to normalise\n   * @returns {object} normalised event client object (x,y)\n   **/\n  function normalisedClient(e) {\n    if (e.type.includes(\"touch\")) {\n      return e.touches[0];\n    } else {\n      return e;\n    }\n  }\n\n  /**\n   * check if an element is a handle on the slider\n   * @param {object} el dom object reference we want to check\n   * @returns {boolean}\n   **/\n  function targetIsHandle(el) {\n    const handles = slider.querySelectorAll(\".handle\");\n    const isHandle = Array.prototype.includes.call(handles, el);\n    const isChild = Array.prototype.some.call(handles, (e) => e.contains(el));\n    return isHandle || isChild;\n  }\n\n  /**\n   * trim the values array based on whether the property\n   * for 'range' is 'min', 'max', or truthy. This is because we\n   * do not want more than one handle for a min/max range, and we do\n   * not want more than two handles for a true range.\n   * @param {array} values the input values for the rangeSlider\n   * @return {array} the range array for creating a rangeSlider\n   **/\n  function trimRange(values) {\n    if (range === \"min\" || range === \"max\") {\n      return values.slice(0, 1);\n    } else if (range) {\n      return values.slice(0, 2);\n    } else {\n      return values;\n    }\n  }\n\n  /**\n   * helper to return the slider dimensions for finding\n   * the closest handle to user interaction\n   * @return {object} the range slider DOM client rect\n   **/\n  function getSliderDimensions() {\n    return slider.getBoundingClientRect();\n  }\n\n  /**\n   * helper to return closest handle to user interaction\n   * @param {object} clientPos the client{x,y} positions to check against\n   * @return {number} the index of the closest handle to clientPos\n   **/\n  function getClosestHandle(clientPos) {\n    // first make sure we have the latest dimensions\n    // of the slider, as it may have changed size\n    const dims = getSliderDimensions();\n    // calculate the interaction position, percent and value\n    let handlePos = 0;\n    let handlePercent = 0;\n    let handleVal = 0;\n    if (vertical) {\n      handlePos = clientPos.clientY - dims.top;\n      handlePercent = (handlePos / dims.height) * 100;\n      handlePercent = reversed ? handlePercent : 100 - handlePercent;\n    } else {\n      handlePos = clientPos.clientX - dims.left;\n      handlePercent = (handlePos / dims.width) * 100;\n      handlePercent = reversed ? 100 - handlePercent : handlePercent;\n    }\n    handleVal = ((max - min) / 100) * handlePercent + min;\n\n    let closest;\n\n    // if we have a range, and the handles are at the same\n    // position, we want a simple check if the interaction\n    // value is greater than return the second handle\n    if (range === true && values[0] === values[1]) {\n      if (handleVal > values[1]) {\n        return 1;\n      } else {\n        return 0;\n      }\n      // if there are multiple handles, and not a range, then\n      // we sort the handles values, and return the first one closest\n      // to the interaction value\n    } else {\n      closest = values.indexOf(\n        [...values].sort((a, b) => Math.abs(handleVal - a) - Math.abs(handleVal - b))[0]\n      );\n    }\n    return closest;\n  }\n\n  /**\n   * take the interaction position on the slider, convert\n   * it to a value on the range, and then send that value\n   * through to the moveHandle() method to set the active\n   * handle's position\n   * @param {object} clientPos the client{x,y} of the interaction\n   **/\n  function handleInteract(clientPos) {\n    // first make sure we have the latest dimensions\n    // of the slider, as it may have changed size\n    const dims = getSliderDimensions();\n    // calculate the interaction position, percent and value\n    let handlePos = 0;\n    let handlePercent = 0;\n    let handleVal = 0;\n    if (vertical) {\n      handlePos = clientPos.clientY - dims.top;\n      handlePercent = (handlePos / dims.height) * 100;\n      handlePercent = reversed ? handlePercent : 100 - handlePercent;\n    } else {\n      handlePos = clientPos.clientX - dims.left;\n      handlePercent = (handlePos / dims.width) * 100;\n      handlePercent = reversed ? 100 - handlePercent : handlePercent;\n    }\n    handleVal = ((max - min) / 100) * handlePercent + min;\n    // move handle to the value\n    moveHandle(activeHandle, handleVal);\n  }\n\n  /**\n   * move a handle to a specific value, respecting the clamp/align rules\n   * @param {number} index the index of the handle we want to move\n   * @param {number} value the value to move the handle to\n   * @return {number} the value that was moved to (after alignment/clamping)\n   **/\n  function moveHandle(index, value) {\n    // align & clamp the value so we're not doing extra\n    // calculation on an out-of-range value down below\n    value = alignValueToStep(value);\n    // use the active handle if handle index is not provided\n    if ( typeof index === 'undefined' ) {\n      index = activeHandle;\n    }\n    // if this is a range slider perform special checks\n    if (range) {\n      // restrict the handles of a range-slider from\n      // going past one-another unless \"pushy\" is true\n      if (index === 0 && value > values[1]) {\n        if (pushy) {\n          values[1] = value;\n        } else {\n          value = values[1];\n        }\n      } else if (index === 1 && value < values[0]) {\n        if (pushy) {\n          values[0] = value;\n        } else {\n          value = values[0];\n        }\n      }\n    }\n\n    // if the value has changed, update it\n    if (values[index] !== value) {\n      values[index] = value;\n    }\n\n    // fire the change event when the handle moves,\n    // and store the previous value for the next time\n    if (previousValue !== value) {\n      eChange();\n      previousValue = value;\n    }\n    return value;\n  }\n\n  /**\n   * helper to find the beginning range value for use with css style\n   * @param {array} values the input values for the rangeSlider\n   * @return {number} the beginning of the range\n   **/\n  function rangeStart(values) {\n    if (range === \"min\") {\n      return 0;\n    } else {\n      return values[0];\n    }\n  }\n\n  /**\n   * helper to find the ending range value for use with css style\n   * @param {array} values the input values for the rangeSlider\n   * @return {number} the end of the range\n   **/\n  function rangeEnd(values) {\n    if (range === \"max\") {\n      return 0;\n    } else if (range === \"min\") {\n      return 100 - values[0];\n    } else {\n      return 100 - values[1];\n    }\n  }\n\n  /**\n   * when the user has unfocussed (blurred) from the\n   * slider, deactivate all handles\n   * @param {event} e the event from browser\n   **/\n  function sliderBlurHandle(e) {\n    if (keyboardActive) {\n      focus = false;\n      handleActivated = false;\n      handlePressed = false;\n    }\n  }\n\n  /**\n   * when the user focusses the handle of a slider\n   * set it to be active\n   * @param {event} e the event from browser\n   **/\n  function sliderFocusHandle(e) {\n    if ( !disabled ) {\n      activeHandle = index(e.target);\n      focus = true;\n    }\n  }\n\n  /**\n   * handle the keyboard accessible features by checking the\n   * input type, and modfier key then moving handle by appropriate amount\n   * @param {event} e the event from browser\n   **/\n  function sliderKeydown(e) {\n    if ( !disabled ) {\n      const handle = index(e.target);\n      let jump = e.ctrlKey || e.metaKey || e.shiftKey ? step * 10 : step;\n      let prevent = false;\n\n      switch (e.key) {\n        case \"PageDown\":\n          jump *= 10;\n        case \"ArrowRight\":\n        case \"ArrowUp\":\n          moveHandle(handle, values[handle] + jump);\n          prevent = true;\n          break;\n        case \"PageUp\":\n          jump *= 10;\n        case \"ArrowLeft\":\n        case \"ArrowDown\":\n          moveHandle(handle, values[handle] - jump);\n          prevent = true;\n          break;\n        case \"Home\":\n          moveHandle(handle, min);\n          prevent = true;\n          break;\n        case \"End\":\n          moveHandle(handle, max);\n          prevent = true;\n          break;\n      }\n      if (prevent) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }\n\n  /**\n   * function to run when the user touches\n   * down on the slider element anywhere\n   * @param {event} e the event from browser\n   **/\n  function sliderInteractStart(e) {\n    if ( !disabled ) {\n      const el = e.target;\n      const clientPos = normalisedClient(e);\n      // set the closest handle as active\n      focus = true;\n      handleActivated = true;\n      handlePressed = true;\n      activeHandle = getClosestHandle(clientPos);\n\n      // fire the start event\n      startValue = previousValue = alignValueToStep(values[activeHandle]);\n      eStart();\n\n      // for touch devices we want the handle to instantly\n      // move to the position touched for more responsive feeling\n      if (e.type === \"touchstart\" && !el.matches(\".pipVal\")) {\n        handleInteract(clientPos);\n      }\n    }\n  }\n\n  /**\n   * function to run when the user stops touching\n   * down on the slider element anywhere\n   * @param {event} e the event from browser\n   **/\n  function sliderInteractEnd(e) {\n    // fire the stop event for touch devices\n    if (e.type === \"touchend\") {\n      eStop();\n    }\n    handlePressed = false;\n  }\n\n  /**\n   * unfocus the slider if the user clicked off of\n   * it, somewhere else on the screen\n   * @param {event} e the event from browser\n   **/\n  function bodyInteractStart(e) {\n    keyboardActive = false;\n    if (focus && e.target !== slider && !slider.contains(e.target)) {\n      focus = false;\n    }\n  }\n\n  /**\n   * send the clientX through to handle the interaction\n   * whenever the user moves acros screen while active\n   * @param {event} e the event from browser\n   **/\n  function bodyInteract(e) {\n    if ( !disabled ) {\n      if (handleActivated) {\n        handleInteract(normalisedClient(e));\n      }\n    }\n  }\n\n  /**\n   * if user triggers mouseup on the body while\n   * a handle is active (without moving) then we\n   * trigger an interact event there\n   * @param {event} e the event from browser\n   **/\n  function bodyMouseUp(e) {\n    if ( !disabled ) {\n      const el = e.target;\n      // this only works if a handle is active, which can\n      // only happen if there was sliderInteractStart triggered\n      // on the slider, already\n      if (handleActivated) {\n        if (el === slider || slider.contains(el)) {\n          focus = true;\n          // don't trigger interact if the target is a handle (no need) or\n          // if the target is a label (we want to move to that value from rangePips)\n          if (!targetIsHandle(el) && !el.matches(\".pipVal\")) {\n            handleInteract(normalisedClient(e));\n          }\n        }\n        // fire the stop event for mouse device\n        // when the body is triggered with an active handle\n        eStop();\n      }\n    }\n    handleActivated = false;\n    handlePressed = false;\n  }\n\n  /**\n   * if user triggers touchend on the body then we\n   * defocus the slider completely\n   * @param {event} e the event from browser\n   **/\n  function bodyTouchEnd(e) {\n    handleActivated = false;\n    handlePressed = false;\n  }\n\n  function bodyKeyDown(e) {\n    if ( !disabled ) {\n      if (e.target === slider || slider.contains(e.target)) {\n        keyboardActive = true;\n      }\n    }\n  }\n\n  function eStart() {\n    !disabled && dispatch(\"start\", {\n      activeHandle,\n      value: startValue,\n      values: values.map((v) => alignValueToStep(v)),\n    });\n  }\n\n  function eStop() {\n    !disabled && dispatch(\"stop\", {\n      activeHandle,\n      startValue: startValue,\n      value: values[activeHandle],\n      values: values.map((v) => alignValueToStep(v)),\n    });\n  }\n\n  function eChange() {\n    !disabled && dispatch(\"change\", {\n      activeHandle,\n      startValue: startValue,\n      previousValue:\n        typeof previousValue === \"undefined\" ? startValue : previousValue,\n      value: values[activeHandle],\n      values: values.map((v) => alignValueToStep(v)),\n    });\n  }\n</script>\n\n<style>\n  :global(.rangeSlider) {\n    --slider: var(--range-slider, #d7dada);\n    --handle-inactive: var(--range-handle-inactive, #99a2a2);\n    --handle: var(--range-handle, #838de7);\n    --handle-focus: var(--range-handle-focus, #4a40d4);\n    --handle-border: var(--range-handle-border, var(--handle));\n    --range-inactive: var(--range-range-inactive, var(--handle-inactive));\n    --range: var(--range-range, var(--handle-focus));\n    --float-inactive: var(--range-float-inactive, var(--handle-inactive));\n    --float: var(--range-float, var(--handle-focus));\n    --float-text: var(--range-float-text, white);\n  }\n  :global(.rangeSlider) {\n    position: relative;\n    border-radius: 100px;\n    height: 0.5em;\n    margin: 1em;\n    transition: opacity 0.2s ease;\n    user-select: none;\n  }\n  :global(.rangeSlider *) {\n    user-select: none;\n  }\n  :global(.rangeSlider.pips) {\n    margin-bottom: 1.8em;\n  }\n  :global(.rangeSlider.pip-labels) {\n    margin-bottom: 2.8em;\n  }\n  :global(.rangeSlider.vertical) {\n    display: inline-block;\n    border-radius: 100px;\n    width: 0.5em;\n    min-height: 200px;\n  }\n  :global(.rangeSlider.vertical.pips) {\n    margin-right: 1.8em;\n    margin-bottom: 1em;\n  }\n  :global(.rangeSlider.vertical.pip-labels) {\n    margin-right: 2.8em;\n    margin-bottom: 1em;\n  }\n  :global(.rangeSlider .rangeHandle) {\n    position: absolute;\n    display: block;\n    height: 1.4em;\n    width: 1.4em;\n    top: 0.25em;\n    bottom: auto;\n    transform: translateY(-50%) translateX(-50%);\n    z-index: 2;\n  }\n  :global(.rangeSlider.reversed .rangeHandle) {\n    transform: translateY(-50%) translateX(50%);\n  }\n  :global(.rangeSlider.vertical .rangeHandle) {\n    left: 0.25em;\n    top: auto;\n    transform: translateY(50%) translateX(-50%);\n  }\n  :global(.rangeSlider.vertical.reversed .rangeHandle) {\n    transform: translateY(-50%) translateX(-50%);\n  }\n  :global(.rangeSlider .rangeNub),\n  :global(.rangeSlider .rangeHandle:before) {\n    position: absolute;\n    left: 0;\n    top: 0;\n    display: block;\n    border-radius: 10em;\n    height: 100%;\n    width: 100%;\n    transition: box-shadow 0.2s ease;\n  }\n  :global(.rangeSlider .rangeHandle:before) {\n    content: \"\";\n    left: 1px;\n    top: 1px;\n    bottom: 1px;\n    right: 1px;\n    height: auto;\n    width: auto;\n    box-shadow: 0 0 0 0px var(--handle-border);\n    opacity: 0;\n  }\n  :global(.rangeSlider.hoverable:not(.disabled) .rangeHandle:hover:before) {\n    box-shadow: 0 0 0 8px var(--handle-border);\n    opacity: 0.2;\n  }\n  :global(.rangeSlider.hoverable:not(.disabled) .rangeHandle.press:before),\n  :global(.rangeSlider.hoverable:not(.disabled) .rangeHandle.press:hover:before) {\n    box-shadow: 0 0 0 12px var(--handle-border);\n    opacity: 0.4;\n  }\n  :global(.rangeSlider.range:not(.min):not(.max) .rangeNub) {\n    border-radius: 10em 10em 10em 1.6em;\n  }\n  :global(.rangeSlider.range .rangeHandle:nth-of-type(1) .rangeNub) {\n    transform: rotate(-135deg);\n  }\n  :global(.rangeSlider.range .rangeHandle:nth-of-type(2) .rangeNub) {\n    transform: rotate(45deg);\n  }\n  :global(.rangeSlider.range.reversed .rangeHandle:nth-of-type(1) .rangeNub) {\n    transform: rotate(45deg);\n  }\n  :global(.rangeSlider.range.reversed .rangeHandle:nth-of-type(2) .rangeNub) {\n    transform: rotate(-135deg);\n  }\n  :global(.rangeSlider.range.vertical .rangeHandle:nth-of-type(1) .rangeNub) {\n    transform: rotate(135deg);\n  }\n  :global(.rangeSlider.range.vertical .rangeHandle:nth-of-type(2) .rangeNub) {\n    transform: rotate(-45deg);\n  }\n  :global(.rangeSlider.range.vertical.reversed .rangeHandle:nth-of-type(1) .rangeNub) {\n    transform: rotate(-45deg);\n  }\n  :global(.rangeSlider.range.vertical.reversed .rangeHandle:nth-of-type(2) .rangeNub) {\n    transform: rotate(135deg);\n  }\n  :global(.rangeSlider .rangeFloat) {\n    display: block;\n    position: absolute;\n    left: 50%;\n    top: -0.5em;\n    transform: translate(-50%, -100%);\n    font-size: 1em;\n    text-align: center;\n    opacity: 0;\n    pointer-events: none;\n    white-space: nowrap;\n    transition: all 0.2s ease;\n    font-size: 0.9em;\n    padding: 0.2em 0.4em;\n    border-radius: 0.2em;\n  }\n  :global(.rangeSlider .rangeHandle.active .rangeFloat),\n  :global(.rangeSlider.hoverable .rangeHandle:hover .rangeFloat) {\n    opacity: 1;\n    top: -0.2em;\n    transform: translate(-50%, -100%);\n  }\n  :global(.rangeSlider .rangeBar) {\n    position: absolute;\n    display: block;\n    transition: background 0.2s ease;\n    border-radius: 1em;\n    height: 0.5em;\n    top: 0;\n    user-select: none;\n    z-index: 1;\n  }\n  :global(.rangeSlider.vertical .rangeBar) {\n    width: 0.5em;\n    height: auto;\n  }\n  :global(.rangeSlider) {\n    background-color: #d7dada;\n    background-color: var(--slider);\n  }\n  :global(.rangeSlider .rangeBar) {\n    background-color: #99a2a2;\n    background-color: var(--range-inactive);\n  }\n  :global(.rangeSlider.focus .rangeBar) {\n    background-color: #838de7;\n    background-color: var(--range);\n  }\n  :global(.rangeSlider .rangeNub) {\n    background-color: #99a2a2;\n    background-color: var(--handle-inactive);\n  }\n  :global(.rangeSlider.focus .rangeNub) {\n    background-color: #838de7;\n    background-color: var(--handle);\n  }\n  :global(.rangeSlider .rangeHandle.active .rangeNub) {\n    background-color: #4a40d4;\n    background-color: var(--handle-focus);\n  }\n  :global(.rangeSlider .rangeFloat) {\n    color: white;\n    color: var(--float-text);\n    background-color: #99a2a2;\n    background-color: var(--float-inactive);\n  }\n  :global(.rangeSlider.focus .rangeFloat) {\n    background-color: #4a40d4;\n    background-color: var(--float);\n  }\n  :global(.rangeSlider.disabled) {\n    opacity: 0.5;\n  }\n  :global(.rangeSlider.disabled .rangeNub) {\n    background-color: #d7dada;\n    background-color: var(--slider);\n  }\n</style>\n\n<div\n  {id}\n  bind:this={slider}\n  class=\"rangeSlider\"\n  class:range\n  class:disabled\n  class:hoverable\n  class:vertical\n  class:reversed\n  class:focus\n  class:min={range === 'min'}\n  class:max={range === 'max'}\n  class:pips\n  class:pip-labels={all === 'label' || first === 'label' || last === 'label' || rest === 'label'}\n  on:mousedown={sliderInteractStart}\n  on:mouseup={sliderInteractEnd}\n  on:touchstart|preventDefault={sliderInteractStart}\n  on:touchend|preventDefault={sliderInteractEnd}\n>\n  {#each values as value, index}\n    <span\n      role=\"slider\"\n      class=\"rangeHandle\"\n      class:active={focus && activeHandle === index}\n      class:press={handlePressed && activeHandle === index}\n      data-handle={index}\n      on:blur={sliderBlurHandle}\n      on:focus={sliderFocusHandle}\n      on:keydown={sliderKeydown}\n      style=\"{orientationStart}: {$springPositions[index]}%; z-index: {activeHandle === index ? 3 : 2};\"\n      aria-valuemin={range === true && index === 1 ? values[0] : min}\n      aria-valuemax={range === true && index === 0 ? values[1] : max}\n      aria-valuenow={value}\n      aria-valuetext=\"{prefix}{handleFormatter(value,index,percentOf(value))}{suffix}\"\n      aria-orientation={vertical ? 'vertical' : 'horizontal'}\n      aria-disabled={disabled}\n      {disabled}\n      tabindex=\"{ disabled ? -1 : 0 }\"\n    >\n      <span class=\"rangeNub\" />\n      {#if float}\n        <span class=\"rangeFloat\">\n          {#if prefix}<span class=\"rangeFloat-prefix\">{prefix}</span>{/if}{handleFormatter(value,index,percentOf(value))}{#if suffix}<span class=\"rangeFloat-suffix\">{suffix}</span>{/if}\n        </span>\n      {/if}\n    </span>\n  {/each}\n  {#if range}\n    <span\n      class=\"rangeBar\"\n      style=\"{orientationStart}: {rangeStart($springPositions)}%; \n             {orientationEnd}: {rangeEnd($springPositions)}%;\" />\n  {/if}\n  {#if pips}\n    <RangePips\n      {values}\n      {min}\n      {max}\n      {step}\n      {range}\n      {vertical}\n      {reversed}\n      {orientationStart}\n      {hoverable}\n      {disabled}\n      {all}\n      {first}\n      {last}\n      {rest}\n      {pipstep}\n      {prefix}\n      {suffix}\n      {formatter}\n      {focus}\n      {percentOf}\n      {moveHandle}\n    />\n  {/if}\n</div>\n\n<svelte:window\n  on:mousedown={bodyInteractStart}\n  on:touchstart={bodyInteractStart}\n  on:mousemove={bodyInteract}\n  on:touchmove={bodyInteract}\n  on:mouseup={bodyMouseUp}\n  on:touchend={bodyTouchEnd}\n  on:keydown={bodyKeyDown} />\n","<script context=\"module\" lang=\"ts\">\n\timport type { FileData } from \"@gradio/upload\";\n\timport { Button } from \"@gradio/button\";\n\texport interface AudioData extends FileData {\n\t\tcrop_min?: number;\n\t\tcrop_max?: number;\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport { onDestroy, createEventDispatcher, tick } from \"svelte\";\n\timport { Upload, ModifyUpload } from \"@gradio/upload\";\n\timport { BlockLabel } from \"@gradio/atoms\";\n\timport { Music } from \"@gradio/icons\";\n\t// @ts-ignore\n\timport Range from \"svelte-range-slider-pips\";\n\n\timport type { IBlobEvent, IMediaRecorder } from \"extendable-media-recorder\";\n\n\texport let value: null | { name: string; data: string } = null;\n\texport let label: string;\n\texport let show_label: boolean = true;\n\texport let name: string = \"\";\n\texport let source: \"microphone\" | \"upload\" | \"none\";\n\texport let pending: boolean = false;\n\texport let streaming: boolean = false;\n\n\t// TODO: make use of this\n\t// export let type: \"normal\" | \"numpy\" = \"normal\";\n\n\tlet recording = false;\n\tlet recorder: IMediaRecorder;\n\tlet mode = \"\";\n\tlet header: Uint8Array | undefined = undefined;\n\tlet pending_stream: Array<Uint8Array> = [];\n\tlet submit_pending_stream_on_pending_end: boolean = false;\n\tlet player;\n\tlet inited = false;\n\tlet crop_values = [0, 100];\n\tconst STREAM_TIMESLICE = 500;\n\tconst NUM_HEADER_BYTES = 44;\n\tlet audio_chunks: Array<Blob> = [];\n\tlet audio_blob;\n\tlet module_promises:\n\t\t| [\n\t\t\t\tPromise<typeof import(\"extendable-media-recorder\")>,\n\t\t\t\tPromise<typeof import(\"extendable-media-recorder-wav-encoder\")>\n\t\t  ];\n\n\tfunction get_modules() {\n\t\tmodule_promises = [\n\t\t\timport(\"extendable-media-recorder\"),\n\t\t\timport(\"extendable-media-recorder-wav-encoder\")\n\t\t];\n\t}\n\n\tif (streaming) {\n\t\tget_modules();\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: AudioData;\n\t\tstream: AudioData;\n\t\tedit: AudioData;\n\t\tplay: undefined;\n\t\tpause: undefined;\n\t\tended: undefined;\n\t\tdrag: boolean;\n\t\terror: string;\n\t\tupload: FileData;\n\t\tclear: undefined;\n\t}>();\n\n\tfunction blob_to_data_url(blob: Blob): Promise<string> {\n\t\treturn new Promise((fulfill, reject) => {\n\t\t\tlet reader = new FileReader();\n\t\t\treader.onerror = reject;\n\t\t\treader.onload = () => fulfill(reader.result as string);\n\t\t\treader.readAsDataURL(blob);\n\t\t});\n\t}\n\n\tconst dispatch_blob = async (\n\t\tblobs: Array<Uint8Array> | Blob[],\n\t\tevent: \"stream\" | \"change\"\n\t) => {\n\t\tlet audio_blob = new Blob(blobs, { type: \"audio/wav\" });\n\t\tvalue = {\n\t\t\tdata: await blob_to_data_url(audio_blob),\n\t\t\tname\n\t\t};\n\t\tdispatch(event, value);\n\t};\n\n\tasync function prepare_audio() {\n\t\tlet stream: MediaStream | null;\n\n\t\ttry {\n\t\t\tstream = await navigator.mediaDevices.getUserMedia({ audio: true });\n\t\t} catch (err) {\n\t\t\tif (err instanceof DOMException && err.name == \"NotAllowedError\") {\n\t\t\t\tdispatch(\n\t\t\t\t\t\"error\",\n\t\t\t\t\t\"Please allow access to the microphone for recording.\"\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\tif (stream == null) return;\n\n\t\tif (streaming) {\n\t\t\tconst [{ MediaRecorder, register }, { connect }] = await Promise.all(\n\t\t\t\tmodule_promises\n\t\t\t);\n\n\t\t\tawait register(await connect());\n\n\t\t\trecorder = new MediaRecorder(stream, { mimeType: \"audio/wav\" });\n\n\t\t\tasync function handle_chunk(event: IBlobEvent) {\n\t\t\t\tlet buffer = await event.data.arrayBuffer();\n\t\t\t\tlet payload = new Uint8Array(buffer);\n\t\t\t\tif (!header) {\n\t\t\t\t\theader = new Uint8Array(buffer.slice(0, NUM_HEADER_BYTES));\n\t\t\t\t\tpayload = new Uint8Array(buffer.slice(NUM_HEADER_BYTES));\n\t\t\t\t}\n\t\t\t\tif (pending) {\n\t\t\t\t\tpending_stream.push(payload);\n\t\t\t\t} else {\n\t\t\t\t\tlet blobParts = [header].concat(pending_stream, [payload]);\n\t\t\t\t\tdispatch_blob(blobParts, \"stream\");\n\t\t\t\t\tpending_stream = [];\n\t\t\t\t}\n\t\t\t}\n\t\t\trecorder.addEventListener(\"dataavailable\", handle_chunk);\n\t\t} else {\n\t\t\trecorder = new MediaRecorder(stream);\n\n\t\t\trecorder.addEventListener(\"dataavailable\", (event) => {\n\t\t\t\taudio_chunks.push(event.data);\n\t\t\t});\n\n\t\t\trecorder.addEventListener(\"stop\", async () => {\n\t\t\t\trecording = false;\n\t\t\t\tawait dispatch_blob(audio_chunks, \"change\");\n\t\t\t\taudio_chunks = [];\n\t\t\t});\n\t\t}\n\n\t\tinited = true;\n\t}\n\n\t$: if (submit_pending_stream_on_pending_end && pending === false) {\n\t\tsubmit_pending_stream_on_pending_end = false;\n\t\tif (header && pending_stream) {\n\t\t\tlet blobParts: Array<Uint8Array> = [header].concat(pending_stream);\n\t\t\tpending_stream = [];\n\t\t\tdispatch_blob(blobParts, \"stream\");\n\t\t}\n\t}\n\n\tasync function record() {\n\t\trecording = true;\n\n\t\tif (!inited) await prepare_audio();\n\t\theader = undefined;\n\t\tif (streaming) {\n\t\t\trecorder.start(STREAM_TIMESLICE);\n\t\t} else {\n\t\t\trecorder.start();\n\t\t}\n\t}\n\n\tonDestroy(() => {\n\t\tif (recorder && recorder.state !== \"inactive\") {\n\t\t\trecorder.stop();\n\t\t}\n\t});\n\n\tconst stop = async () => {\n\t\trecorder.stop();\n\t\tif (streaming) {\n\t\t\trecording = false;\n\t\t\tif (pending) {\n\t\t\t\tsubmit_pending_stream_on_pending_end = true;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction clear() {\n\t\tdispatch(\"change\");\n\t\tdispatch(\"clear\");\n\t\tmode = \"\";\n\t\tvalue = null;\n\t}\n\n\tfunction loaded(node: HTMLAudioElement) {\n\t\tfunction clamp_playback() {\n\t\t\tconst start_time = (crop_values[0] / 100) * node.duration;\n\t\t\tconst end_time = (crop_values[1] / 100) * node.duration;\n\t\t\tif (node.currentTime < start_time) {\n\t\t\t\tnode.currentTime = start_time;\n\t\t\t}\n\n\t\t\tif (node.currentTime > end_time) {\n\t\t\t\tnode.currentTime = start_time;\n\t\t\t\tnode.pause();\n\t\t\t}\n\t\t}\n\n\t\tnode.addEventListener(\"timeupdate\", clamp_playback);\n\n\t\treturn {\n\t\t\tdestroy: () => node.removeEventListener(\"timeupdate\", clamp_playback)\n\t\t};\n\t}\n\n\tfunction handle_change({\n\t\tdetail: { values }\n\t}: {\n\t\tdetail: { values: [number, number] };\n\t}) {\n\t\tif (!value) return;\n\n\t\tdispatch(\"change\", {\n\t\t\tdata: value.data,\n\t\t\tname,\n\t\t\tcrop_min: values[0],\n\t\t\tcrop_max: values[1]\n\t\t});\n\n\t\tdispatch(\"edit\");\n\t}\n\n\tfunction handle_load({\n\t\tdetail\n\t}: {\n\t\tdetail: { data: string; name: string; size: number; is_example: boolean };\n\t}) {\n\t\tvalue = detail;\n\t\tdispatch(\"change\", { data: detail.data, name: detail.name });\n\t\tdispatch(\"upload\", detail);\n\t}\n\n\texport let dragging = false;\n\t$: dispatch(\"drag\", dragging);\n</script>\n\n<BlockLabel\n\t{show_label}\n\tIcon={Music}\n\tfloat={source === \"upload\" && value === null}\n\tlabel={label || \"Audio\"}\n/>\n{#if value === null || streaming}\n\t{#if source === \"microphone\"}\n\t\t<div class=\"mic-wrap\">\n\t\t\t{#if recording}\n\t\t\t\t<Button size=\"sm\" on:click={stop}>\n\t\t\t\t\t<span class=\"record-icon\">\n\t\t\t\t\t\t<span class=\"pinger\" />\n\t\t\t\t\t\t<span class=\"dot\" />\n\t\t\t\t\t</span>\n\t\t\t\t\tStop recording\n\t\t\t\t</Button>\n\t\t\t{:else}\n\t\t\t\t<Button size=\"sm\" on:click={record}>\n\t\t\t\t\t<span class=\"record-icon\">\n\t\t\t\t\t\t<span class=\"dot\" />\n\t\t\t\t\t</span>\n\t\t\t\t\tRecord from microphone\n\t\t\t\t</Button>\n\t\t\t{/if}\n\t\t</div>\n\t{:else if source === \"upload\"}\n\t\t<Upload filetype=\"audio/*\" on:load={handle_load} bind:dragging>\n\t\t\t<slot />\n\t\t</Upload>\n\t{/if}\n{:else}\n\t<ModifyUpload\n\t\ton:clear={clear}\n\t\ton:edit={() => (mode = \"edit\")}\n\t\teditable\n\t\tabsolute={true}\n\t/>\n\n\t<audio\n\t\tuse:loaded\n\t\tcontrols\n\t\tbind:this={player}\n\t\tpreload=\"metadata\"\n\t\tsrc={value.data}\n\t\ton:play\n\t\ton:pause\n\t\ton:ended\n\t/>\n\n\t{#if mode === \"edit\" && player?.duration}\n\t\t<Range\n\t\t\tbind:values={crop_values}\n\t\t\trange\n\t\t\tmin={0}\n\t\t\tmax={100}\n\t\t\tstep={1}\n\t\t\ton:change={handle_change}\n\t\t/>\n\t{/if}\n{/if}\n\n<style>\n\t.mic-wrap {\n\t\tpadding: var(--size-2);\n\t}\n\n\t.record-icon {\n\t\tdisplay: flex;\n\t\tposition: relative;\n\t\tmargin-right: var(--size-2);\n\t\twidth: 6px;\n\t\theight: 6px;\n\t}\n\n\t.dot {\n\t\tdisplay: inline-flex;\n\t\tposition: relative;\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--color-red-500);\n\t\twidth: 6px;\n\t\theight: 6px;\n\t}\n\n\t.pinger {\n\t\tdisplay: inline-flex;\n\t\tposition: absolute;\n\t\topacity: 0.9;\n\t\tanimation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;\n\t\tborder-radius: var(--radius-full);\n\t\tbackground: var(--color-red-500);\n\t\twidth: var(--size-full);\n\t\theight: var(--size-full);\n\t}\n\n\t@keyframes ping {\n\t\t75%,\n\t\t100% {\n\t\t\ttransform: scale(2);\n\t\t\topacity: 0;\n\t\t}\n\t}\n\n\taudio {\n\t\tpadding: var(--size-2);\n\t\twidth: var(--size-full);\n\t\theight: var(--size-14);\n\t}\n</style>\n","<script context=\"module\" lang=\"ts\">\n\timport type { FileData } from \"@gradio/upload\";\n\timport { Empty } from \"@gradio/atoms\";\n\texport interface AudioData extends FileData {\n\t\tcrop_min?: number;\n\t\tcrop_max?: number;\n\t}\n</script>\n\n<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { BlockLabel } from \"@gradio/atoms\";\n\n\timport { Music } from \"@gradio/icons\";\n\n\texport let value: null | { name: string; data: string } = null;\n\texport let label: string;\n\texport let name: string;\n\texport let show_label: boolean = true;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: AudioData;\n\t\tplay: undefined;\n\t\tpause: undefined;\n\t\tended: undefined;\n\t}>();\n\n\t$: value &&\n\t\tdispatch(\"change\", {\n\t\t\tname: name,\n\t\t\tdata: value?.data\n\t\t});\n</script>\n\n<BlockLabel {show_label} Icon={Music} float={false} label={label || \"Audio\"} />\n{#if value === null}\n\t<Empty size=\"small\" unpadded_box={true}>\n\t\t<Music />\n\t</Empty>\n{:else}\n\t<audio\n\t\tcontrols\n\t\tpreload=\"metadata\"\n\t\tsrc={value.data}\n\t\ton:play\n\t\ton:pause\n\t\ton:ended\n\t/>\n{/if}\n\n<style>\n\taudio {\n\t\tpadding: var(--size-2);\n\t\twidth: var(--size-full);\n\t\theight: var(--size-14);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { _ } from \"svelte-i18n\";\n\timport UploadText from \"../UploadText.svelte\";\n\n\timport type { FileData } from \"@gradio/upload\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\n\timport { Audio, StaticAudio } from \"@gradio/audio\";\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\n\timport { Block } from \"@gradio/atoms\";\n\n\timport { normalise_file } from \"@gradio/upload\";\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: typeof value;\n\t\tstream: typeof value;\n\t\terror: string;\n\t}>();\n\n\texport let elem_id: string = \"\";\n\texport let elem_classes: Array<string> = [];\n\texport let visible: boolean = true;\n\texport let mode: \"static\" | \"dynamic\";\n\texport let value: null | FileData | string = null;\n\texport let name: string;\n\texport let source: \"microphone\" | \"upload\";\n\texport let label: string;\n\texport let root: string;\n\texport let show_label: boolean;\n\texport let pending: boolean;\n\texport let streaming: boolean;\n\texport let root_url: null | string;\n\n\texport let loading_status: LoadingStatus;\n\n\tlet _value: null | FileData;\n\t$: _value = normalise_file(value, root, root_url);\n\n\tlet dragging: boolean;\n</script>\n\n<Block\n\tvariant={mode === \"dynamic\" && value === null && source === \"upload\"\n\t\t? \"dashed\"\n\t\t: \"solid\"}\n\tborder_mode={dragging ? \"focus\" : \"base\"}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\t{visible}\n>\n\t<StatusTracker {...loading_status} />\n\n\t{#if mode === \"dynamic\"}\n\t\t<Audio\n\t\t\t{label}\n\t\t\t{show_label}\n\t\t\tvalue={_value}\n\t\t\ton:change={({ detail }) => {\n\t\t\t\tvalue = detail;\n\t\t\t\tdispatch(\"change\", value);\n\t\t\t}}\n\t\t\ton:stream={({ detail }) => {\n\t\t\t\tvalue = detail;\n\t\t\t\tdispatch(\"stream\", value);\n\t\t\t}}\n\t\t\ton:drag={({ detail }) => (dragging = detail)}\n\t\t\t{name}\n\t\t\t{source}\n\t\t\t{pending}\n\t\t\t{streaming}\n\t\t\ton:edit\n\t\t\ton:play\n\t\t\ton:pause\n\t\t\ton:ended\n\t\t\ton:upload\n\t\t\ton:error={({ detail }) => {\n\t\t\t\tloading_status = loading_status || {};\n\t\t\t\tloading_status.status = \"error\";\n\t\t\t\tloading_status.message = detail;\n\t\t\t}}\n\t\t>\n\t\t\t<UploadText type=\"audio\" />\n\t\t</Audio>\n\t{:else}\n\t\t<StaticAudio\n\t\t\t{show_label}\n\t\t\tvalue={_value}\n\t\t\tname={_value?.name || \"audio_file\"}\n\t\t\t{label}\n\t\t/>\n\t{/if}\n</Block>\n","export { default as Component } from \"./Audio.svelte\";\nexport const modes = [\"static\", \"dynamic\"];\n\nexport const document = () => ({\n\ttype: {\n\t\tinput_payload: \"{ name: string; data: string }\",\n\t\tresponse_object: \"{ name: string; data: string, is_file: boolean }\"\n\t},\n\tdescription: {\n\t\tinput_payload: \"audio data as object with filename and base64 string\",\n\t\tresponse_object:\n\t\t\t\"object that includes path to audio file. The URL: {ROOT}file={name} contains the data\"\n\t},\n\texample_data: {\n\t\tname: \"audio.wav\",\n\t\tdata: \"data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQAAAAA=\"\n\t}\n});\n"],"file":"assets/index.e1c9d5ed.js"}