{"version":3,"file":"module.2849491a.js","sources":["../../../../ui/node_modules/.pnpm/media-encoder-host-broker@7.0.70/node_modules/media-encoder-host-broker/build/es2019/module.js","../../../../ui/node_modules/.pnpm/media-encoder-host@8.0.78/node_modules/media-encoder-host/build/es2019/worker/worker.js","../../../../ui/node_modules/.pnpm/media-encoder-host@8.0.78/node_modules/media-encoder-host/build/es2019/module.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js","../../../../ui/node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/symbols.js","../../../../ui/node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/patch.js","../../../../ui/node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/to-observer.js","../../../../ui/node_modules/.pnpm/subscribable-things@2.1.7/node_modules/subscribable-things/build/es2019/factories/on.js","../../../../ui/node_modules/.pnpm/subscribable-things@2.1.7/node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","../../../../ui/node_modules/.pnpm/subscribable-things@2.1.7/node_modules/subscribable-things/build/es2019/module.js","../../../../ui/node_modules/.pnpm/dashify@2.0.0/node_modules/dashify/index.js","../../../../ui/node_modules/.pnpm/indefinite-article@0.0.2/node_modules/indefinite-article/indefinite-article.js","../../../../ui/node_modules/.pnpm/compilerr@9.0.21/node_modules/compilerr/build/es2019/module.js","../../../../ui/node_modules/.pnpm/worker-factory@6.0.69/node_modules/worker-factory/build/es2019/helpers/error-renderers.js","../../../../ui/node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/add-recorder-audio-worklet-module.js","../../../../ui/node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/listener.js","../../../../ui/node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/post-message-factory.js","../../../../ui/node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/recorder-audio-worklet-node-factory.js","../../../../ui/node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/functions/validate-state.js","../../../../ui/node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/worklet/worklet.js","../../../../ui/node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/module.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-extended-exponential-ramp-to-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-extended-linear-ramp-to-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-set-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-set-value-curve-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-target-value-at-time.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/exponential-ramp-to-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/linear-ramp-to-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/any-ramp-to-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/set-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/set-value-curve-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-value-of-automation-event-at-index-at-time.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-end-time-and-value-of-previous-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/cancel-and-hold-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/cancel-scheduled-values-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-event-time.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-exponential-ramp-value-at-time.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-linear-ramp-value-at-time.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/interpolate-value.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-value-curve-value-at-time.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/set-target-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/classes/automation-event-list.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-cancel-and-hold-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-cancel-scheduled-values-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-exponential-ramp-to-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-linear-ramp-to-value-automation-event.js","../../../../ui/node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-set-target-automation-event.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/globals.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/constants.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/read-only-map.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/window.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","../../../../ui/node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/module.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js","../../../../ui/node_modules/.pnpm/multi-buffer-data-view@3.0.21/node_modules/multi-buffer-data-view/build/es2019/classes/multi-buffer-data-view.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/window.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js","../../../../ui/node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/module.js"],"sourcesContent":["import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nexport const wrap = createBroker({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n            encoderIds.delete(encoderId);\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={775:function(e,t,r){!function(e,t,r,n){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var a=o(t),s=o(r),i=o(n),c=function(e,t){return void 0===t?e:t.reduce((function(e,t){if(\"capitalize\"===t){var r=e.charAt(0).toUpperCase(),n=e.slice(1);return\"\".concat(r).concat(n)}return\"dashify\"===t?s.default(e):\"prependIndefiniteArticle\"===t?\"\".concat(i.default(e),\" \").concat(e):e}),e)},u=function(e){var t=e.name+e.modifiers.map((function(e){return\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\")})).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")},l=function(e,t){for(var r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[],o=r.exec(e);null!==o;){var s={modifiers:[],name:o[1]};if(void 0!==o[3])for(var i=/\\\\.[^(]+\\\\(\\\\)/g,l=i.exec(o[2]);null!==l;)s.modifiers.push(l[0].slice(1,-2)),l=i.exec(o[2]);n.push(s),o=r.exec(e)}var d=n.reduce((function(e,r){return e.map((function(e){return\"string\"==typeof e?e.split(u(r)).reduce((function(e,n,o){return 0===o?[n]:r.name in t?[].concat(a.default(e),[c(t[r.name],r.modifiers),n]):[].concat(a.default(e),[function(e){return c(e[r.name],r.modifiers)},n])}),[]):[e]})).reduce((function(e,t){return[].concat(a.default(e),a.default(t))}),[])}),[e]);return function(e){return d.reduce((function(t,r){return[].concat(a.default(t),\"string\"==typeof r?[r]:[r(e)])}),[]).join(\"\")}},d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:l(e.code,t),n=void 0===e.message?void 0:l(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,a=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},s=a.cause,i=a.missingParameters,c=void 0===n?new Error:new Error(n(i));return null!==s&&(c.cause=s),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}return o};e.compile=d,Object.defineProperty(e,\"__esModule\",{value:!0})}(t,r(106),r(881),r(507))},881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},107:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,a=2*o,s=function(e,t){return function(r){var s=t.get(r),i=void 0===s?r.size:s<a?s+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*a);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,c=r(i),u=s(c,i),l=t(u);e.addUniqueNumber=l,e.generateUniqueNumber=u,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),a=[\"honest\",\"hour\",\"hono\"];for(t in a)if(0==o.indexOf(a[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var s=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<s.length;t++)if(o.match(s[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t},768:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},907:(e,t,r)=>{var n=r(768);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},642:e=>{e.exports=function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},344:e=>{e.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")},e.exports.__esModule=!0,e.exports.default=e.exports},106:(e,t,r)=>{var n=r(907),o=r(642),a=r(906),s=r(344);e.exports=function(e){return n(e)||o(e)||a(e)||s()},e.exports.__esModule=!0,e.exports.default=e.exports},906:(e,t,r)=>{var n=r(768);e.exports=function(e,t){if(e){if(\"string\"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,r),a.exports}(()=>{\"use strict\";var e=r(775);const t=-32603,n=-32602,o=-32601,a=(0,e.compile)({message:'The requested method called \"\\${method}\" is not supported.',status:o}),s=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned no required result.',status:t}),i=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:t}),c=(0,e.compile)({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:n}),u=(e,t)=>async r=>{let{data:{id:n,method:o,params:c}}=r;const u=t[o];try{if(void 0===u)throw a({method:o});const t=void 0===c?u():u(c);if(void 0===t)throw s({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:a=[]}=r;e.postMessage({id:n,result:t},a)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}};var l=r(107);const d=new Map,f=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),a=(0,l.generateUniqueNumber)(d);return d.set(a,(()=>{o(),n.close(),d.delete(a)})),{result:a}},disconnect:e=>{let{portId:t}=e;const r=d.get(t);if(void 0===r)throw c({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),p=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0;const n=f(p,t,r),o=u(e,n);return e.addEventListener(\"message\",o),()=>e.removeEventListener(\"message\",o)},m=e=>{e.onmessage=null,e.close()},h=new WeakMap,g=new WeakMap,v=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t(\"connect\",{port:e},[e]);return h.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=h.get(e);if(void 0===r)throw new Error(\"The given port is not connected.\");await t(\"disconnect\",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var r;return e=>{const r=(e=>{if(g.has(e))return g.get(e);const t=new Map;return g.set(e,t),t})(e);e.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((a,s)=>{const i=(0,l.generateUniqueNumber)(r);r.set(i,{reject:s,resolve:a}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let a={};for(const[e,r]of Object.entries(t))a={...a,[e]:r({call:n,notify:o})};return{...a}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),w=async(e,t)=>{const r=v(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(o,[n,r]),n},x=new Map,y=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(x),M=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(x,y),b=new Map,E=((e,t)=>r=>{const[n,o,a,s]=t(r);return a?new Promise((t=>{o.onmessage=a=>{let{data:i}=a;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,s,i)}})):n.encode(r,null)})(m,M),A=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(b),_=((e,t,r)=>(n,o,a)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const s=r(o),{port1:i,port2:c}=new MessageChannel,u=[s,i,!0,a];return t.set(n,u),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),u[2]=!1):s.record(n,a,r)},c})(m,x,A),I=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(y);p(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await E(t):await I(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=_(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await w(b,t)}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst mediaEncoderHost = loadWorker(url);\nexport const connect = mediaEncoderHost.connect;\nexport const disconnect = mediaEncoderHost.disconnect;\nexport const encode = mediaEncoderHost.encode;\nexport const instantiate = mediaEncoderHost.instantiate;\nexport const isSupported = mediaEncoderHost.isSupported;\nexport const register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","export const createBlobEventFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        if (nativeBlobEventConstructor === null) {\n            throw new Error('A native BlobEvent could not be created.');\n        }\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n//# sourceMappingURL=blob-event-factory.js.map","export const createDecodeWebMChunk = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents = [];\n        let currentElementType = elementType;\n        let offset = 0;\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n                if (lengthAndType === null) {\n                    break;\n                }\n                const { length, type } = lengthAndType;\n                currentElementType = type;\n                offset += length;\n            }\n            else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n                if (contentAndLength === null) {\n                    break;\n                }\n                const { content, length } = contentAndLength;\n                currentElementType = null;\n                offset += length;\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n        return { contents, currentElementType, offset };\n    };\n};\n//# sourceMappingURL=decode-web-m-chunk.js.map","export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createEventTargetFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n        return window.document.createElement('p');\n    };\n};\n//# sourceMappingURL=event-target-factory.js.map","export const createInvalidModificationError = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-modification-error.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-state-error.js.map","export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        // Bug #14: Before v14.1 Safari did not support the BlobEvent.\n        window.BlobEvent !== undefined &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n            const canvasElement = window.document.createElement('canvas');\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n                setTimeout(() => mediaRecorder.stop(), 10);\n            }\n            catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map","export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map","export const createNativeBlobEventConstructor = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n    return null;\n};\n//# sourceMappingURL=native-blob-event-constructor.js.map","export const createNativeMediaRecorderFactory = (createInvalidModificationError, createNotSupportedError) => {\n    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n        const bufferedBlobs = [];\n        const dataAvailableListeners = new WeakMap();\n        const errorListeners = new WeakMap();\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n        const stopListeners = new WeakMap();\n        let isActive = true;\n        nativeMediaRecorder.addEventListener = ((addEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            setTimeout(() => {\n                                if (isActive && nativeMediaRecorder.state === 'inactive') {\n                                    bufferedBlobs.push(event.data);\n                                }\n                                else {\n                                    if (bufferedBlobs.length > 0) {\n                                        const blob = event.data;\n                                        Object.defineProperty(event, 'data', {\n                                            value: new Blob([...bufferedBlobs, blob], { type: blob.type })\n                                        });\n                                        bufferedBlobs.length = 0;\n                                    }\n                                    listener.call(nativeMediaRecorder, event);\n                                }\n                            });\n                        };\n                        dataAvailableListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'error') {\n                        // Bug #12 & #13: Firefox fires a regular event with an error property.\n                        patchedEventListener = (event) => {\n                            // Bug #3 & #4: Chrome throws an error event without any error.\n                            if (event.error === undefined) {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError() }));\n                                // Bug #1 & #2: Firefox throws an error event with an UnknownError.\n                            }\n                            else if (event.error.name === 'UnknownError') {\n                                const message = event.error.message;\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError(message) }));\n                            }\n                            else if (event instanceof ErrorEvent) {\n                                listener.call(nativeMediaRecorder, event);\n                            }\n                            else {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                            }\n                        };\n                        errorListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'stop') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            isActive = false;\n                            setTimeout(() => listener.call(nativeMediaRecorder, event));\n                        };\n                        stopListeners.set(listener, patchedEventListener);\n                    }\n                }\n                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.addEventListener);\n        nativeMediaRecorder.dispatchEvent = ((dispatchEvent) => {\n            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n            return (event) => {\n                let wasActive;\n                setTimeout(() => {\n                    wasActive = isActive;\n                    isActive = false;\n                });\n                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);\n                setTimeout(() => (isActive = wasActive));\n                return returnValue;\n            };\n        })(nativeMediaRecorder.dispatchEvent);\n        nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        const dataAvailableListener = dataAvailableListeners.get(listener);\n                        if (dataAvailableListener !== undefined) {\n                            patchedEventListener = dataAvailableListener;\n                        }\n                    }\n                    else if (type === 'error') {\n                        const errorListener = errorListeners.get(listener);\n                        if (errorListener !== undefined) {\n                            patchedEventListener = errorListener;\n                        }\n                    }\n                    else if (type === 'stop') {\n                        const stopListener = stopListeners.get(listener);\n                        if (stopListener !== undefined) {\n                            patchedEventListener = stopListener;\n                        }\n                    }\n                }\n                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.removeEventListener);\n        nativeMediaRecorder.start = ((start) => {\n            return (timeslice) => {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaRecorderOptions.mimeType !== undefined &&\n                    mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                    stream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                isActive = timeslice !== undefined;\n                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n            };\n        })(nativeMediaRecorder.start);\n        return nativeMediaRecorder;\n    };\n};\n//# sourceMappingURL=native-media-recorder.js.map","export const createNativeMediaRecorderConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-constructor.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=not-supported-error.js.map","export const createReadElementContent = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (type === 'master') {\n            return { content: null, length };\n        }\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n            return { content, length: length + value };\n        }\n        return { content: null, length: length + value };\n    };\n};\n//# sourceMappingURL=read-element-content.js.map","export const createReadElementType = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n        if (value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861) {\n            return { length, type: 'master' };\n        }\n        return { length, type: 'unknown' };\n    };\n};\n//# sourceMappingURL=read-element-type.js.map","export const createReadVariableSizeInteger = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n        if (length === null) {\n            return length;\n        }\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n        return { length, value };\n    };\n};\n//# sourceMappingURL=read-variable-size-integer.js.map","export const observable = Symbol.observable || \"@@observable\";\r\n//# sourceMappingURL=symbols.js.map","import { observable } from \"./symbols\";\r\nexport function patch(arg) {\r\n    if (!Symbol.observable) {\r\n        if (typeof arg === \"function\" &&\r\n            arg.prototype &&\r\n            arg.prototype[Symbol.observable]) {\r\n            arg.prototype[observable] = arg.prototype[Symbol.observable];\r\n            delete arg.prototype[Symbol.observable];\r\n        }\r\n        else {\r\n            arg[observable] = arg[Symbol.observable];\r\n            delete arg[Symbol.observable];\r\n        }\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=patch.js.map","const noop = () => { };\r\nconst rethrow = (error) => {\r\n    throw error;\r\n};\r\nexport function toObserver(observer) {\r\n    if (observer) {\r\n        if (observer.next && observer.error && observer.complete) {\r\n            return observer;\r\n        }\r\n        return {\r\n            complete: (observer.complete ?? noop).bind(observer),\r\n            error: (observer.error ?? rethrow).bind(observer),\r\n            next: (observer.next ?? noop).bind(observer),\r\n        };\r\n    }\r\n    return {\r\n        complete: noop,\r\n        error: rethrow,\r\n        next: noop,\r\n    };\r\n}\r\n//# sourceMappingURL=to-observer.js.map","export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","import dashify from 'dashify';\nimport indefiniteArticle from 'indefinite-article';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst applyModifiers = (name, modifiers) => {\n    if (modifiers === undefined) {\n        return name;\n    }\n    return modifiers.reduce((modifiedName, modifier) => {\n        if (modifier === 'capitalize') {\n            const head = modifiedName.charAt(0).toUpperCase();\n            const tail = modifiedName.slice(1);\n            return `${head}${tail}`;\n        }\n        if (modifier === 'dashify') {\n            return dashify(modifiedName);\n        }\n        if (modifier === 'prependIndefiniteArticle') {\n            return `${indefiniteArticle(modifiedName)} ${modifiedName}`;\n        }\n        return modifiedName;\n    }, name);\n};\nconst buildRegex = (variable) => {\n    const expression = variable.name + variable.modifiers.map((modifier) => `\\\\.${modifier}\\\\(\\\\)`).join('');\n    return new RegExp(`\\\\$\\\\{${expression}}`, 'g');\n};\nconst preRenderString = (string, parameters) => {\n    const expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n    const variables = [];\n    let expressionResult = expressionRegex.exec(string);\n    while (expressionResult !== null) {\n        const variable = {\n            modifiers: [],\n            name: expressionResult[1]\n        };\n        if (expressionResult[3] !== undefined) {\n            const modifiersRegex = /\\.[^(]+\\(\\)/g;\n            let modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n            while (modifiersRegexResult !== null) {\n                variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n                modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n            }\n        }\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n    }\n    const preRenderedParts = variables.reduce((parts, variable) => parts\n        .map((part) => {\n        if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce((prts, prt, index) => {\n                if (index === 0) {\n                    return [prt];\n                }\n                if (variable.name in parameters) {\n                    return [...prts, applyModifiers(parameters[variable.name], variable.modifiers), prt];\n                }\n                return [...prts, (prmtrs) => applyModifiers(prmtrs[variable.name], variable.modifiers), prt];\n            }, []);\n        }\n        return [part];\n    })\n        .reduce((prts, part) => [...prts, ...part], []), [string]);\n    return (missingParameters) => preRenderedParts\n        .reduce((renderedParts, preRenderedPart) => {\n        if (typeof preRenderedPart === 'string') {\n            return [...renderedParts, preRenderedPart];\n        }\n        return [...renderedParts, preRenderedPart(missingParameters)];\n    }, [])\n        .join('');\n};\nexport const compile = (template, knownParameters = {}) => {\n    const renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n    const renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n    function render(causeOrMissingParameters = {}, optionalCause) {\n        const hasNoOptionalCause = optionalCause === undefined &&\n            (causeOrMissingParameters instanceof Error ||\n                (causeOrMissingParameters.code !== undefined &&\n                    causeOrMissingParameters.code.slice(-9) === 'Exception'));\n        const { cause, missingParameters } = hasNoOptionalCause\n            ? {\n                cause: causeOrMissingParameters,\n                missingParameters: {}\n            }\n            : {\n                cause: optionalCause,\n                missingParameters: causeOrMissingParameters\n            };\n        const err = ((renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters))));\n        if (cause !== null) {\n            err.cause = cause;\n        }\n        if (renderCode !== undefined) {\n            err.code = renderCode(missingParameters);\n        }\n        if (template.status !== undefined) {\n            err.status = template.status;\n        }\n        return err;\n    }\n    return render;\n};\n//# sourceMappingURL=module.js.map","import { compile } from 'compilerr';\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nexport const renderMethodNotFoundError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport const renderMissingResponseError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnexpectedResultError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnknownPortIdError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n//# sourceMappingURL=error-renderers.js.map","export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map","export const createListener = (ongoingRequests) => {\n    return ({ data: message }) => {\n        const { id } = message;\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=listener.js.map","export const createPostMessageFactory = (generateUniqueNumber) => {\n    return (ongoingRequests, port) => {\n        return (message, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n//# sourceMappingURL=post-message-factory.js.map","export const createRecorderAudioWorkletNodeFactory = (createListener, createPostMessage, on, validateState) => {\n    return (audioWorkletNodeConstructor, context, options = {}) => {\n        const audioWorkletNode = new audioWorkletNodeConstructor(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n        audioWorkletNode.port.start();\n        let state = 'inactive';\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get() {\n                    return async () => {\n                        validateState(['recording'], state);\n                        state = 'paused';\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get() {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get() {\n                    return async (encoderPort) => {\n                        validateState(['inactive'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'record',\n                            params: { encoderPort }\n                        }, [encoderPort]);\n                    };\n                }\n            },\n            resume: {\n                get() {\n                    return async () => {\n                        validateState(['paused'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get() {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n                        state = 'stopped';\n                        try {\n                            await postMessage({ method: 'stop' });\n                        }\n                        finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n        return audioWorkletNode;\n    };\n};\n//# sourceMappingURL=recorder-audio-worklet-node-factory.js.map","export const validateState = (expectedStates, currentState) => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(`Expected the state to be ${expectedStates\n            .map((expectedState) => `\"${expectedState}\"`)\n            .join(' or ')} but it was \"${currentState}\".`);\n    }\n};\n//# sourceMappingURL=validate-state.js.map","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worklet.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(createListener, createPostMessageFactory(generateUniqueNumber), on, validateState);\nexport { isSupported };\n//# sourceMappingURL=module.js.map","export const createExtendedExponentialRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-extended-exponential-ramp-to-value-automation-event.js.map","export const createExtendedLinearRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-extended-linear-ramp-to-value-automation-event.js.map","export const createSetValueAutomationEvent = (value, startTime) => {\n    return { startTime, type: 'setValue', value };\n};\n//# sourceMappingURL=create-set-value-automation-event.js.map","export const createSetValueCurveAutomationEvent = (values, startTime, duration) => {\n    return { duration, startTime, type: 'setValueCurve', values };\n};\n//# sourceMappingURL=create-set-value-curve-automation-event.js.map","export const getTargetValueAtTime = (time, valueAtStartTime, { startTime, target, timeConstant }) => {\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n};\n//# sourceMappingURL=get-target-value-at-time.js.map","export const isExponentialRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'exponentialRampToValue';\n};\n//# sourceMappingURL=exponential-ramp-to-value-automation-event.js.map","export const isLinearRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'linearRampToValue';\n};\n//# sourceMappingURL=linear-ramp-to-value-automation-event.js.map","import { isExponentialRampToValueAutomationEvent } from './exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from './linear-ramp-to-value-automation-event';\nexport const isAnyRampToValueAutomationEvent = (automationEvent) => {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n};\n//# sourceMappingURL=any-ramp-to-value-automation-event.js.map","export const isSetValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValue';\n};\n//# sourceMappingURL=set-value-automation-event.js.map","export const isSetValueCurveAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValueCurve';\n};\n//# sourceMappingURL=set-value-curve-automation-event.js.map","import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n    const automationEvent = automationEvents[index];\n    return automationEvent === undefined\n        ? defaultValue\n        : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent)\n            ? automationEvent.value\n            : isSetValueCurveAutomationEvent(automationEvent)\n                ? automationEvent.values[automationEvent.values.length - 1]\n                : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};\n//# sourceMappingURL=get-value-of-automation-event-at-index-at-time.js.map","import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n    return currentAutomationEvent === undefined\n        ? [nextAutomationEvent.insertTime, defaultValue]\n        : isAnyRampToValueAutomationEvent(currentAutomationEvent)\n            ? [currentAutomationEvent.endTime, currentAutomationEvent.value]\n            : isSetValueAutomationEvent(currentAutomationEvent)\n                ? [currentAutomationEvent.startTime, currentAutomationEvent.value]\n                : isSetValueCurveAutomationEvent(currentAutomationEvent)\n                    ? [\n                        currentAutomationEvent.startTime + currentAutomationEvent.duration,\n                        currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n                    ]\n                    : [\n                        currentAutomationEvent.startTime,\n                        getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n                    ];\n};\n//# sourceMappingURL=get-end-time-and-value-of-previous-automation-event.js.map","export const isCancelAndHoldAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelAndHold';\n};\n//# sourceMappingURL=cancel-and-hold-automation-event.js.map","export const isCancelScheduledValuesAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelScheduledValues';\n};\n//# sourceMappingURL=cancel-scheduled-values-automation-event.js.map","import { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nexport const getEventTime = (automationEvent) => {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n    }\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n    }\n    return automationEvent.startTime;\n};\n//# sourceMappingURL=get-event-time.js.map","export const getExponentialRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    if (valueAtStartTime === value) {\n        return value;\n    }\n    if ((0 < valueAtStartTime && 0 < value) || (valueAtStartTime < 0 && value < 0)) {\n        return valueAtStartTime * (value / valueAtStartTime) ** ((time - startTime) / (endTime - startTime));\n    }\n    return 0;\n};\n//# sourceMappingURL=get-exponential-ramp-value-at-time.js.map","export const getLinearRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    return valueAtStartTime + ((time - startTime) / (endTime - startTime)) * (value - valueAtStartTime);\n};\n//# sourceMappingURL=get-linear-ramp-value-at-time.js.map","export const interpolateValue = (values, theoreticIndex) => {\n    const lowerIndex = Math.floor(theoreticIndex);\n    const upperIndex = Math.ceil(theoreticIndex);\n    if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n    }\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n};\n//# sourceMappingURL=interpolate-value.js.map","import { interpolateValue } from './interpolate-value';\nexport const getValueCurveValueAtTime = (time, { duration, startTime, values }) => {\n    const theoreticIndex = ((time - startTime) / duration) * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n};\n//# sourceMappingURL=get-value-curve-value-at-time.js.map","export const isSetTargetAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setTarget';\n};\n//# sourceMappingURL=set-target-automation-event.js.map","import { createExtendedExponentialRampToValueAutomationEvent } from '../functions/create-extended-exponential-ramp-to-value-automation-event';\nimport { createExtendedLinearRampToValueAutomationEvent } from '../functions/create-extended-linear-ramp-to-value-automation-event';\nimport { createSetValueAutomationEvent } from '../functions/create-set-value-automation-event';\nimport { createSetValueCurveAutomationEvent } from '../functions/create-set-value-curve-automation-event';\nimport { getEndTimeAndValueOfPreviousAutomationEvent } from '../functions/get-end-time-and-value-of-previous-automation-event';\nimport { getEventTime } from '../functions/get-event-time';\nimport { getExponentialRampValueAtTime } from '../functions/get-exponential-ramp-value-at-time';\nimport { getLinearRampValueAtTime } from '../functions/get-linear-ramp-value-at-time';\nimport { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { getValueCurveValueAtTime } from '../functions/get-value-curve-value-at-time';\nimport { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nimport { isSetTargetAutomationEvent } from '../guards/set-target-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport class AutomationEventList {\n    constructor(defaultValue) {\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n    }\n    [Symbol.iterator]() {\n        return this._automationEvents[Symbol.iterator]();\n    }\n    add(automationEvent) {\n        const eventTime = getEventTime(automationEvent);\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => {\n                if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                    return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n                }\n                return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            const removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n                this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n                const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n                if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                    if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                        throw new Error('The internal list is malformed.');\n                    }\n                    const startTime = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.startTime + lastAutomationEvent.duration\n                        : getEventTime(lastAutomationEvent);\n                    const startValue = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1]\n                        : lastAutomationEvent.value;\n                    const value = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent)\n                        : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                    const truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime)\n                        : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                    this._automationEvents.push(truncatedAutomationEvent);\n                }\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                    this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n                }\n                if (lastAutomationEvent !== undefined &&\n                    isSetValueCurveAutomationEvent(lastAutomationEvent) &&\n                    lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                    this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n                }\n            }\n        }\n        else {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > eventTime);\n            const previousAutomationEvent = index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[index - 1];\n            if (previousAutomationEvent !== undefined &&\n                isSetValueCurveAutomationEvent(previousAutomationEvent) &&\n                getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n                return false;\n            }\n            const persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent)\n                ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime)\n                : isLinearRampToValueAutomationEvent(automationEvent)\n                    ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime)\n                    : automationEvent;\n            if (index === -1) {\n                this._automationEvents.push(persistentAutomationEvent);\n            }\n            else {\n                if (isSetValueCurveAutomationEvent(automationEvent) &&\n                    eventTime + automationEvent.duration > getEventTime(this._automationEvents[index])) {\n                    return false;\n                }\n                this._automationEvents.splice(index, 0, persistentAutomationEvent);\n            }\n        }\n        return true;\n    }\n    flush(time) {\n        const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > time);\n        if (index > 1) {\n            const remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            const firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n                remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n        }\n    }\n    getValue(time) {\n        if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n        }\n        const indexOfNextEvent = this._automationEvents.findIndex((automationEvent) => getEventTime(automationEvent) > time);\n        const nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n        const indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n        const currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n        if (currentAutomationEvent !== undefined &&\n            isSetTargetAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueCurveAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n                return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n        if (currentAutomationEvent !== undefined &&\n            isAnyRampToValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getLinearRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        return this._defaultValue;\n    }\n}\n//# sourceMappingURL=automation-event-list.js.map","export const createCancelAndHoldAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelAndHold' };\n};\n//# sourceMappingURL=create-cancel-and-hold-automation-event.js.map","export const createCancelScheduledValuesAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelScheduledValues' };\n};\n//# sourceMappingURL=create-cancel-scheduled-values-automation-event.js.map","export const createExponentialRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-exponential-ramp-to-value-automation-event.js.map","export const createLinearRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-linear-ramp-to-value-automation-event.js.map","export const createSetTargetAutomationEvent = (target, startTime, timeConstant) => {\n    return { startTime, target, timeConstant, type: 'setTarget' };\n};\n//# sourceMappingURL=create-set-target-automation-event.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport { AudioBuffer, AudioBufferSourceNode, AudioWorkletNode, ConstantSourceNode, MediaStreamAudioSourceNode, MinimalAudioContext, addAudioWorkletModule } from 'standardized-audio-context';\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\nexport const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        var _a;\n        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n            return addAudioWorkletModule(audioContext, url);\n        });\n        let abortRecording = null;\n        let intervalId = null;\n        let promisedAudioNodesAndEncoderId = null;\n        let promisedPartialRecording = null;\n        let isAudioContextRunning = true;\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const resume = () => {\n            isAudioContextRunning = true;\n            return audioContext.resume();\n        };\n        const stop = () => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n            promisedAudioNodesAndEncoderId.then(async ({ constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n                await recorderAudioWorkletNode.stop();\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                constantSourceNode.stop();\n                const arrayBuffers = await encode(encoderId, null);\n                if (promisedAudioNodesAndEncoderId === null) {\n                    await suspend();\n                }\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                bufferedArrayBuffers.length = 0;\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n            promisedAudioNodesAndEncoderId = null;\n        };\n        const suspend = () => {\n            isAudioContextRunning = false;\n            return audioContext.suspend();\n        };\n        suspend();\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n            pause() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n            resume() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n            start(timeslice) {\n                var _a;\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                eventTarget.dispatchEvent(new Event('start'));\n                const audioTracks = mediaStream.getAudioTracks();\n                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n                const channelCount = audioTracks.length === 0\n                    ? 2\n                    : (_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2;\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() => createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n                    // Bug #17: Safari does throttle the processing on hidden tabs if there is no active audio output.\n                    const constantSourceNode = new ConstantSourceNode(audioContext, { offset: 0 });\n                    constantSourceNode.onended = () => constantSourceNode.disconnect();\n                    constantSourceNode.connect(audioContext.destination);\n                    constantSourceNode.start();\n                    await recorderAudioWorkletNode.record(port);\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n                    return { constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n                const tracks = mediaStream.getTracks();\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=web-audio-media-recorder.js.map","export class MultiBufferDataView {\n    constructor(buffers, byteOffset = 0, byteLength) {\n        if (byteOffset < 0 || (byteLength !== undefined && byteLength < 0)) {\n            throw new RangeError();\n        }\n        const availableBytes = buffers.reduce((length, buffer) => length + buffer.byteLength, 0);\n        if (byteOffset > availableBytes || (byteLength !== undefined && byteOffset + byteLength > availableBytes)) {\n            throw new RangeError();\n        }\n        const dataViews = [];\n        const effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        const truncatedBuffers = [];\n        let consumedByteLength = 0;\n        let truncatedByteOffset = byteOffset;\n        for (const buffer of buffers) {\n            if (truncatedBuffers.length === 0) {\n                if (buffer.byteLength > truncatedByteOffset) {\n                    consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                    const byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                    dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                    truncatedBuffers.push(buffer);\n                }\n                else {\n                    truncatedByteOffset -= buffer.byteLength;\n                }\n            }\n            else if (consumedByteLength < effectiveByteLength) {\n                consumedByteLength += buffer.byteLength;\n                const byteLengthOfDataView = consumedByteLength > effectiveByteLength\n                    ? buffer.byteLength - consumedByteLength + effectiveByteLength\n                    : buffer.byteLength;\n                dataViews.push(new DataView(buffer, 0, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n            }\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n    }\n    get buffers() {\n        return this._buffers;\n    }\n    get byteLength() {\n        return this._byteLength;\n    }\n    get byteOffset() {\n        return this._byteOffset;\n    }\n    getFloat32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getFloat32(0, littleEndian);\n    }\n    getFloat64(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n        this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n        this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n        this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n        return this._internalBuffer.getFloat64(0, littleEndian);\n    }\n    getInt16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getInt16(0, littleEndian);\n    }\n    getInt32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getInt32(0, littleEndian);\n    }\n    getInt8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n    }\n    getUint16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getUint16(0, littleEndian);\n    }\n    getUint32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getUint32(0, littleEndian);\n    }\n    getUint8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n    }\n    setFloat32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setFloat64(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat64(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n        this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n        this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n        this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n    }\n    setInt16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setInt32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setInt8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n    }\n    setUint16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setUint32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setUint8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n    }\n    _findDataViewWithOffset(byteOffset) {\n        let byteOffsetOfDataView = 0;\n        for (const dataView of this._dataViews) {\n            const byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n            if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n            }\n            byteOffsetOfDataView = byteOffsetOfNextDataView;\n        }\n        throw new RangeError();\n    }\n}\n//# sourceMappingURL=multi-buffer-data-view.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nexport const createWebmPcmMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const audioTracks = mediaStream.getAudioTracks();\n        const bufferedArrayBuffers = [];\n        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n        const channelCount = audioTracks.length === 0\n            ? undefined\n            : audioTracks[0].getSettings().channelCount;\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;\n        let promisedPartialRecording = null;\n        let stopRecording = () => { }; // tslint:disable-line:no-empty\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const stop = () => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n            stopRecording();\n            stopRecording = () => { }; // tslint:disable-line:no-empty\n            nativeMediaRecorder.stop();\n        };\n        nativeMediaRecorder.addEventListener('error', () => {\n            stop();\n            // Bug #3 & #4: Chrome throws an error event without any error.\n            eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n        });\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return nativeMediaRecorder.state;\n            },\n            pause() {\n                return nativeMediaRecorder.pause();\n            },\n            resume() {\n                return nativeMediaRecorder.resume();\n            },\n            start(timeslice) {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                if (nativeMediaRecorder.state === 'inactive') {\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort = instantiate(mimeType, sampleRate);\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n                    const removeEventListener = on(nativeMediaRecorder, 'dataavailable')(({ data }) => {\n                        pendingInvocations += 1;\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(async ({ dataView = null, elementType = null, encoderId, port }) => {\n                            const arrayBuffer = await data.arrayBuffer();\n                            pendingInvocations -= 1;\n                            const currentDataView = dataView === null\n                                ? new MultiBufferDataView([arrayBuffer])\n                                : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n                                if (lengthAndValue === null) {\n                                    return { dataView: currentDataView, elementType, encoderId, port };\n                                }\n                                const { value } = lengthAndValue;\n                                if (value !== 172351395) {\n                                    return { dataView, elementType, encoderId, port };\n                                }\n                                isRecording = true;\n                            }\n                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);\n                            const remainingDataView = offset < currentDataView.byteLength\n                                ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                : null;\n                            contents.forEach((content) => port.postMessage(content, content.map(({ buffer }) => buffer)));\n                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                encode(encoderId, null).then((arrayBuffers) => {\n                                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                                    bufferedArrayBuffers.length = 0;\n                                    eventTarget.dispatchEvent(new Event('stop'));\n                                });\n                                port.postMessage([]);\n                                port.close();\n                                removeEventListener();\n                            }\n                            return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                        });\n                    });\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice)));\n                    }\n                }\n                nativeMediaRecorder.start(100);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=webm-pcm-media-recorder.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const readVariableSizeIntegerLength = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n    const byte = dataView.getUint8(offset);\n    if (byte > 127) {\n        return 1;\n    }\n    if (byte > 63) {\n        return 2;\n    }\n    if (byte > 31) {\n        return 3;\n    }\n    if (byte > 15) {\n        return 4;\n    }\n    if (byte > 7) {\n        return 5;\n    }\n    if (byte > 3) {\n        return 6;\n    }\n    if (byte > 1) {\n        return 7;\n    }\n    if (byte > 0) {\n        return 8;\n    }\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n    return length === null ? null : length + 8;\n};\n//# sourceMappingURL=read-variable-size-integer-length.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderRegexes = [];\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\nconst createNativeMediaRecorder = createNativeMediaRecorderFactory(createInvalidModificationError, createNotSupportedError);\nconst mediaRecorderConstructor = createMediaRecorderConstructor(createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, createEventTargetConstructor(createEventTarget, wrapEventListener), nativeMediaRecorderConstructor);\nexport { mediaRecorderConstructor as MediaRecorder };\nexport const isSupported = () => createIsSupportedPromise(window);\nexport const register = async (port) => {\n    encoderRegexes.push(await rgstr(port));\n};\n//# sourceMappingURL=module.js.map"],"names":["loadWorker","register","createEventTargetConstructor","createInvalidStateError","createNotSupportedError","DEFAULT_OPTIONS","isNativeAudioNode","createWindow","wrapEventListener","window","AudioWorkletNode","AudioBufferSourceNode","MediaStreamAudioSourceNode","MinimalAudioContext","AudioBuffer","ConstantSourceNode","rgstr"],"mappings":"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"}