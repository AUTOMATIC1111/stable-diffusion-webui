{"version":3,"file":"module-fcbc0651.js","sources":["../../../../node_modules/.pnpm/media-encoder-host-broker@7.0.70/node_modules/media-encoder-host-broker/build/es2019/module.js","../../../../node_modules/.pnpm/media-encoder-host@8.0.78/node_modules/media-encoder-host/build/es2019/worker/worker.js","../../../../node_modules/.pnpm/media-encoder-host@8.0.78/node_modules/media-encoder-host/build/es2019/module.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/blob-event-factory.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/decode-web-m-chunk.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/event-target-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/event-target-factory.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/invalid-modification-error.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/invalid-state-error.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/is-supported-promise.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/media-recorder-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/native-blob-event-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/native-media-recorder-constructor.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/not-supported-error.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/read-element-content.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/read-element-type.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/read-variable-size-integer.js","../../../../node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/symbols.js","../../../../node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/patch.js","../../../../node_modules/.pnpm/rxjs-interop@2.0.0/node_modules/rxjs-interop/dist/esm/to-observer.js","../../../../node_modules/.pnpm/subscribable-things@2.1.7/node_modules/subscribable-things/build/es2019/factories/on.js","../../../../node_modules/.pnpm/subscribable-things@2.1.7/node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","../../../../node_modules/.pnpm/subscribable-things@2.1.7/node_modules/subscribable-things/build/es2019/module.js","../../../../node_modules/.pnpm/dashify@2.0.0/node_modules/dashify/index.js","../../../../node_modules/.pnpm/indefinite-article@0.0.2/node_modules/indefinite-article/indefinite-article.js","../../../../node_modules/.pnpm/compilerr@9.0.21/node_modules/compilerr/build/es2019/module.js","../../../../node_modules/.pnpm/worker-factory@6.0.69/node_modules/worker-factory/build/es2019/helpers/error-renderers.js","../../../../node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/add-recorder-audio-worklet-module.js","../../../../node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/listener.js","../../../../node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/post-message-factory.js","../../../../node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/factories/recorder-audio-worklet-node-factory.js","../../../../node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/functions/validate-state.js","../../../../node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/worklet/worklet.js","../../../../node_modules/.pnpm/recorder-audio-worklet@5.1.29/node_modules/recorder-audio-worklet/build/es2019/module.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-extended-exponential-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-extended-linear-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-set-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-set-value-curve-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-target-value-at-time.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/exponential-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/linear-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/any-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/set-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/set-value-curve-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-value-of-automation-event-at-index-at-time.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-end-time-and-value-of-previous-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/cancel-and-hold-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/cancel-scheduled-values-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-event-time.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-exponential-ramp-value-at-time.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-linear-ramp-value-at-time.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/interpolate-value.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/get-value-curve-value-at-time.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/guards/set-target-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/classes/automation-event-list.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-cancel-and-hold-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-cancel-scheduled-values-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-exponential-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-linear-ramp-to-value-automation-event.js","../../../../node_modules/.pnpm/automation-events@4.0.21/node_modules/automation-events/build/es2019/functions/create-set-target-automation-event.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/globals.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/constants.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/read-only-map.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/window.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/get-first-sample.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/test-audio-worklet-node-options-clonability.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","../../../../node_modules/.pnpm/standardized-audio-context@25.3.32/node_modules/standardized-audio-context/build/es2019/module.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/web-audio-media-recorder.js","../../../../node_modules/.pnpm/multi-buffer-data-view@3.0.21/node_modules/multi-buffer-data-view/build/es2019/classes/multi-buffer-data-view.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/webm-pcm-media-recorder.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/factories/window.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/functions/read-variable-size-integer-length.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/functions/wrap-event-listener.js","../../../../node_modules/.pnpm/extendable-media-recorder@7.0.2/node_modules/extendable-media-recorder/build/es2019/module.js"],"sourcesContent":["import { createBroker } from 'broker-factory';\nimport { addUniqueNumber } from 'fast-unique-numbers';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderIds = new Set();\nexport const wrap = createBroker({\n    encode: ({ call }) => {\n        return async (encoderId, timeslice) => {\n            const arrayBuffers = await call('encode', { encoderId, timeslice });\n            encoderIds.delete(encoderId);\n            return arrayBuffers;\n        };\n    },\n    instantiate: ({ call }) => {\n        return async (mimeType, sampleRate) => {\n            const encoderId = addUniqueNumber(encoderIds);\n            const port = await call('instantiate', { encoderId, mimeType, sampleRate });\n            return { encoderId, port };\n        };\n    },\n    register: ({ call }) => {\n        return (port) => {\n            return call('register', { port }, [port]);\n        };\n    }\n});\nexport const load = (url) => {\n    const worker = new Worker(url);\n    return wrap(worker);\n};\n//# sourceMappingURL=module.js.map","// This is the minified and stringified code of the media-encoder-host-worker package.\nexport const worker = `(()=>{var e={775:function(e,t,r){!function(e,t,r,n){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var a=o(t),s=o(r),i=o(n),c=function(e,t){return void 0===t?e:t.reduce((function(e,t){if(\"capitalize\"===t){var r=e.charAt(0).toUpperCase(),n=e.slice(1);return\"\".concat(r).concat(n)}return\"dashify\"===t?s.default(e):\"prependIndefiniteArticle\"===t?\"\".concat(i.default(e),\" \").concat(e):e}),e)},u=function(e){var t=e.name+e.modifiers.map((function(e){return\"\\\\\\\\.\".concat(e,\"\\\\\\\\(\\\\\\\\)\")})).join(\"\");return new RegExp(\"\\\\\\\\$\\\\\\\\{\".concat(t,\"}\"),\"g\")},l=function(e,t){for(var r=/\\\\\\${([^.}]+)((\\\\.[^(]+\\\\(\\\\))*)}/g,n=[],o=r.exec(e);null!==o;){var s={modifiers:[],name:o[1]};if(void 0!==o[3])for(var i=/\\\\.[^(]+\\\\(\\\\)/g,l=i.exec(o[2]);null!==l;)s.modifiers.push(l[0].slice(1,-2)),l=i.exec(o[2]);n.push(s),o=r.exec(e)}var d=n.reduce((function(e,r){return e.map((function(e){return\"string\"==typeof e?e.split(u(r)).reduce((function(e,n,o){return 0===o?[n]:r.name in t?[].concat(a.default(e),[c(t[r.name],r.modifiers),n]):[].concat(a.default(e),[function(e){return c(e[r.name],r.modifiers)},n])}),[]):[e]})).reduce((function(e,t){return[].concat(a.default(e),a.default(t))}),[])}),[e]);return function(e){return d.reduce((function(t,r){return[].concat(a.default(t),\"string\"==typeof r?[r]:[r(e)])}),[]).join(\"\")}},d=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:l(e.code,t),n=void 0===e.message?void 0:l(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,a=void 0===o&&(t instanceof Error||void 0!==t.code&&\"Exception\"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},s=a.cause,i=a.missingParameters,c=void 0===n?new Error:new Error(n(i));return null!==s&&(c.cause=s),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}return o};e.compile=d,Object.defineProperty(e,\"__esModule\",{value:!0})}(t,r(106),r(881),r(507))},881:e=>{\"use strict\";e.exports=(e,t)=>{if(\"string\"!=typeof e)throw new TypeError(\"expected a string\");return e.trim().replace(/([a-z])([A-Z])/g,\"$1-$2\").replace(/\\\\W/g,(e=>/[À-ž]/.test(e)?e:\"-\")).replace(/^-+|-+$/g,\"\").replace(/-{2,}/g,(e=>t&&t.condense?\"-\":e)).toLowerCase()}},107:function(e,t){!function(e){\"use strict\";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,a=2*o,s=function(e,t){return function(r){var s=t.get(r),i=void 0===s?r.size:s<a?s+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*a);return e(r,i)}if(r.size>n)throw new Error(\"Congratulations, you created a collection of unique numbers which uses all available integers!\");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,c=r(i),u=s(c,i),l=t(u);e.addUniqueNumber=l,e.generateUniqueNumber=u,Object.defineProperty(e,\"__esModule\",{value:!0})}(t)},507:e=>{var t=function(e){var t,r,n=/\\\\w+/.exec(e);if(!n)return\"an\";var o=(r=n[0]).toLowerCase(),a=[\"honest\",\"hour\",\"hono\"];for(t in a)if(0==o.indexOf(a[t]))return\"an\";if(1==o.length)return\"aedhilmnorsx\".indexOf(o)>=0?\"an\":\"a\";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return\"an\";var s=[/^e[uw]/,/^onc?e\\\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<s.length;t++)if(o.match(s[t]))return\"a\";return r.match(/^U[NK][AIEO]/)?\"a\":r==r.toUpperCase()?\"aedhilmnorsx\".indexOf(o[0])>=0?\"an\":\"a\":\"aeiou\".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?\"an\":\"a\"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t},768:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},907:(e,t,r)=>{var n=r(768);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},642:e=>{e.exports=function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},344:e=>{e.exports=function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")},e.exports.__esModule=!0,e.exports.default=e.exports},106:(e,t,r)=>{var n=r(907),o=r(642),a=r(906),s=r(344);e.exports=function(e){return n(e)||o(e)||a(e)||s()},e.exports.__esModule=!0,e.exports.default=e.exports},906:(e,t,r)=>{var n=r(768);e.exports=function(e,t){if(e){if(\"string\"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n].call(a.exports,a,a.exports,r),a.exports}(()=>{\"use strict\";var e=r(775);const t=-32603,n=-32602,o=-32601,a=(0,e.compile)({message:'The requested method called \"\\${method}\" is not supported.',status:o}),s=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned no required result.',status:t}),i=(0,e.compile)({message:'The handler of the method called \"\\${method}\" returned an unexpected result.',status:t}),c=(0,e.compile)({message:'The specified parameter called \"portId\" with the given value \"\\${portId}\" does not identify a port connected to this worker.',status:n}),u=(e,t)=>async r=>{let{data:{id:n,method:o,params:c}}=r;const u=t[o];try{if(void 0===u)throw a({method:o});const t=void 0===c?u():u(c);if(void 0===t)throw s({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:a=[]}=r;e.postMessage({id:n,result:t},a)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}};var l=r(107);const d=new Map,f=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),a=(0,l.generateUniqueNumber)(d);return d.set(a,(()=>{o(),n.close(),d.delete(a)})),{result:a}},disconnect:e=>{let{portId:t}=e;const r=d.get(t);if(void 0===r)throw c({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),p=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0;const n=f(p,t,r),o=u(e,n);return e.addEventListener(\"message\",o),()=>e.removeEventListener(\"message\",o)},m=e=>{e.onmessage=null,e.close()},h=new WeakMap,g=new WeakMap,v=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t(\"connect\",{port:e},[e]);return h.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=h.get(e);if(void 0===r)throw new Error(\"The given port is not connected.\");await t(\"disconnect\",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t(\"isSupported\")}});var r;return e=>{const r=(e=>{if(g.has(e))return g.get(e);const t=new Map;return g.set(e,t),t})(e);e.addEventListener(\"message\",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>\"function\"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((a,s)=>{const i=(0,l.generateUniqueNumber)(r);r.set(i,{reject:s,resolve:a}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let a={};for(const[e,r]of Object.entries(t))a={...a,[e]:r({call:n,notify:o})};return{...a}}})({characterize:e=>{let{call:t}=e;return()=>t(\"characterize\")},encode:e=>{let{call:t}=e;return(e,r)=>t(\"encode\",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t(\"record\",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),w=async(e,t)=>{const r=v(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error(\"There is already an encoder stored which handles exactly the same mime types.\");return e.set(o,[n,r]),n},x=new Map,y=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error(\"There was no instance of an encoder stored with the given id.\");return r})(x),M=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(x,y),b=new Map,E=((e,t)=>r=>{const[n,o,a,s]=t(r);return a?new Promise((t=>{o.onmessage=a=>{let{data:i}=a;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,s,i)}})):n.encode(r,null)})(m,M),A=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error(\"There is no encoder registered which could handle the given mimeType.\")})(b),_=((e,t,r)=>(n,o,a)=>{if(t.has(n))throw new Error('There is already an encoder registered with an id called \"'.concat(n,'\".'));const s=r(o),{port1:i,port2:c}=new MessageChannel,u=[s,i,!0,a];return t.set(n,u),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),u[2]=!1):s.record(n,a,r)},c})(m,x,A),I=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(y);p(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await E(t):await I(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=_(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await w(b,t)}}})})()})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worker.js.map","import { load as loadWorker } from 'media-encoder-host-broker';\nimport { worker } from './worker/worker';\nconst blob = new Blob([worker], { type: 'application/javascript; charset=utf-8' });\nconst url = URL.createObjectURL(blob);\nconst mediaEncoderHost = loadWorker(url);\nexport const connect = mediaEncoderHost.connect;\nexport const disconnect = mediaEncoderHost.disconnect;\nexport const encode = mediaEncoderHost.encode;\nexport const instantiate = mediaEncoderHost.instantiate;\nexport const isSupported = mediaEncoderHost.isSupported;\nexport const register = mediaEncoderHost.register;\nURL.revokeObjectURL(url);\n//# sourceMappingURL=module.js.map","export const createBlobEventFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        if (nativeBlobEventConstructor === null) {\n            throw new Error('A native BlobEvent could not be created.');\n        }\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n//# sourceMappingURL=blob-event-factory.js.map","export const createDecodeWebMChunk = (readElementContent, readElementType) => {\n    return (dataView, elementType, channelCount) => {\n        const contents = [];\n        let currentElementType = elementType;\n        let offset = 0;\n        while (offset < dataView.byteLength) {\n            if (currentElementType === null) {\n                const lengthAndType = readElementType(dataView, offset);\n                if (lengthAndType === null) {\n                    break;\n                }\n                const { length, type } = lengthAndType;\n                currentElementType = type;\n                offset += length;\n            }\n            else {\n                const contentAndLength = readElementContent(dataView, offset, currentElementType, channelCount);\n                if (contentAndLength === null) {\n                    break;\n                }\n                const { content, length } = contentAndLength;\n                currentElementType = null;\n                offset += length;\n                if (content !== null) {\n                    contents.push(content);\n                }\n            }\n        }\n        return { contents, currentElementType, offset };\n    };\n};\n//# sourceMappingURL=decode-web-m-chunk.js.map","export const createEventTargetConstructor = (createEventTarget, wrapEventListener) => {\n    return class EventTarget {\n        constructor(nativeEventTarget = null) {\n            this._listeners = new WeakMap();\n            this._nativeEventTarget = nativeEventTarget === null ? createEventTarget() : nativeEventTarget;\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createEventTargetFactory = (window) => {\n    return () => {\n        if (window === null) {\n            throw new Error('A native EventTarget could not be created.');\n        }\n        return window.document.createElement('p');\n    };\n};\n//# sourceMappingURL=event-target-factory.js.map","export const createInvalidModificationError = (message = '') => {\n    try {\n        return new DOMException(message, 'InvalidModificationError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 13;\n        err.message = message;\n        err.name = 'InvalidModificationError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-modification-error.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=invalid-state-error.js.map","export const createIsSupportedPromise = (window) => {\n    if (window !== null &&\n        // Bug #14: Before v14.1 Safari did not support the BlobEvent.\n        window.BlobEvent !== undefined &&\n        window.MediaStream !== undefined &&\n        /*\n         * Bug #10: An early experimental implemenation in Safari did not provide the isTypeSupported() function.\n         */\n        (window.MediaRecorder === undefined || window.MediaRecorder.isTypeSupported !== undefined)) {\n        /*\n         * Bug #5: Up until v70 Firefox did emit a blob of type video/webm when asked to encode a MediaStream with a video track into an\n         * audio codec.\n         */\n        return new Promise((resolve) => {\n            // Bug #11 Safari does not yet support the MediaRecorder but that isn't tested here.\n            if (window.MediaRecorder === undefined) {\n                return resolve(true);\n            }\n            const canvasElement = window.document.createElement('canvas');\n            // @todo https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n            canvasElement.getContext('2d');\n            if (typeof canvasElement.captureStream !== 'function') {\n                return resolve(false);\n            }\n            const mediaStream = canvasElement.captureStream();\n            const mimeType = 'audio/webm';\n            try {\n                const mediaRecorder = new window.MediaRecorder(mediaStream, { mimeType });\n                mediaRecorder.addEventListener('dataavailable', ({ data }) => resolve(data.type === mimeType));\n                mediaRecorder.start();\n                setTimeout(() => mediaRecorder.stop(), 10);\n            }\n            catch (err) {\n                resolve(err.name === 'NotSupportedError');\n            }\n        });\n    }\n    return Promise.resolve(false);\n};\n//# sourceMappingURL=is-supported-promise.js.map","export const createMediaRecorderConstructor = (createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, eventTargetConstructor, nativeMediaRecorderConstructor) => {\n    return class MediaRecorder extends eventTargetConstructor {\n        constructor(stream, options = {}) {\n            const { mimeType } = options;\n            if (nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                (mimeType === undefined ||\n                    (nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                        nativeMediaRecorderConstructor.isTypeSupported(mimeType)))) {\n                const internalMediaRecorder = createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                super(internalMediaRecorder);\n                this._internalMediaRecorder = internalMediaRecorder;\n            }\n            else if (mimeType !== undefined && encoderRegexes.some((regex) => regex.test(mimeType))) {\n                super();\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                if (nativeMediaRecorderConstructor !== null &&\n                    nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                    nativeMediaRecorderConstructor.isTypeSupported('audio/webm;codecs=pcm')) {\n                    this._internalMediaRecorder = createWebmPcmMediaRecorder(this, nativeMediaRecorderConstructor, stream, mimeType);\n                }\n                else {\n                    this._internalMediaRecorder = createWebAudioMediaRecorder(this, stream, mimeType);\n                }\n            }\n            else {\n                // This is creating a native MediaRecorder just to provoke it to throw an error.\n                if (nativeMediaRecorderConstructor !== null) {\n                    createNativeMediaRecorder(nativeMediaRecorderConstructor, stream, options);\n                }\n                throw createNotSupportedError();\n            }\n            this._ondataavailable = null;\n            this._onerror = null;\n            this._onpause = null;\n            this._onresume = null;\n            this._onstart = null;\n            this._onstop = null;\n        }\n        get mimeType() {\n            return this._internalMediaRecorder.mimeType;\n        }\n        get ondataavailable() {\n            return this._ondataavailable === null ? this._ondataavailable : this._ondataavailable[0];\n        }\n        set ondataavailable(value) {\n            if (this._ondataavailable !== null) {\n                this.removeEventListener('dataavailable', this._ondataavailable[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('dataavailable', boundListener);\n                this._ondataavailable = [value, boundListener];\n            }\n            else {\n                this._ondataavailable = null;\n            }\n        }\n        get onerror() {\n            return this._onerror === null ? this._onerror : this._onerror[0];\n        }\n        set onerror(value) {\n            if (this._onerror !== null) {\n                this.removeEventListener('error', this._onerror[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('error', boundListener);\n                this._onerror = [value, boundListener];\n            }\n            else {\n                this._onerror = null;\n            }\n        }\n        get onpause() {\n            return this._onpause === null ? this._onpause : this._onpause[0];\n        }\n        set onpause(value) {\n            if (this._onpause !== null) {\n                this.removeEventListener('pause', this._onpause[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('pause', boundListener);\n                this._onpause = [value, boundListener];\n            }\n            else {\n                this._onpause = null;\n            }\n        }\n        get onresume() {\n            return this._onresume === null ? this._onresume : this._onresume[0];\n        }\n        set onresume(value) {\n            if (this._onresume !== null) {\n                this.removeEventListener('resume', this._onresume[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('resume', boundListener);\n                this._onresume = [value, boundListener];\n            }\n            else {\n                this._onresume = null;\n            }\n        }\n        get onstart() {\n            return this._onstart === null ? this._onstart : this._onstart[0];\n        }\n        set onstart(value) {\n            if (this._onstart !== null) {\n                this.removeEventListener('start', this._onstart[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('start', boundListener);\n                this._onstart = [value, boundListener];\n            }\n            else {\n                this._onstart = null;\n            }\n        }\n        get onstop() {\n            return this._onstop === null ? this._onstop : this._onstop[0];\n        }\n        set onstop(value) {\n            if (this._onstop !== null) {\n                this.removeEventListener('stop', this._onstop[1]);\n            }\n            if (typeof value === 'function') {\n                const boundListener = value.bind(this);\n                this.addEventListener('stop', boundListener);\n                this._onstop = [value, boundListener];\n            }\n            else {\n                this._onstop = null;\n            }\n        }\n        get state() {\n            return this._internalMediaRecorder.state;\n        }\n        pause() {\n            return this._internalMediaRecorder.pause();\n        }\n        resume() {\n            return this._internalMediaRecorder.resume();\n        }\n        start(timeslice) {\n            return this._internalMediaRecorder.start(timeslice);\n        }\n        stop() {\n            return this._internalMediaRecorder.stop();\n        }\n        static isTypeSupported(mimeType) {\n            return ((nativeMediaRecorderConstructor !== null &&\n                // Bug #10: Safari does not yet implement the isTypeSupported() method.\n                nativeMediaRecorderConstructor.isTypeSupported !== undefined &&\n                nativeMediaRecorderConstructor.isTypeSupported(mimeType)) ||\n                encoderRegexes.some((regex) => regex.test(mimeType)));\n        }\n    };\n};\n//# sourceMappingURL=media-recorder-constructor.js.map","export const createNativeBlobEventConstructor = (window) => {\n    if (window !== null && window.BlobEvent !== undefined) {\n        return window.BlobEvent;\n    }\n    return null;\n};\n//# sourceMappingURL=native-blob-event-constructor.js.map","export const createNativeMediaRecorderFactory = (createInvalidModificationError, createNotSupportedError) => {\n    return (nativeMediaRecorderConstructor, stream, mediaRecorderOptions) => {\n        const bufferedBlobs = [];\n        const dataAvailableListeners = new WeakMap();\n        const errorListeners = new WeakMap();\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(stream, mediaRecorderOptions);\n        const stopListeners = new WeakMap();\n        let isActive = true;\n        nativeMediaRecorder.addEventListener = ((addEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            setTimeout(() => {\n                                if (isActive && nativeMediaRecorder.state === 'inactive') {\n                                    bufferedBlobs.push(event.data);\n                                }\n                                else {\n                                    if (bufferedBlobs.length > 0) {\n                                        const blob = event.data;\n                                        Object.defineProperty(event, 'data', {\n                                            value: new Blob([...bufferedBlobs, blob], { type: blob.type })\n                                        });\n                                        bufferedBlobs.length = 0;\n                                    }\n                                    listener.call(nativeMediaRecorder, event);\n                                }\n                            });\n                        };\n                        dataAvailableListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'error') {\n                        // Bug #12 & #13: Firefox fires a regular event with an error property.\n                        patchedEventListener = (event) => {\n                            // Bug #3 & #4: Chrome throws an error event without any error.\n                            if (event.error === undefined) {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError() }));\n                                // Bug #1 & #2: Firefox throws an error event with an UnknownError.\n                            }\n                            else if (event.error.name === 'UnknownError') {\n                                const message = event.error.message;\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: createInvalidModificationError(message) }));\n                            }\n                            else if (event instanceof ErrorEvent) {\n                                listener.call(nativeMediaRecorder, event);\n                            }\n                            else {\n                                listener.call(nativeMediaRecorder, new ErrorEvent('error', { error: event.error }));\n                            }\n                        };\n                        errorListeners.set(listener, patchedEventListener);\n                    }\n                    else if (type === 'stop') {\n                        // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n                        patchedEventListener = (event) => {\n                            isActive = false;\n                            setTimeout(() => listener.call(nativeMediaRecorder, event));\n                        };\n                        stopListeners.set(listener, patchedEventListener);\n                    }\n                }\n                return addEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.addEventListener);\n        nativeMediaRecorder.dispatchEvent = ((dispatchEvent) => {\n            // Bug #7 & #8: Chrome fires the dataavailable and stop events before it fires the error event.\n            return (event) => {\n                let wasActive;\n                setTimeout(() => {\n                    wasActive = isActive;\n                    isActive = false;\n                });\n                const returnValue = dispatchEvent.call(nativeMediaRecorder, event);\n                setTimeout(() => (isActive = wasActive));\n                return returnValue;\n            };\n        })(nativeMediaRecorder.dispatchEvent);\n        nativeMediaRecorder.removeEventListener = ((removeEventListener) => {\n            return (type, listener, options) => {\n                let patchedEventListener = listener;\n                if (typeof listener === 'function') {\n                    if (type === 'dataavailable') {\n                        const dataAvailableListener = dataAvailableListeners.get(listener);\n                        if (dataAvailableListener !== undefined) {\n                            patchedEventListener = dataAvailableListener;\n                        }\n                    }\n                    else if (type === 'error') {\n                        const errorListener = errorListeners.get(listener);\n                        if (errorListener !== undefined) {\n                            patchedEventListener = errorListener;\n                        }\n                    }\n                    else if (type === 'stop') {\n                        const stopListener = stopListeners.get(listener);\n                        if (stopListener !== undefined) {\n                            patchedEventListener = stopListener;\n                        }\n                    }\n                }\n                return removeEventListener.call(nativeMediaRecorder, type, patchedEventListener, options);\n            };\n        })(nativeMediaRecorder.removeEventListener);\n        nativeMediaRecorder.start = ((start) => {\n            return (timeslice) => {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaRecorderOptions.mimeType !== undefined &&\n                    mediaRecorderOptions.mimeType.startsWith('audio/') &&\n                    stream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                isActive = timeslice !== undefined;\n                return timeslice === undefined ? start.call(nativeMediaRecorder) : start.call(nativeMediaRecorder, timeslice);\n            };\n        })(nativeMediaRecorder.start);\n        return nativeMediaRecorder;\n    };\n};\n//# sourceMappingURL=native-media-recorder.js.map","export const createNativeMediaRecorderConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.MediaRecorder === undefined ? null : window.MediaRecorder;\n};\n//# sourceMappingURL=native-media-recorder-constructor.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // @todo Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=not-supported-error.js.map","export const createReadElementContent = (readVariableSizeInteger) => {\n    return (dataView, offset, type, channelCount = 2) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (type === 'master') {\n            return { content: null, length };\n        }\n        if (offset + length + value > dataView.byteLength) {\n            return null;\n        }\n        if (type === 'binary') {\n            const numberOfSamples = (value / Float32Array.BYTES_PER_ELEMENT - 1) / channelCount;\n            const content = Array.from({ length: channelCount }, () => new Float32Array(numberOfSamples));\n            for (let i = 0; i < numberOfSamples; i += 1) {\n                const elementOffset = i * channelCount + 1;\n                for (let j = 0; j < channelCount; j += 1) {\n                    content[j][i] = dataView.getFloat32(offset + length + (elementOffset + j) * Float32Array.BYTES_PER_ELEMENT, true);\n                }\n            }\n            return { content, length: length + value };\n        }\n        return { content: null, length: length + value };\n    };\n};\n//# sourceMappingURL=read-element-content.js.map","export const createReadElementType = (readVariableSizeInteger) => {\n    return (dataView, offset) => {\n        const lengthAndValue = readVariableSizeInteger(dataView, offset);\n        if (lengthAndValue === null) {\n            return lengthAndValue;\n        }\n        const { length, value } = lengthAndValue;\n        if (value === 35) {\n            return { length, type: 'binary' };\n        }\n        if (value === 46 ||\n            value === 97 ||\n            value === 88713574 ||\n            value === 106212971 ||\n            value === 139690087 ||\n            value === 172351395 ||\n            value === 256095861) {\n            return { length, type: 'master' };\n        }\n        return { length, type: 'unknown' };\n    };\n};\n//# sourceMappingURL=read-element-type.js.map","export const createReadVariableSizeInteger = (readVariableSizeIntegerLength) => {\n    return (dataView, offset) => {\n        const length = readVariableSizeIntegerLength(dataView, offset);\n        if (length === null) {\n            return length;\n        }\n        const firstDataByteOffset = offset + Math.floor((length - 1) / 8);\n        if (firstDataByteOffset + length > dataView.byteLength) {\n            return null;\n        }\n        const firstDataByte = dataView.getUint8(firstDataByteOffset);\n        let value = firstDataByte & ((1 << (8 - (length % 8))) - 1); // tslint:disable-line:no-bitwise\n        for (let i = 1; i < length; i += 1) {\n            value = (value << 8) + dataView.getUint8(firstDataByteOffset + i); // tslint:disable-line:no-bitwise\n        }\n        return { length, value };\n    };\n};\n//# sourceMappingURL=read-variable-size-integer.js.map","export const observable = Symbol.observable || \"@@observable\";\r\n//# sourceMappingURL=symbols.js.map","import { observable } from \"./symbols\";\r\nexport function patch(arg) {\r\n    if (!Symbol.observable) {\r\n        if (typeof arg === \"function\" &&\r\n            arg.prototype &&\r\n            arg.prototype[Symbol.observable]) {\r\n            arg.prototype[observable] = arg.prototype[Symbol.observable];\r\n            delete arg.prototype[Symbol.observable];\r\n        }\r\n        else {\r\n            arg[observable] = arg[Symbol.observable];\r\n            delete arg[Symbol.observable];\r\n        }\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=patch.js.map","const noop = () => { };\r\nconst rethrow = (error) => {\r\n    throw error;\r\n};\r\nexport function toObserver(observer) {\r\n    if (observer) {\r\n        if (observer.next && observer.error && observer.complete) {\r\n            return observer;\r\n        }\r\n        return {\r\n            complete: (observer.complete ?? noop).bind(observer),\r\n            error: (observer.error ?? rethrow).bind(observer),\r\n            next: (observer.next ?? noop).bind(observer),\r\n        };\r\n    }\r\n    return {\r\n        complete: noop,\r\n        error: rethrow,\r\n        next: noop,\r\n    };\r\n}\r\n//# sourceMappingURL=to-observer.js.map","export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map","/*!\n * dashify <https://github.com/jonschlinkert/dashify>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = (str, options) => {\n  if (typeof str !== 'string') throw new TypeError('expected a string');\n  return str.trim()\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\W/g, m => /[À-ž]/.test(m) ? m : '-')\n    .replace(/^-+|-+$/g, '')\n    .replace(/-{2,}/g, m => options && options.condense ? '-' : m)\n    .toLowerCase();\n};\n","/*\n * indefinite-article.js v1.0.0, 12-18-2011\n *\n * @author: Rodrigo Neri (@rigoneri)\n *\n * (The MIT License)\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar indefiniteArticle = function(phrase) {\n    var i, word;\n\n    // Getting the first word\n    var match = /\\w+/.exec(phrase);\n    if (match)\n        word = match[0];\n    else\n        return \"an\";\n\n    var l_word = word.toLowerCase();\n    // Specific start of words that should be preceeded by 'an'\n    var alt_cases = [\"honest\", \"hour\", \"hono\"];\n    for (i in alt_cases) {\n        if (l_word.indexOf(alt_cases[i]) == 0)\n            return \"an\";\n    }\n\n    // Single letter word which should be preceeded by 'an'\n    if (l_word.length == 1) {\n        if (\"aedhilmnorsx\".indexOf(l_word) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Capital words which should likely be preceeded by 'an'\n    if (word.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/)) {\n        return \"an\";\n    }\n\n    // Special cases where a word that begins with a vowel should be preceeded by 'a'\n    var regexes = [/^e[uw]/, /^onc?e\\b/, /^uni([^nmd]|mo)/, /^u[bcfhjkqrst][aeiou]/];\n    for (i = 0; i < regexes.length; i++) {\n        if (l_word.match(regexes[i]))\n            return \"a\"\n    }\n\n    // Special capital words (UK, UN)\n    if (word.match(/^U[NK][AIEO]/)) {\n        return \"a\";\n    }\n    else if (word == word.toUpperCase()) {\n        if (\"aedhilmnorsx\".indexOf(l_word[0]) >= 0)\n            return \"an\";\n        else\n            return \"a\";\n    }\n\n    // Basic method of words that begin with a vowel being preceeded by 'an'\n    if (\"aeiou\".indexOf(l_word[0]) >= 0)\n        return \"an\";\n\n    // Instances where y follwed by specific letters is preceeded by 'an'\n    if (l_word.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/))\n        return \"an\";\n\n    return \"a\";\n};\n\nif ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\n    module.exports = indefiniteArticle;\n} else {\n    window.indefiniteArticle = indefiniteArticle;\n}\n","import dashify from 'dashify';\nimport indefiniteArticle from 'indefinite-article';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst applyModifiers = (name, modifiers) => {\n    if (modifiers === undefined) {\n        return name;\n    }\n    return modifiers.reduce((modifiedName, modifier) => {\n        if (modifier === 'capitalize') {\n            const head = modifiedName.charAt(0).toUpperCase();\n            const tail = modifiedName.slice(1);\n            return `${head}${tail}`;\n        }\n        if (modifier === 'dashify') {\n            return dashify(modifiedName);\n        }\n        if (modifier === 'prependIndefiniteArticle') {\n            return `${indefiniteArticle(modifiedName)} ${modifiedName}`;\n        }\n        return modifiedName;\n    }, name);\n};\nconst buildRegex = (variable) => {\n    const expression = variable.name + variable.modifiers.map((modifier) => `\\\\.${modifier}\\\\(\\\\)`).join('');\n    return new RegExp(`\\\\$\\\\{${expression}}`, 'g');\n};\nconst preRenderString = (string, parameters) => {\n    const expressionRegex = /\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g;\n    const variables = [];\n    let expressionResult = expressionRegex.exec(string);\n    while (expressionResult !== null) {\n        const variable = {\n            modifiers: [],\n            name: expressionResult[1]\n        };\n        if (expressionResult[3] !== undefined) {\n            const modifiersRegex = /\\.[^(]+\\(\\)/g;\n            let modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n            while (modifiersRegexResult !== null) {\n                variable.modifiers.push(modifiersRegexResult[0].slice(1, -2));\n                modifiersRegexResult = modifiersRegex.exec(expressionResult[2]);\n            }\n        }\n        variables.push(variable);\n        expressionResult = expressionRegex.exec(string);\n    }\n    const preRenderedParts = variables.reduce((parts, variable) => parts\n        .map((part) => {\n        if (typeof part === 'string') {\n            return part.split(buildRegex(variable)).reduce((prts, prt, index) => {\n                if (index === 0) {\n                    return [prt];\n                }\n                if (variable.name in parameters) {\n                    return [...prts, applyModifiers(parameters[variable.name], variable.modifiers), prt];\n                }\n                return [...prts, (prmtrs) => applyModifiers(prmtrs[variable.name], variable.modifiers), prt];\n            }, []);\n        }\n        return [part];\n    })\n        .reduce((prts, part) => [...prts, ...part], []), [string]);\n    return (missingParameters) => preRenderedParts\n        .reduce((renderedParts, preRenderedPart) => {\n        if (typeof preRenderedPart === 'string') {\n            return [...renderedParts, preRenderedPart];\n        }\n        return [...renderedParts, preRenderedPart(missingParameters)];\n    }, [])\n        .join('');\n};\nexport const compile = (template, knownParameters = {}) => {\n    const renderCode = template.code === undefined ? undefined : preRenderString(template.code, knownParameters);\n    const renderMessage = template.message === undefined ? undefined : preRenderString(template.message, knownParameters);\n    function render(causeOrMissingParameters = {}, optionalCause) {\n        const hasNoOptionalCause = optionalCause === undefined &&\n            (causeOrMissingParameters instanceof Error ||\n                (causeOrMissingParameters.code !== undefined &&\n                    causeOrMissingParameters.code.slice(-9) === 'Exception'));\n        const { cause, missingParameters } = hasNoOptionalCause\n            ? {\n                cause: causeOrMissingParameters,\n                missingParameters: {}\n            }\n            : {\n                cause: optionalCause,\n                missingParameters: causeOrMissingParameters\n            };\n        const err = ((renderMessage === undefined ? new Error() : new Error(renderMessage(missingParameters))));\n        if (cause !== null) {\n            err.cause = cause;\n        }\n        if (renderCode !== undefined) {\n            err.code = renderCode(missingParameters);\n        }\n        if (template.status !== undefined) {\n            err.status = template.status;\n        }\n        return err;\n    }\n    return render;\n};\n//# sourceMappingURL=module.js.map","import { compile } from 'compilerr';\nconst JSON_RPC_ERROR_CODES = { INTERNAL_ERROR: -32603, INVALID_PARAMS: -32602, METHOD_NOT_FOUND: -32601 };\nexport const renderMethodNotFoundError = compile({\n    message: 'The requested method called \"${method}\" is not supported.',\n    status: JSON_RPC_ERROR_CODES.METHOD_NOT_FOUND\n});\nexport const renderMissingResponseError = compile({\n    message: 'The handler of the method called \"${method}\" returned no required result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnexpectedResultError = compile({\n    message: 'The handler of the method called \"${method}\" returned an unexpected result.',\n    status: JSON_RPC_ERROR_CODES.INTERNAL_ERROR\n});\nexport const renderUnknownPortIdError = compile({\n    message: 'The specified parameter called \"portId\" with the given value \"${portId}\" does not identify a port connected to this worker.',\n    status: JSON_RPC_ERROR_CODES.INVALID_PARAMS\n});\n//# sourceMappingURL=error-renderers.js.map","export const createAddRecorderAudioWorkletModule = (blobConstructor, urlConstructor, worklet) => {\n    return async (addAudioWorkletModule) => {\n        const blob = new blobConstructor([worklet], { type: 'application/javascript; charset=utf-8' });\n        const url = urlConstructor.createObjectURL(blob);\n        try {\n            await addAudioWorkletModule(url);\n        }\n        finally {\n            urlConstructor.revokeObjectURL(url);\n        }\n    };\n};\n//# sourceMappingURL=add-recorder-audio-worklet-module.js.map","export const createListener = (ongoingRequests) => {\n    return ({ data: message }) => {\n        const { id } = message;\n        if (id !== null) {\n            const ongoingRequest = ongoingRequests.get(id);\n            if (ongoingRequest !== undefined) {\n                const { reject, resolve } = ongoingRequest;\n                ongoingRequests.delete(id);\n                if (message.error === undefined) {\n                    resolve(message.result);\n                }\n                else {\n                    reject(new Error(message.error.message));\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=listener.js.map","export const createPostMessageFactory = (generateUniqueNumber) => {\n    return (ongoingRequests, port) => {\n        return (message, transferables = []) => {\n            return new Promise((resolve, reject) => {\n                const id = generateUniqueNumber(ongoingRequests);\n                ongoingRequests.set(id, { reject, resolve });\n                port.postMessage({ id, ...message }, transferables);\n            });\n        };\n    };\n};\n//# sourceMappingURL=post-message-factory.js.map","export const createRecorderAudioWorkletNodeFactory = (createListener, createPostMessage, on, validateState) => {\n    return (audioWorkletNodeConstructor, context, options = {}) => {\n        const audioWorkletNode = new audioWorkletNodeConstructor(context, 'recorder-audio-worklet-processor', {\n            ...options,\n            channelCountMode: 'explicit',\n            numberOfInputs: 1,\n            numberOfOutputs: 0\n        });\n        const ongoingRequests = new Map();\n        const postMessage = createPostMessage(ongoingRequests, audioWorkletNode.port);\n        const unsubscribe = on(audioWorkletNode.port, 'message')(createListener(ongoingRequests));\n        audioWorkletNode.port.start();\n        let state = 'inactive';\n        Object.defineProperties(audioWorkletNode, {\n            pause: {\n                get() {\n                    return async () => {\n                        validateState(['recording'], state);\n                        state = 'paused';\n                        return postMessage({\n                            method: 'pause'\n                        });\n                    };\n                }\n            },\n            port: {\n                get() {\n                    throw new Error(\"The port of a RecorderAudioWorkletNode can't be accessed.\");\n                }\n            },\n            record: {\n                get() {\n                    return async (encoderPort) => {\n                        validateState(['inactive'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'record',\n                            params: { encoderPort }\n                        }, [encoderPort]);\n                    };\n                }\n            },\n            resume: {\n                get() {\n                    return async () => {\n                        validateState(['paused'], state);\n                        state = 'recording';\n                        return postMessage({\n                            method: 'resume'\n                        });\n                    };\n                }\n            },\n            stop: {\n                get() {\n                    return async () => {\n                        validateState(['paused', 'recording'], state);\n                        state = 'stopped';\n                        try {\n                            await postMessage({ method: 'stop' });\n                        }\n                        finally {\n                            unsubscribe();\n                        }\n                    };\n                }\n            }\n        });\n        return audioWorkletNode;\n    };\n};\n//# sourceMappingURL=recorder-audio-worklet-node-factory.js.map","export const validateState = (expectedStates, currentState) => {\n    if (!expectedStates.includes(currentState)) {\n        throw new Error(`Expected the state to be ${expectedStates\n            .map((expectedState) => `\"${expectedState}\"`)\n            .join(' or ')} but it was \"${currentState}\".`);\n    }\n};\n//# sourceMappingURL=validate-state.js.map","// This is the minified and stringified code of the recorder-audio-worklet-processor package.\nexport const worklet = `(()=>{\"use strict\";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state=\"inactive\",this.port.onmessage=e=>{let{data:t}=e;\"pause\"===t.method?\"active\"===this._state||\"recording\"===this._state?(this._state=\"paused\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"record\"===t.method?\"inactive\"===this._state?(this._encoderPort=t.params.encoderPort,this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"resume\"===t.method?\"paused\"===this._state?(this._state=\"active\",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):\"stop\"===t.method?\"active\"!==this._state&&\"paused\"!==this._state&&\"recording\"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):\"number\"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:\"The requested method is not supported.\"},id:t.id})}}process(e){let[t]=e;if(\"inactive\"===this._state||\"paused\"===this._state)return!0;if(\"active\"===this._state){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0===t.length)return!0;this._state=\"recording\"}if(\"recording\"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error(\"No channelData was received for the first input.\");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:\"The internal state does not allow to process the given message.\"},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state=\"stopped\"}}e.parameterDescriptors=[],registerProcessor(\"recorder-audio-worklet-processor\",e)})();`; // tslint:disable-line:max-line-length\n//# sourceMappingURL=worklet.js.map","import { generateUniqueNumber } from 'fast-unique-numbers';\nimport { on } from 'subscribable-things';\nimport { isSupported } from 'worker-factory';\nimport { createAddRecorderAudioWorkletModule } from './factories/add-recorder-audio-worklet-module';\nimport { createListener } from './factories/listener';\nimport { createPostMessageFactory } from './factories/post-message-factory';\nimport { createRecorderAudioWorkletNodeFactory } from './factories/recorder-audio-worklet-node-factory';\nimport { validateState } from './functions/validate-state';\nimport { worklet } from './worklet/worklet';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nexport const addRecorderAudioWorkletModule = createAddRecorderAudioWorkletModule(Blob, URL, worklet);\nexport const createRecorderAudioWorkletNode = createRecorderAudioWorkletNodeFactory(createListener, createPostMessageFactory(generateUniqueNumber), on, validateState);\nexport { isSupported };\n//# sourceMappingURL=module.js.map","export const createExtendedExponentialRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-extended-exponential-ramp-to-value-automation-event.js.map","export const createExtendedLinearRampToValueAutomationEvent = (value, endTime, insertTime) => {\n    return { endTime, insertTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-extended-linear-ramp-to-value-automation-event.js.map","export const createSetValueAutomationEvent = (value, startTime) => {\n    return { startTime, type: 'setValue', value };\n};\n//# sourceMappingURL=create-set-value-automation-event.js.map","export const createSetValueCurveAutomationEvent = (values, startTime, duration) => {\n    return { duration, startTime, type: 'setValueCurve', values };\n};\n//# sourceMappingURL=create-set-value-curve-automation-event.js.map","export const getTargetValueAtTime = (time, valueAtStartTime, { startTime, target, timeConstant }) => {\n    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n};\n//# sourceMappingURL=get-target-value-at-time.js.map","export const isExponentialRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'exponentialRampToValue';\n};\n//# sourceMappingURL=exponential-ramp-to-value-automation-event.js.map","export const isLinearRampToValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'linearRampToValue';\n};\n//# sourceMappingURL=linear-ramp-to-value-automation-event.js.map","import { isExponentialRampToValueAutomationEvent } from './exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from './linear-ramp-to-value-automation-event';\nexport const isAnyRampToValueAutomationEvent = (automationEvent) => {\n    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n};\n//# sourceMappingURL=any-ramp-to-value-automation-event.js.map","export const isSetValueAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValue';\n};\n//# sourceMappingURL=set-value-automation-event.js.map","export const isSetValueCurveAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setValueCurve';\n};\n//# sourceMappingURL=set-value-curve-automation-event.js.map","import { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getValueOfAutomationEventAtIndexAtTime = (automationEvents, index, time, defaultValue) => {\n    const automationEvent = automationEvents[index];\n    return automationEvent === undefined\n        ? defaultValue\n        : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent)\n            ? automationEvent.value\n            : isSetValueCurveAutomationEvent(automationEvent)\n                ? automationEvent.values[automationEvent.values.length - 1]\n                : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n};\n//# sourceMappingURL=get-value-of-automation-event-at-index-at-time.js.map","import { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport const getEndTimeAndValueOfPreviousAutomationEvent = (automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) => {\n    return currentAutomationEvent === undefined\n        ? [nextAutomationEvent.insertTime, defaultValue]\n        : isAnyRampToValueAutomationEvent(currentAutomationEvent)\n            ? [currentAutomationEvent.endTime, currentAutomationEvent.value]\n            : isSetValueAutomationEvent(currentAutomationEvent)\n                ? [currentAutomationEvent.startTime, currentAutomationEvent.value]\n                : isSetValueCurveAutomationEvent(currentAutomationEvent)\n                    ? [\n                        currentAutomationEvent.startTime + currentAutomationEvent.duration,\n                        currentAutomationEvent.values[currentAutomationEvent.values.length - 1]\n                    ]\n                    : [\n                        currentAutomationEvent.startTime,\n                        getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)\n                    ];\n};\n//# sourceMappingURL=get-end-time-and-value-of-previous-automation-event.js.map","export const isCancelAndHoldAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelAndHold';\n};\n//# sourceMappingURL=cancel-and-hold-automation-event.js.map","export const isCancelScheduledValuesAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'cancelScheduledValues';\n};\n//# sourceMappingURL=cancel-scheduled-values-automation-event.js.map","import { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nexport const getEventTime = (automationEvent) => {\n    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n    }\n    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n    }\n    return automationEvent.startTime;\n};\n//# sourceMappingURL=get-event-time.js.map","export const getExponentialRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    if (valueAtStartTime === value) {\n        return value;\n    }\n    if ((0 < valueAtStartTime && 0 < value) || (valueAtStartTime < 0 && value < 0)) {\n        return valueAtStartTime * (value / valueAtStartTime) ** ((time - startTime) / (endTime - startTime));\n    }\n    return 0;\n};\n//# sourceMappingURL=get-exponential-ramp-value-at-time.js.map","export const getLinearRampValueAtTime = (time, startTime, valueAtStartTime, { endTime, value }) => {\n    return valueAtStartTime + ((time - startTime) / (endTime - startTime)) * (value - valueAtStartTime);\n};\n//# sourceMappingURL=get-linear-ramp-value-at-time.js.map","export const interpolateValue = (values, theoreticIndex) => {\n    const lowerIndex = Math.floor(theoreticIndex);\n    const upperIndex = Math.ceil(theoreticIndex);\n    if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n    }\n    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n};\n//# sourceMappingURL=interpolate-value.js.map","import { interpolateValue } from './interpolate-value';\nexport const getValueCurveValueAtTime = (time, { duration, startTime, values }) => {\n    const theoreticIndex = ((time - startTime) / duration) * (values.length - 1);\n    return interpolateValue(values, theoreticIndex);\n};\n//# sourceMappingURL=get-value-curve-value-at-time.js.map","export const isSetTargetAutomationEvent = (automationEvent) => {\n    return automationEvent.type === 'setTarget';\n};\n//# sourceMappingURL=set-target-automation-event.js.map","import { createExtendedExponentialRampToValueAutomationEvent } from '../functions/create-extended-exponential-ramp-to-value-automation-event';\nimport { createExtendedLinearRampToValueAutomationEvent } from '../functions/create-extended-linear-ramp-to-value-automation-event';\nimport { createSetValueAutomationEvent } from '../functions/create-set-value-automation-event';\nimport { createSetValueCurveAutomationEvent } from '../functions/create-set-value-curve-automation-event';\nimport { getEndTimeAndValueOfPreviousAutomationEvent } from '../functions/get-end-time-and-value-of-previous-automation-event';\nimport { getEventTime } from '../functions/get-event-time';\nimport { getExponentialRampValueAtTime } from '../functions/get-exponential-ramp-value-at-time';\nimport { getLinearRampValueAtTime } from '../functions/get-linear-ramp-value-at-time';\nimport { getTargetValueAtTime } from '../functions/get-target-value-at-time';\nimport { getValueCurveValueAtTime } from '../functions/get-value-curve-value-at-time';\nimport { getValueOfAutomationEventAtIndexAtTime } from '../functions/get-value-of-automation-event-at-index-at-time';\nimport { isAnyRampToValueAutomationEvent } from '../guards/any-ramp-to-value-automation-event';\nimport { isCancelAndHoldAutomationEvent } from '../guards/cancel-and-hold-automation-event';\nimport { isCancelScheduledValuesAutomationEvent } from '../guards/cancel-scheduled-values-automation-event';\nimport { isExponentialRampToValueAutomationEvent } from '../guards/exponential-ramp-to-value-automation-event';\nimport { isLinearRampToValueAutomationEvent } from '../guards/linear-ramp-to-value-automation-event';\nimport { isSetTargetAutomationEvent } from '../guards/set-target-automation-event';\nimport { isSetValueAutomationEvent } from '../guards/set-value-automation-event';\nimport { isSetValueCurveAutomationEvent } from '../guards/set-value-curve-automation-event';\nexport class AutomationEventList {\n    constructor(defaultValue) {\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n    }\n    [Symbol.iterator]() {\n        return this._automationEvents[Symbol.iterator]();\n    }\n    add(automationEvent) {\n        const eventTime = getEventTime(automationEvent);\n        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => {\n                if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                    return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n                }\n                return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n            const removedAutomationEvent = this._automationEvents[index];\n            if (index !== -1) {\n                this._automationEvents = this._automationEvents.slice(0, index);\n            }\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n                const lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n                if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                    if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                        throw new Error('The internal list is malformed.');\n                    }\n                    const startTime = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.startTime + lastAutomationEvent.duration\n                        : getEventTime(lastAutomationEvent);\n                    const startValue = isSetValueCurveAutomationEvent(lastAutomationEvent)\n                        ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1]\n                        : lastAutomationEvent.value;\n                    const value = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent)\n                        : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                    const truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent)\n                        ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime)\n                        : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n                    this._automationEvents.push(truncatedAutomationEvent);\n                }\n                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                    this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n                }\n                if (lastAutomationEvent !== undefined &&\n                    isSetValueCurveAutomationEvent(lastAutomationEvent) &&\n                    lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                    this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n                }\n            }\n        }\n        else {\n            const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > eventTime);\n            const previousAutomationEvent = index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[index - 1];\n            if (previousAutomationEvent !== undefined &&\n                isSetValueCurveAutomationEvent(previousAutomationEvent) &&\n                getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n                return false;\n            }\n            const persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent)\n                ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime)\n                : isLinearRampToValueAutomationEvent(automationEvent)\n                    ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime)\n                    : automationEvent;\n            if (index === -1) {\n                this._automationEvents.push(persistentAutomationEvent);\n            }\n            else {\n                if (isSetValueCurveAutomationEvent(automationEvent) &&\n                    eventTime + automationEvent.duration > getEventTime(this._automationEvents[index])) {\n                    return false;\n                }\n                this._automationEvents.splice(index, 0, persistentAutomationEvent);\n            }\n        }\n        return true;\n    }\n    flush(time) {\n        const index = this._automationEvents.findIndex((currentAutomationEvent) => getEventTime(currentAutomationEvent) > time);\n        if (index > 1) {\n            const remainingAutomationEvents = this._automationEvents.slice(index - 1);\n            const firstRemainingAutomationEvent = remainingAutomationEvents[0];\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n                remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n            this._automationEvents = remainingAutomationEvents;\n        }\n    }\n    getValue(time) {\n        if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n        }\n        const indexOfNextEvent = this._automationEvents.findIndex((automationEvent) => getEventTime(automationEvent) > time);\n        const nextAutomationEvent = this._automationEvents[indexOfNextEvent];\n        const indexOfCurrentEvent = (indexOfNextEvent === -1 ? this._automationEvents.length : indexOfNextEvent) - 1;\n        const currentAutomationEvent = this._automationEvents[indexOfCurrentEvent];\n        if (currentAutomationEvent !== undefined &&\n            isSetTargetAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, indexOfCurrentEvent - 1, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (currentAutomationEvent !== undefined &&\n            isSetValueCurveAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined ||\n                !isAnyRampToValueAutomationEvent(nextAutomationEvent) ||\n                currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n                return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n        }\n        if (currentAutomationEvent !== undefined &&\n            isAnyRampToValueAutomationEvent(currentAutomationEvent) &&\n            (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n        }\n        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            const [startTime, value] = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, indexOfCurrentEvent, currentAutomationEvent, nextAutomationEvent, this._defaultValue);\n            return getLinearRampValueAtTime(time, startTime, value, nextAutomationEvent);\n        }\n        return this._defaultValue;\n    }\n}\n//# sourceMappingURL=automation-event-list.js.map","export const createCancelAndHoldAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelAndHold' };\n};\n//# sourceMappingURL=create-cancel-and-hold-automation-event.js.map","export const createCancelScheduledValuesAutomationEvent = (cancelTime) => {\n    return { cancelTime, type: 'cancelScheduledValues' };\n};\n//# sourceMappingURL=create-cancel-scheduled-values-automation-event.js.map","export const createExponentialRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'exponentialRampToValue', value };\n};\n//# sourceMappingURL=create-exponential-ramp-to-value-automation-event.js.map","export const createLinearRampToValueAutomationEvent = (value, endTime) => {\n    return { endTime, type: 'linearRampToValue', value };\n};\n//# sourceMappingURL=create-linear-ramp-to-value-automation-event.js.map","export const createSetTargetAutomationEvent = (target, startTime, timeConstant) => {\n    return { startTime, target, timeConstant, type: 'setTarget' };\n};\n//# sourceMappingURL=create-set-target-automation-event.js.map","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    let index = 0;\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        const promise = nativeContext.audioWorklet === undefined\n            ? fetchSource(moduleURL)\n                .then(([source, absoluteUrl]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * ${ importStatements };\n                 * ((a, b) => {\n                 *     (a[b] = a[b] || [ ]).push(\n                 *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n                 *             ${ sourceWithoutImportStatements }\n                 *         }\n                 *     );\n                 * })(window, '_AWGS');\n                 * ```\n                 */\n                // tslint:disable-next-line:max-line-length\n                const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n                // @todo Evaluating the given source code is a possible security problem.\n                return evaluateSource(wrappedSource);\n            })\n                .then(() => {\n                const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n                if (evaluateAudioWorkletGlobalScope === undefined) {\n                    // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                    throw new SyntaxError();\n                }\n                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n                }, undefined, (name, processorCtor) => {\n                    if (name.trim() === '') {\n                        throw createNotSupportedError();\n                    }\n                    const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                    if (nodeNameToProcessorConstructorMap !== undefined) {\n                        if (nodeNameToProcessorConstructorMap.has(name)) {\n                            throw createNotSupportedError();\n                        }\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                    }\n                    else {\n                        verifyProcessorCtor(processorCtor);\n                        verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                        NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                    }\n                }, nativeContext.sampleRate, undefined, undefined));\n            })\n            : Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const currentIndex = index + 1;\n                index = currentIndex;\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedAudioWorkletProcessor = isSupportingPostMessage\n                    ? 'AudioWorkletProcessor'\n                    : 'class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}';\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((AudioWorkletProcessor, registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })(\n                 *     ${ patchedAudioWorkletProcessor },\n                 *     (name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *         __collectBuffers = (array) => {\n                 *             array.forEach((element) => this.__buffers.add(element.buffer));\n                 *         };\n                 *\n                 *         process (inputs, outputs, parameters) {\n                 *             inputs.forEach(this.__collectBuffers);\n                 *             outputs.forEach(this.__collectBuffers);\n                 *             this.__collectBuffers(Object.values(parameters));\n                 *\n                 *             return super.process(\n                 *                 (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *                 outputs,\n                 *                 parameters\n                 *             );\n                 *         }\n                 *\n                 *     })\n                 * );\n                 *\n                 * registerProcessor(`__sac${currentIndex}`, class extends AudioWorkletProcessor{\n                 *\n                 *     process () {\n                 *         return false;\n                 *     }\n                 *\n                 * })`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};((AudioWorkletProcessor,registerProcessor)=>{${sourceWithoutImportStatements}\n})(${patchedAudioWorkletProcessor},(n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${currentIndex}',class extends AudioWorkletProcessor{process(){return !1}})`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return nativeContext;\n                    }\n                    // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options).then(() => backupOfflineAudioContext);\n                })\n                    .then((nativeContextOrBackupOfflineAudioContext) => {\n                    if (nativeAudioWorkletNodeConstructor === null) {\n                        throw new SyntaxError();\n                    }\n                    try {\n                        // Bug #190: Safari doesn't throw an error when loading an unparsable module.\n                        new nativeAudioWorkletNodeConstructor(nativeContextOrBackupOfflineAudioContext, `__sac${currentIndex}`); // tslint:disable-line:no-unused-expression\n                    }\n                    catch {\n                        throw new SyntaxError();\n                    }\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const updatedResolvedRequestsOfContext = resolvedRequests.get(context);\n            if (updatedResolvedRequestsOfContext === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                updatedResolvedRequestsOfContext.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const updatedOngoingRequestsOfContext = ongoingRequests.get(context);\n            if (updatedOngoingRequestsOfContext !== undefined) {\n                updatedOngoingRequestsOfContext.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    const tailTimeTimeoutIds = new WeakMap();\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    const tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);\n                    if (tailTimeTimeoutId !== undefined) {\n                        clearTimeout(tailTimeTimeoutId);\n                    }\n                    tailTimeTimeoutIds.set(destination, setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000));\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome & Edge do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    const renderedNativeAudioDestinationNodes = new WeakMap();\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        renderedNativeAudioDestinationNodes.set(nativeOfflineAudioContext, nativeAudioDestinationNode);\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext) {\n            const renderedNativeAudioDestinationNode = renderedNativeAudioDestinationNodes.get(nativeOfflineAudioContext);\n            if (renderedNativeAudioDestinationNode !== undefined) {\n                return Promise.resolve(renderedNativeAudioDestinationNode);\n            }\n            return createAudioDestinationNode(proxy, nativeOfflineAudioContext);\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Edge support the new interface already.\n        const createFakeAudioParams = () => {\n            const buffer = new Float32Array(1);\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            let isScriptProcessorNodeCreated = false;\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            const createScriptProcessorNode = () => {\n                if (isScriptProcessorNodeCreated) {\n                    return;\n                }\n                isScriptProcessorNodeCreated = true;\n                const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n                // tslint:disable-next-line:deprecation\n                scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                    const orientation = [\n                        getFirstSample(inputBuffer, buffer, 0),\n                        getFirstSample(inputBuffer, buffer, 1),\n                        getFirstSample(inputBuffer, buffer, 2),\n                        getFirstSample(inputBuffer, buffer, 3),\n                        getFirstSample(inputBuffer, buffer, 4),\n                        getFirstSample(inputBuffer, buffer, 5)\n                    ];\n                    if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                        nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                        lastOrientation = orientation;\n                    }\n                    const positon = [\n                        getFirstSample(inputBuffer, buffer, 6),\n                        getFirstSample(inputBuffer, buffer, 7),\n                        getFirstSample(inputBuffer, buffer, 8)\n                    ];\n                    if (positon.some((value, index) => value !== lastPosition[index])) {\n                        nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                        lastPosition = positon;\n                    }\n                };\n                channelMergerNode.connect(scriptProcessorNode);\n            };\n            const createSetOrientation = (index) => (value) => {\n                if (value !== lastOrientation[index]) {\n                    lastOrientation[index] = value;\n                    nativeListener.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n                }\n            };\n            const createSetPosition = (index) => (value) => {\n                if (value !== lastPosition[index]) {\n                    lastPosition[index] = value;\n                    nativeListener.setPosition(...lastPosition); // tslint:disable-line:deprecation\n                }\n            };\n            const createFakeAudioParam = (input, initialValue, setValue) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: initialValue\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return initialValue;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                const audioParam = createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n                overwriteAccessors(audioParam, 'value', (get) => () => get.call(audioParam), (set) => (value) => {\n                    try {\n                        set.call(audioParam, value);\n                    }\n                    catch (err) {\n                        if (err.code !== 9) {\n                            throw err;\n                        }\n                    }\n                    createScriptProcessorNode();\n                    if (isOffline) {\n                        // Bug #117: Using setOrientation() and setPosition() doesn't work with an OfflineAudioContext.\n                        setValue(value);\n                    }\n                });\n                audioParam.cancelAndHoldAtTime = ((cancelAndHoldAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelAndHoldAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelAndHoldAtTime);\n                audioParam.cancelScheduledValues = ((cancelScheduledValues) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = cancelScheduledValues.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.cancelScheduledValues);\n                audioParam.exponentialRampToValueAtTime = ((exponentialRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = exponentialRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.exponentialRampToValueAtTime);\n                audioParam.linearRampToValueAtTime = ((linearRampToValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = linearRampToValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.linearRampToValueAtTime);\n                audioParam.setTargetAtTime = ((setTargetAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setTargetAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setTargetAtTime);\n                audioParam.setValueAtTime = ((setValueAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueAtTime);\n                audioParam.setValueCurveAtTime = ((setValueCurveAtTime) => {\n                    if (isOffline) {\n                        return () => {\n                            throw createNotSupportedError();\n                        };\n                    }\n                    return (...args) => {\n                        const value = setValueCurveAtTime.apply(audioParam, args);\n                        createScriptProcessorNode();\n                        return value;\n                    };\n                })(audioParam.setValueCurveAtTime);\n                return audioParam;\n            };\n            return {\n                forwardX: createFakeAudioParam(0, 0, createSetOrientation(0)),\n                forwardY: createFakeAudioParam(1, 0, createSetOrientation(1)),\n                forwardZ: createFakeAudioParam(2, -1, createSetOrientation(2)),\n                positionX: createFakeAudioParam(6, 0, createSetPosition(0)),\n                positionY: createFakeAudioParam(7, 0, createSetPosition(1)),\n                positionZ: createFakeAudioParam(8, 0, createSetPosition(2)),\n                upX: createFakeAudioParam(3, 0, createSetOrientation(3)),\n                upY: createFakeAudioParam(4, 1, createSetOrientation(4)),\n                upZ: createFakeAudioParam(5, 0, createSetOrientation(5))\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return new Promise((resolve) => {\n        /*\n         * This bug existed in Safari up until v14.0.2. Since AudioWorklets were not supported in Safari until v14.1 the presence of the\n         * constructor for an AudioWorkletNode can be used here to skip the test.\n         */\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            resolve(true);\n        }\n        else {\n            const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1); // tslint:disable-line deprecation\n            const dummy = nativeAudioContext.createGain();\n            // Bug #95: Safari does not play one sample buffers.\n            const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n            const channelData = ones.getChannelData(0);\n            channelData[0] = 1;\n            channelData[1] = 1;\n            const source = nativeAudioContext.createBufferSource();\n            source.buffer = ones;\n            source.loop = true;\n            source.connect(analyzer).connect(nativeAudioContext.destination);\n            source.connect(dummy);\n            source.disconnect(dummy);\n            // tslint:disable-next-line:deprecation\n            analyzer.onaudioprocess = (event) => {\n                const chnnlDt = event.inputBuffer.getChannelData(0); // tslint:disable-line deprecation\n                if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                    resolve(true);\n                }\n                else {\n                    resolve(false);\n                }\n                source.stop();\n                analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n                source.disconnect(analyzer);\n                analyzer.disconnect(nativeAudioContext.destination);\n            };\n            source.start();\n        }\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void no-inferrable-types\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext, nativeAudioWorkletNodeConstructor);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #73, #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari. In addition to that the maxValue property is used to only detect the affected versions below v14.0.2.\n             */\n            if (nativeAudioParam.name === 'playbackRate' && nativeAudioParam.maxValue === 1024) {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Safari doesn't throw an InvalidAccessError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            // Bug #191: Safari doesn't throw an error if the options aren't clonable.\n            testAudioWorkletNodeOptionsClonability(mergedOptions);\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome and Edge do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge & Firefox have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm));\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome and Edge do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            let nativeAudioContext;\n            try {\n                nativeAudioContext = new nativeAudioContextConstructor(options);\n            }\n            catch (err) {\n                // Bug #192 Safari does throw a SyntaxError if the sampleRate is not supported.\n                if (err.code === 12 && err.message === 'sampleRate is not in range') {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Edge throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Edge pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome and Edge do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void no-inferrable-types\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome and Edge do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome and Edge do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Edge throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Edge have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge & Firefox partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels); // tslint:disable-line deprecation\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        // Bug #141: Safari does not support creating an OfflineAudioContext with less than 44100 Hz.\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 44100);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","export const getFirstSample = (audioBuffer, buffer, channelNumber) => {\n    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n    if (audioBuffer.copyFromChannel === undefined) {\n        return audioBuffer.getChannelData(channelNumber)[0];\n    }\n    audioBuffer.copyFromChannel(buffer, channelNumber);\n    return buffer[0];\n};\n//# sourceMappingURL=get-first-sample.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = object;\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getFirstSample } from './helpers/get-first-sample';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testAudioWorkletNodeOptionsClonability } from './helpers/test-audio-worklet-node-options-clonability';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, createNotSupportedError, getFirstSample, isNativeOfflineAudioContext, overwriteAccessors);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, getFirstSample, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, testAudioWorkletNodeOptionsClonability, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { addRecorderAudioWorkletModule, createRecorderAudioWorkletNode } from 'recorder-audio-worklet';\nimport { AudioBuffer, AudioBufferSourceNode, AudioWorkletNode, ConstantSourceNode, MediaStreamAudioSourceNode, MinimalAudioContext, addAudioWorkletModule } from 'standardized-audio-context';\nconst ERROR_MESSAGE = 'Missing AudioWorklet support. Maybe this is not running in a secure context.';\n// @todo This should live in a separate file.\nconst createPromisedAudioNodesEncoderIdAndPort = async (audioBuffer, audioContext, channelCount, mediaStream, mimeType) => {\n    const { encoderId, port } = await instantiate(mimeType, audioContext.sampleRate);\n    if (AudioWorkletNode === undefined) {\n        throw new Error(ERROR_MESSAGE);\n    }\n    const audioBufferSourceNode = new AudioBufferSourceNode(audioContext, { buffer: audioBuffer });\n    const mediaStreamAudioSourceNode = new MediaStreamAudioSourceNode(audioContext, { mediaStream });\n    const recorderAudioWorkletNode = createRecorderAudioWorkletNode(AudioWorkletNode, audioContext, { channelCount });\n    return { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode };\n};\nexport const createWebAudioMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError) => {\n    return (eventTarget, mediaStream, mimeType) => {\n        var _a;\n        const sampleRate = (_a = mediaStream.getAudioTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings().sampleRate;\n        const audioContext = new MinimalAudioContext({ latencyHint: 'playback', sampleRate });\n        const length = Math.max(1024, Math.ceil(audioContext.baseLatency * audioContext.sampleRate));\n        const audioBuffer = new AudioBuffer({ length, sampleRate: audioContext.sampleRate });\n        const bufferedArrayBuffers = [];\n        const promisedAudioWorkletModule = addRecorderAudioWorkletModule((url) => {\n            if (addAudioWorkletModule === undefined) {\n                throw new Error(ERROR_MESSAGE);\n            }\n            return addAudioWorkletModule(audioContext, url);\n        });\n        let abortRecording = null;\n        let intervalId = null;\n        let promisedAudioNodesAndEncoderId = null;\n        let promisedPartialRecording = null;\n        let isAudioContextRunning = true;\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (promisedAudioNodesAndEncoderId === null) {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const resume = () => {\n            isAudioContextRunning = true;\n            return audioContext.resume();\n        };\n        const stop = () => {\n            if (promisedAudioNodesAndEncoderId === null) {\n                return;\n            }\n            if (abortRecording !== null) {\n                mediaStream.removeEventListener('addtrack', abortRecording);\n                mediaStream.removeEventListener('removetrack', abortRecording);\n            }\n            if (intervalId !== null) {\n                clearTimeout(intervalId);\n            }\n            promisedAudioNodesAndEncoderId.then(async ({ constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode }) => {\n                if (promisedPartialRecording !== null) {\n                    promisedPartialRecording.catch(() => {\n                        /* @todo Only catch the errors caused by a duplicate call to encode. */\n                    });\n                    promisedPartialRecording = null;\n                }\n                await recorderAudioWorkletNode.stop();\n                mediaStreamAudioSourceNode.disconnect(recorderAudioWorkletNode);\n                constantSourceNode.stop();\n                const arrayBuffers = await encode(encoderId, null);\n                if (promisedAudioNodesAndEncoderId === null) {\n                    await suspend();\n                }\n                dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                bufferedArrayBuffers.length = 0;\n                eventTarget.dispatchEvent(new Event('stop'));\n            });\n            promisedAudioNodesAndEncoderId = null;\n        };\n        const suspend = () => {\n            isAudioContextRunning = false;\n            return audioContext.suspend();\n        };\n        suspend();\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return promisedAudioNodesAndEncoderId === null ? 'inactive' : isAudioContextRunning ? 'recording' : 'paused';\n            },\n            pause() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (isAudioContextRunning) {\n                    suspend();\n                    eventTarget.dispatchEvent(new Event('pause'));\n                }\n            },\n            resume() {\n                if (promisedAudioNodesAndEncoderId === null) {\n                    throw createInvalidStateError();\n                }\n                if (!isAudioContextRunning) {\n                    resume();\n                    eventTarget.dispatchEvent(new Event('resume'));\n                }\n            },\n            start(timeslice) {\n                var _a;\n                if (promisedAudioNodesAndEncoderId !== null) {\n                    throw createInvalidStateError();\n                }\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                eventTarget.dispatchEvent(new Event('start'));\n                const audioTracks = mediaStream.getAudioTracks();\n                // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n                const channelCount = audioTracks.length === 0\n                    ? 2\n                    : (_a = audioTracks[0].getSettings().channelCount) !== null && _a !== void 0 ? _a : 2;\n                promisedAudioNodesAndEncoderId = Promise.all([\n                    resume(),\n                    promisedAudioWorkletModule.then(() => createPromisedAudioNodesEncoderIdAndPort(audioBuffer, audioContext, channelCount, mediaStream, mimeType))\n                ]).then(async ([, { audioBufferSourceNode, encoderId, mediaStreamAudioSourceNode, port, recorderAudioWorkletNode }]) => {\n                    mediaStreamAudioSourceNode.connect(recorderAudioWorkletNode);\n                    await new Promise((resolve) => {\n                        audioBufferSourceNode.onended = resolve;\n                        audioBufferSourceNode.connect(recorderAudioWorkletNode);\n                        audioBufferSourceNode.start(audioContext.currentTime + length / audioContext.sampleRate);\n                    });\n                    audioBufferSourceNode.disconnect(recorderAudioWorkletNode);\n                    // Bug #17: Safari does throttle the processing on hidden tabs if there is no active audio output.\n                    const constantSourceNode = new ConstantSourceNode(audioContext, { offset: 0 });\n                    constantSourceNode.onended = () => constantSourceNode.disconnect();\n                    constantSourceNode.connect(audioContext.destination);\n                    constantSourceNode.start();\n                    await recorderAudioWorkletNode.record(port);\n                    if (timeslice !== undefined) {\n                        promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n                    }\n                    return { constantSourceNode, encoderId, mediaStreamAudioSourceNode, recorderAudioWorkletNode };\n                });\n                const tracks = mediaStream.getTracks();\n                abortRecording = () => {\n                    stop();\n                    eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n                };\n                mediaStream.addEventListener('addtrack', abortRecording);\n                mediaStream.addEventListener('removetrack', abortRecording);\n                intervalId = setInterval(() => {\n                    const currentTracks = mediaStream.getTracks();\n                    if ((currentTracks.length !== tracks.length || currentTracks.some((track, index) => track !== tracks[index])) &&\n                        abortRecording !== null) {\n                        abortRecording();\n                    }\n                }, 1000);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=web-audio-media-recorder.js.map","export class MultiBufferDataView {\n    constructor(buffers, byteOffset = 0, byteLength) {\n        if (byteOffset < 0 || (byteLength !== undefined && byteLength < 0)) {\n            throw new RangeError();\n        }\n        const availableBytes = buffers.reduce((length, buffer) => length + buffer.byteLength, 0);\n        if (byteOffset > availableBytes || (byteLength !== undefined && byteOffset + byteLength > availableBytes)) {\n            throw new RangeError();\n        }\n        const dataViews = [];\n        const effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        const truncatedBuffers = [];\n        let consumedByteLength = 0;\n        let truncatedByteOffset = byteOffset;\n        for (const buffer of buffers) {\n            if (truncatedBuffers.length === 0) {\n                if (buffer.byteLength > truncatedByteOffset) {\n                    consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                    const byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                    dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                    truncatedBuffers.push(buffer);\n                }\n                else {\n                    truncatedByteOffset -= buffer.byteLength;\n                }\n            }\n            else if (consumedByteLength < effectiveByteLength) {\n                consumedByteLength += buffer.byteLength;\n                const byteLengthOfDataView = consumedByteLength > effectiveByteLength\n                    ? buffer.byteLength - consumedByteLength + effectiveByteLength\n                    : buffer.byteLength;\n                dataViews.push(new DataView(buffer, 0, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n            }\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n    }\n    get buffers() {\n        return this._buffers;\n    }\n    get byteLength() {\n        return this._byteLength;\n    }\n    get byteOffset() {\n        return this._byteOffset;\n    }\n    getFloat32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getFloat32(0, littleEndian);\n    }\n    getFloat64(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n        this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n        this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n        this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n        return this._internalBuffer.getFloat64(0, littleEndian);\n    }\n    getInt16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getInt16(0, littleEndian);\n    }\n    getInt32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getInt32(0, littleEndian);\n    }\n    getInt8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n    }\n    getUint16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getUint16(0, littleEndian);\n    }\n    getUint32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getUint32(0, littleEndian);\n    }\n    getUint8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n    }\n    setFloat32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setFloat64(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat64(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n        this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n        this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n        this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n    }\n    setInt16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setInt32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setInt8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n    }\n    setUint16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setUint32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setUint8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n    }\n    _findDataViewWithOffset(byteOffset) {\n        let byteOffsetOfDataView = 0;\n        for (const dataView of this._dataViews) {\n            const byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n            if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n            }\n            byteOffsetOfDataView = byteOffsetOfNextDataView;\n        }\n        throw new RangeError();\n    }\n}\n//# sourceMappingURL=multi-buffer-data-view.js.map","import { encode, instantiate } from 'media-encoder-host';\nimport { MultiBufferDataView } from 'multi-buffer-data-view';\nimport { on } from 'subscribable-things';\nexport const createWebmPcmMediaRecorderFactory = (createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger) => {\n    return (eventTarget, nativeMediaRecorderConstructor, mediaStream, mimeType) => {\n        const audioTracks = mediaStream.getAudioTracks();\n        const bufferedArrayBuffers = [];\n        // @todo TypeScript v4.4.2 removed the channelCount property from the MediaTrackSettings interface.\n        const channelCount = audioTracks.length === 0\n            ? undefined\n            : audioTracks[0].getSettings().channelCount;\n        const nativeMediaRecorder = new nativeMediaRecorderConstructor(mediaStream, { mimeType: 'audio/webm;codecs=pcm' });\n        const sampleRate = audioTracks.length === 0 ? undefined : audioTracks[0].getSettings().sampleRate;\n        let promisedPartialRecording = null;\n        let stopRecording = () => { }; // tslint:disable-line:no-empty\n        const dispatchDataAvailableEvent = (arrayBuffers) => {\n            eventTarget.dispatchEvent(createBlobEvent('dataavailable', { data: new Blob(arrayBuffers, { type: mimeType }) }));\n        };\n        const requestNextPartialRecording = async (encoderId, timeslice) => {\n            const arrayBuffers = await encode(encoderId, timeslice);\n            if (nativeMediaRecorder.state === 'inactive') {\n                bufferedArrayBuffers.push(...arrayBuffers);\n            }\n            else {\n                dispatchDataAvailableEvent(arrayBuffers);\n                promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice);\n            }\n        };\n        const stop = () => {\n            if (nativeMediaRecorder.state === 'inactive') {\n                return;\n            }\n            if (promisedPartialRecording !== null) {\n                promisedPartialRecording.catch(() => {\n                    /* @todo Only catch the errors caused by a duplicate call to encode. */\n                });\n                promisedPartialRecording = null;\n            }\n            stopRecording();\n            stopRecording = () => { }; // tslint:disable-line:no-empty\n            nativeMediaRecorder.stop();\n        };\n        nativeMediaRecorder.addEventListener('error', () => {\n            stop();\n            // Bug #3 & #4: Chrome throws an error event without any error.\n            eventTarget.dispatchEvent(new ErrorEvent('error', { error: createInvalidModificationError() }));\n        });\n        nativeMediaRecorder.addEventListener('start', () => eventTarget.dispatchEvent(new Event('start')));\n        return {\n            get mimeType() {\n                return mimeType;\n            },\n            get state() {\n                return nativeMediaRecorder.state;\n            },\n            pause() {\n                return nativeMediaRecorder.pause();\n            },\n            resume() {\n                return nativeMediaRecorder.resume();\n            },\n            start(timeslice) {\n                /*\n                 * Bug #6: Chrome will emit a blob without any data when asked to encode a MediaStream with a video track into an audio\n                 * codec.\n                 */\n                if (mediaStream.getVideoTracks().length > 0) {\n                    throw createNotSupportedError();\n                }\n                if (nativeMediaRecorder.state === 'inactive') {\n                    if (sampleRate === undefined) {\n                        throw new Error('The sampleRate is not defined.');\n                    }\n                    let isRecording = false;\n                    let isStopped = false;\n                    // Bug #9: Chrome sometimes fires more than one dataavailable event while being inactive.\n                    let pendingInvocations = 0;\n                    let promisedDataViewElementTypeEncoderIdAndPort = instantiate(mimeType, sampleRate);\n                    stopRecording = () => {\n                        isStopped = true;\n                    };\n                    const removeEventListener = on(nativeMediaRecorder, 'dataavailable')(({ data }) => {\n                        pendingInvocations += 1;\n                        promisedDataViewElementTypeEncoderIdAndPort = promisedDataViewElementTypeEncoderIdAndPort.then(async ({ dataView = null, elementType = null, encoderId, port }) => {\n                            const arrayBuffer = await data.arrayBuffer();\n                            pendingInvocations -= 1;\n                            const currentDataView = dataView === null\n                                ? new MultiBufferDataView([arrayBuffer])\n                                : new MultiBufferDataView([...dataView.buffers, arrayBuffer], dataView.byteOffset);\n                            if (!isRecording && nativeMediaRecorder.state === 'recording' && !isStopped) {\n                                const lengthAndValue = readVariableSizeInteger(currentDataView, 0);\n                                if (lengthAndValue === null) {\n                                    return { dataView: currentDataView, elementType, encoderId, port };\n                                }\n                                const { value } = lengthAndValue;\n                                if (value !== 172351395) {\n                                    return { dataView, elementType, encoderId, port };\n                                }\n                                isRecording = true;\n                            }\n                            const { currentElementType, offset, contents } = decodeWebMChunk(currentDataView, elementType, channelCount);\n                            const remainingDataView = offset < currentDataView.byteLength\n                                ? new MultiBufferDataView(currentDataView.buffers, currentDataView.byteOffset + offset)\n                                : null;\n                            contents.forEach((content) => port.postMessage(content, content.map(({ buffer }) => buffer)));\n                            if (pendingInvocations === 0 && (nativeMediaRecorder.state === 'inactive' || isStopped)) {\n                                encode(encoderId, null).then((arrayBuffers) => {\n                                    dispatchDataAvailableEvent([...bufferedArrayBuffers, ...arrayBuffers]);\n                                    bufferedArrayBuffers.length = 0;\n                                    eventTarget.dispatchEvent(new Event('stop'));\n                                });\n                                port.postMessage([]);\n                                port.close();\n                                removeEventListener();\n                            }\n                            return { dataView: remainingDataView, elementType: currentElementType, encoderId, port };\n                        });\n                    });\n                    if (timeslice !== undefined) {\n                        promisedDataViewElementTypeEncoderIdAndPort.then(({ encoderId }) => (promisedPartialRecording = requestNextPartialRecording(encoderId, timeslice)));\n                    }\n                }\n                nativeMediaRecorder.start(100);\n            },\n            stop\n        };\n    };\n};\n//# sourceMappingURL=webm-pcm-media-recorder.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","export const readVariableSizeIntegerLength = (dataView, offset) => {\n    if (offset >= dataView.byteLength) {\n        return null;\n    }\n    const byte = dataView.getUint8(offset);\n    if (byte > 127) {\n        return 1;\n    }\n    if (byte > 63) {\n        return 2;\n    }\n    if (byte > 31) {\n        return 3;\n    }\n    if (byte > 15) {\n        return 4;\n    }\n    if (byte > 7) {\n        return 5;\n    }\n    if (byte > 3) {\n        return 6;\n    }\n    if (byte > 1) {\n        return 7;\n    }\n    if (byte > 0) {\n        return 8;\n    }\n    const length = readVariableSizeIntegerLength(dataView, offset + 1);\n    return length === null ? null : length + 8;\n};\n//# sourceMappingURL=read-variable-size-integer-length.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { register as rgstr } from 'media-encoder-host';\nimport { createBlobEventFactory } from './factories/blob-event-factory';\nimport { createDecodeWebMChunk } from './factories/decode-web-m-chunk';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createEventTargetFactory } from './factories/event-target-factory';\nimport { createInvalidModificationError } from './factories/invalid-modification-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaRecorderConstructor } from './factories/media-recorder-constructor';\nimport { createNativeBlobEventConstructor } from './factories/native-blob-event-constructor';\nimport { createNativeMediaRecorderFactory } from './factories/native-media-recorder';\nimport { createNativeMediaRecorderConstructor } from './factories/native-media-recorder-constructor';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createReadElementContent } from './factories/read-element-content';\nimport { createReadElementType } from './factories/read-element-type';\nimport { createReadVariableSizeInteger } from './factories/read-variable-size-integer';\nimport { createWebAudioMediaRecorderFactory } from './factories/web-audio-media-recorder';\nimport { createWebmPcmMediaRecorderFactory } from './factories/webm-pcm-media-recorder';\nimport { createWindow } from './factories/window';\nimport { readVariableSizeIntegerLength } from './functions/read-variable-size-integer-length';\nimport { wrapEventListener } from './functions/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst encoderRegexes = [];\nconst window = createWindow();\nconst nativeBlobEventConstructor = createNativeBlobEventConstructor(window);\nconst createBlobEvent = createBlobEventFactory(nativeBlobEventConstructor);\nconst createWebAudioMediaRecorder = createWebAudioMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createInvalidStateError, createNotSupportedError);\nconst readVariableSizeInteger = createReadVariableSizeInteger(readVariableSizeIntegerLength);\nconst readElementContent = createReadElementContent(readVariableSizeInteger);\nconst readElementType = createReadElementType(readVariableSizeInteger);\nconst decodeWebMChunk = createDecodeWebMChunk(readElementContent, readElementType);\nconst createWebmPcmMediaRecorder = createWebmPcmMediaRecorderFactory(createBlobEvent, createInvalidModificationError, createNotSupportedError, decodeWebMChunk, readVariableSizeInteger);\nconst createEventTarget = createEventTargetFactory(window);\nconst nativeMediaRecorderConstructor = createNativeMediaRecorderConstructor(window);\nconst createNativeMediaRecorder = createNativeMediaRecorderFactory(createInvalidModificationError, createNotSupportedError);\nconst mediaRecorderConstructor = createMediaRecorderConstructor(createNativeMediaRecorder, createNotSupportedError, createWebAudioMediaRecorder, createWebmPcmMediaRecorder, encoderRegexes, createEventTargetConstructor(createEventTarget, wrapEventListener), nativeMediaRecorderConstructor);\nexport { mediaRecorderConstructor as MediaRecorder };\nexport const isSupported = () => createIsSupportedPromise(window);\nexport const register = async (port) => {\n    encoderRegexes.push(await rgstr(port));\n};\n//# sourceMappingURL=module.js.map"],"names":["encoderIds","wrap","createBroker","call","encoderId","timeslice","arrayBuffers","mimeType","sampleRate","addUniqueNumber","port","load","url","worker","blob","mediaEncoderHost","loadWorker","encode","instantiate","register","createBlobEventFactory","nativeBlobEventConstructor","type","blobEventInit","createDecodeWebMChunk","readElementContent","readElementType","dataView","elementType","channelCount","contents","currentElementType","offset","lengthAndType","length","contentAndLength","content","createEventTargetConstructor","createEventTarget","wrapEventListener","nativeEventTarget","listener","options","wrappedEventListener","event","createEventTargetFactory","window","createInvalidModificationError","message","err","createInvalidStateError","createIsSupportedPromise","resolve","canvasElement","mediaStream","mediaRecorder","data","createMediaRecorderConstructor","createNativeMediaRecorder","createNotSupportedError","createWebAudioMediaRecorder","createWebmPcmMediaRecorder","encoderRegexes","eventTargetConstructor","nativeMediaRecorderConstructor","stream","internalMediaRecorder","regex","value","boundListener","createNativeBlobEventConstructor","createNativeMediaRecorderFactory","mediaRecorderOptions","bufferedBlobs","dataAvailableListeners","errorListeners","nativeMediaRecorder","stopListeners","isActive","addEventListener","patchedEventListener","dispatchEvent","wasActive","returnValue","removeEventListener","dataAvailableListener","errorListener","stopListener","start","createNativeMediaRecorderConstructor","createReadElementContent","readVariableSizeInteger","lengthAndValue","numberOfSamples","i","elementOffset","j","createReadElementType","createReadVariableSizeInteger","readVariableSizeIntegerLength","firstDataByteOffset","observable","patch","arg","noop","rethrow","error","toObserver","observer","createOn","wrapSubscribeFunction","target","createWrapSubscribeFunction","emptyFunction","isNextFunction","args","innerSubscribe","subscribe","unsubscribe","dashify","str","m","indefiniteArticle","phrase","word","match","l_word","alt_cases","regexes","module","applyModifiers","name","modifiers","modifiedName","modifier","head","tail","buildRegex","variable","expression","preRenderString","string","parameters","expressionRegex","variables","expressionResult","modifiersRegex","modifiersRegexResult","preRenderedParts","parts","part","prts","prt","index","prmtrs","missingParameters","renderedParts","preRenderedPart","compile","template","knownParameters","renderCode","renderMessage","render","causeOrMissingParameters","optionalCause","hasNoOptionalCause","cause","JSON_RPC_ERROR_CODES","createAddRecorderAudioWorkletModule","blobConstructor","urlConstructor","worklet","addAudioWorkletModule","createListener","ongoingRequests","id","ongoingRequest","reject","createPostMessageFactory","generateUniqueNumber","transferables","createRecorderAudioWorkletNodeFactory","createPostMessage","on","validateState","audioWorkletNodeConstructor","context","audioWorkletNode","postMessage","state","encoderPort","expectedStates","currentState","expectedState","addRecorderAudioWorkletModule","createRecorderAudioWorkletNode","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","timeConstant","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","upperIndex","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","eventTime","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","previousAutomationEvent","persistentAutomationEvent","remainingAutomationEvents","firstRemainingAutomationEvent","indexOfNextEvent","indexOfCurrentEvent","createCancelAndHoldAutomationEvent","cancelTime","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","createAbortError","createAddActiveInputConnectionToAudioNode","insertElementInSet","activeInputs","source","output","input","eventListener","ignoreDuplicates","activeInputConnection","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","ACTIVE_AUDIO_NODE_STORE","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","handler","isConstructible","constructible","proxy","IMPORT_STATEMENT_REGEX","splitImportStatements","importStatements","sourceWithoutImportStatements","result","unresolvedUrl","importStatementWithResolvedUrl","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","createAddAudioWorkletModule","cacheTestResult","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getNativeContext","getOrCreateBackupOfflineAudioContext","isNativeOfflineAudioContext","nativeAudioWorkletNodeConstructor","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","nativeContext","promise","absoluteUrl","wrappedSource","evaluateAudioWorkletGlobalScope","nodeNameToProcessorConstructorMap","isSupportingPostMessage","currentIndex","backupOfflineAudioContext","nativeContextOrBackupOfflineAudioContext","updatedResolvedRequestsOfContext","updatedOngoingRequestsOfContext","getValueForKey","map","key","pickElementFromSet","set","predicate","matchingElements","matchingElement","deletePassiveInputConnectionToAudioNode","passiveInputs","passiveInputConnections","matchingConnection","passiveInputConnection","getEventListenersOfAudioNode","setInternalStateToActive","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","connections","createAddConnectionToAudioNode","addActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","connectNativeAudioNodeToNativeAudioNode","deleteActiveInputConnectionToAudioNode","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getAudioNodeTailTime","getNativeAudioNode","isActiveAudioNode","isPartOfACycle","isPassiveAudioNode","tailTimeTimeoutIds","destination","isOffline","outputs","eventListeners","nativeDestinationAudioNode","nativeSourceAudioNode","partialConnection","tailTime","tailTimeTimeoutId","outputConnection","createAddPassiveInputConnectionToAudioNode","createAddSilentConnection","createNativeGainNode","nativeAudioScheduledSourceNode","nativeGainNode","disconnect","createAddUnrenderedAudioWorkletNode","getUnrenderedAudioWorkletNodes","isOwnedByContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","createIndexSizeError","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","DEFAULT_OPTIONS","createAudioBufferConstructor","audioBufferStore","nativeAudioBufferConstructor","nativeOfflineAudioContextConstructor","testNativeAudioBufferConstructorSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","nativeOfflineAudioContext","AudioBuffer","numberOfChannels","instance","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","createAudioBufferSourceNodeConstructor","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createNativeAudioBufferSourceNode","mergedOptions","nativeAudioBufferSourceNode","audioBufferSourceNodeRenderer","wrappedListener","nativeOnEnded","when","resetInternalStateToPassive","createAudioBufferSourceNodeRendererFactory","connectAudioParam","renderAutomation","renderInputsOfAudioNode","renderedNativeAudioBufferSourceNodes","stop","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","isAudioBufferSourceNode","isBiquadFilterNode","isConstantSourceNode","isGainNode","isOscillatorNode","isStereoPannerNode","getAudioParamConnections","deactivateActiveAudioNodeInputConnections","trace","audioParams","audioParamConnections","deactivateAudioGraph","isValidLatencyHint","latencyHint","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","renderedNativeAudioDestinationNodes","createAudioDestinationNode","renderedNativeAudioDestinationNode","createAudioListenerFactory","createNativeChannelMergerNode","createNativeConstantSourceNode","createNativeScriptProcessorNode","getFirstSample","overwriteAccessors","nativeListener","createFakeAudioParams","buffer","channelMergerNode","isScriptProcessorNodeCreated","lastOrientation","lastPosition","createScriptProcessorNode","scriptProcessorNode","inputBuffer","orientation","positon","createSetOrientation","createSetPosition","createFakeAudioParam","initialValue","setValue","constantSourceNode","get","cancelAndHoldAtTime","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setTargetAtTime","setValueAtTime","setValueCurveAtTime","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","element","lmnt","addActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioParam","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","fakeNativeDestinationAudioNode","deleteActiveInputConnection","activeInputConnections","deleteActiveInputConnectionToAudioParam","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","getNativeAudioParam","testAudioNodeDisconnectMethodSupport","nativeAudioContext","analyzer","dummy","ones","channelData","chnnlDt","sample","visitEachAudioNodeOnce","cycles","visitor","counts","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","connect","connectionsToDestination","connection","destinationOrOutput","filteredConnections","addConnectionToAudioParamOfAudioContext","nativeAudioParam","deleteInputConnectionOfAudioNode","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","deleteInputsOfAudioParam","deleteAnyConnection","audioNodeConnectionsOfSource","destinations","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","createInvalidAccessError","decrementCycleCounter","detectCycles","isNativeAudioContext","isNativeAudioParam","isPassive","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","nativeAudioContextConstructor","setValueAtTimeUntilPossible","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","previousLastEvent","currentLastEvent","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","ReadOnlyMap","callback","thisArg","createAudioWorkletNodeConstructor","addUnrenderedAudioWorkletNode","createAudioWorkletNodeRenderer","createNativeAudioWorkletNode","getBackupOfflineAudioContext","sanitizeAudioWorkletNodeOptions","setActiveAudioWorkletNodeInputs","testAudioWorkletNodeOptionsClonability","_a","processorConstructor","nativeAudioWorkletNode","audioWorkletNodeRenderer","nm","nativeOnProcessorError","copyFromChannel","parent","channelNumber","bufferOffset","slicedInput","copyToChannel","createNestedArrays","x","y","arrays","array","getAudioWorkletProcessor","nodeToProcessorMap","processBuffer","renderedBuffer","outputChannelCount","numberOfInputChannels","numberOfOutputChannels","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","inputs","k","potentiallyEmptyInputs","activeSourceFlag","outputChannelSplitterNodeOutput","createAudioWorkletNodeRendererFactory","connectMultipleOutputs","createNativeChannelSplitterNode","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","renderNativeOfflineAudioContext","renderedNativeAudioNodes","processedBufferPromise","createAudioNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","outputChannelSplitterNode","outputChannelMergerNodes","outputGainNode","numberOfParameters","partialOfflineAudioContext","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","gainNode","audioBufferSourceNode","outputChannelMergerNode","renderedNativeAudioWorkletNodeOrGainNode","createCacheTestResult","ongoingTests","testResults","tester","test","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createConnectAudioParam","renderInputsOfAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createDecrementCycleCounter","cycleCounters","cycleCounter","nativeDestinationAudioParam","createDeleteActiveInputConnectionToAudioNode","createDeleteUnrenderedAudioWorkletNode","isDelayNode","createDetectCycles","chain","nextLink","mergedCycles","nestedCycles","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","createEvaluateSource","script","originalOnErrorHandler","removeErrorEventListenerAndRevokeUrl","src","lineno","colno","_nativeEventTarget","createExposeCurrentFrameAndCurrentTime","currentTime","fn","createFetchSource","response","createGetActiveAudioWorkletNodeInputs","activeAudioWorkletNodeInputsStore","createGetAudioNodeRenderer","createGetAudioNodeTailTime","audioNodeTailTimeStore","createGetAudioParamRenderer","createGetBackupOfflineAudioContext","backupOfflineAudioContextStore","createGetNativeContext","contextStore","createGetOrCreateBackupOfflineAudioContext","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodeStore","unrenderedAudioWorkletNodes","createIncrementCycleCounterFactory","createIsNativeAudioContext","anything","createIsNativeAudioNode","createIsNativeAudioParam","createIsNativeOfflineAudioContext","createIsSecureContext","createMediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","createMinimalAudioContextConstructor","createUnknownError","minimalBaseAudioContextConstructor","revokeState","resolvePromise","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","_nativeContext","nativeOnStateChange","testPromiseSupport","uint32Array","createMonitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","createNativeAudioBufferConstructor","assignNativeAudioNodeAudioParamValue","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","isScheduled","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","createNativeAudioBufferSourceNodeFactory","addSilentConnection","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","createNativeAudioContextConstructor","createNativeAudioDestinationNodeFactory","isNodeOfNativeOfflineAudioContext","createNativeAudioWorkletNodeConstructor","testClonabilityOfAudioWorkletNodeOptions","audioWorkletNodeOptions","port1","createNativeAudioWorkletNodeFactory","createNativeAudioWorkletNodeFaker","monitorConnections","baseLatency","patchedEventListeners","onprocessorerror","unpatchedEventListener","computeBufferSize","cloneAudioWorkletNodeOptions","port2","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createAudioWorkletProcessor","audioWorkletProcessorPromise","createNativeAudioWorkletNodeFakerFactory","getActiveAudioWorkletNodeInputs","messageChannel","bufferSize","parameterMap","channelInterpretation","nativeAudioWorkletNodeFaker","_","onmessage","dWrkltPrcssr","disconnectOutputsGraph","activeInputIndexes","outputBuffer","isConnected","disconnectFakeGraph","connectFakeGraph","createNativeChannelMergerNodeFactory","wrapChannelMergerNode","nativeChannelMergerNode","wrapChannelSplitterNode","channelSplitterNode","nativeChannelSplitterNode","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFaker","interceptConnections","original","interceptor","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","nativeConstantSourceNodeFaker","audioStreamTracks","a","b","filteredAudioStreamTracks","createNativeOfflineAudioContextConstructor","createRenderAutomation","getAudioParamRenderer","createRenderInputsOfAudioNode","getAudioNodeRenderer","renderedNativeAudioNode","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","createSetActiveAudioWorkletNodeInputs","createTestAudioBufferConstructorSupport","createTestAudioWorkletProcessorPostMessageSupport","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","oscillator","createTestOfflineAudioContextCurrentTimeSupport","createWindow","createWrapAudioBufferCopyChannelMethods","convertNumberToUnsignedLong","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapChannelMergerNode","object","property","createGetter","createSetter","prototype","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","disconnectGainNode","isStopped","descriptor","audioBufferConstructor","audioBufferSourceNodeConstructor","createConstantSourceNodeRenderer","constantSourceNodeConstructor","isSecureContext","mediaStreamAudioSourceNodeConstructor","minimalAudioContextConstructor","ERROR_MESSAGE","createPromisedAudioNodesEncoderIdAndPort","audioContext","AudioWorkletNode","AudioBufferSourceNode","mediaStreamAudioSourceNode","MediaStreamAudioSourceNode","recorderAudioWorkletNode","createWebAudioMediaRecorderFactory","createBlobEvent","eventTarget","MinimalAudioContext","bufferedArrayBuffers","promisedAudioWorkletModule","abortRecording","intervalId","promisedAudioNodesAndEncoderId","promisedPartialRecording","isAudioContextRunning","dispatchDataAvailableEvent","requestNextPartialRecording","resume","suspend","audioTracks","ConstantSourceNode","tracks","currentTracks","track","MultiBufferDataView","buffers","byteOffset","byteLength","availableBytes","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","byteLengthOfDataView","littleEndian","byteOffsetOfDataView","byteOffsetOfNextDataView","createWebmPcmMediaRecorderFactory","decodeWebMChunk","stopRecording","isRecording","pendingInvocations","promisedDataViewElementTypeEncoderIdAndPort","arrayBuffer","currentDataView","remainingDataView","byte","mediaRecorderConstructor","isSupported","rgstr"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235]}