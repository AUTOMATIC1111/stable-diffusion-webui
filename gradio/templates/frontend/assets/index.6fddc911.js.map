{"version":3,"file":"index.6fddc911.js","sources":["../../../../ui/packages/app/src/components/Interpretation/utils.ts","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Number.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Dropdown.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Checkbox.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/CheckboxGroup.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Slider.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Radio.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Image.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Audio.svelte","../../../../ui/packages/app/src/components/Interpretation/InterpretationComponents/Textbox.svelte","../../../../ui/packages/app/src/components/Interpretation/directory.ts","../../../../ui/packages/app/src/components/Interpretation/Interpretation.svelte","../../../../ui/packages/app/src/components/Interpretation/index.ts"],"sourcesContent":["export const getSaliencyColor = (value: number): string => {\n\tvar color: [number, number, number] | null = null;\n\tif (value < 0) {\n\t\tcolor = [52, 152, 219];\n\t} else {\n\t\tcolor = [231, 76, 60];\n\t}\n\treturn colorToString(interpolate(Math.abs(value), [255, 255, 255], color));\n};\n\nconst interpolate = (\n\tval: number,\n\trgb1: [number, number, number],\n\trgb2: [number, number, number]\n): [number, number, number] => {\n\tif (val > 1) {\n\t\tval = 1;\n\t}\n\tval = Math.sqrt(val);\n\tvar rgb: [number, number, number] = [0, 0, 0];\n\tvar i;\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = Math.round(rgb1[i] * (1.0 - val) + rgb2[i] * val);\n\t}\n\treturn rgb;\n};\n\nconst colorToString = (rgb: [number, number, number]): string => {\n\treturn \"rgb(\" + rgb[0] + \", \" + rgb[1] + \", \" + rgb[2] + \")\";\n};\n\nexport const getObjectFitSize = (\n\tcontains: boolean /* true = contain, false = cover */,\n\tcontainerWidth: number,\n\tcontainerHeight: number,\n\twidth: number,\n\theight: number\n) => {\n\tvar doRatio = width / height;\n\tvar cRatio = containerWidth / containerHeight;\n\tvar targetWidth = 0;\n\tvar targetHeight = 0;\n\tvar test = contains ? doRatio > cRatio : doRatio < cRatio;\n\n\tif (test) {\n\t\ttargetWidth = containerWidth;\n\t\ttargetHeight = targetWidth / doRatio;\n\t} else {\n\t\ttargetHeight = containerHeight;\n\t\ttargetWidth = targetHeight * doRatio;\n\t}\n\n\treturn {\n\t\twidth: targetWidth,\n\t\theight: targetHeight,\n\t\tx: (containerWidth - targetWidth) / 2,\n\t\ty: (containerHeight - targetHeight) / 2\n\t};\n};\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let interpretation: Array<[number, number]>;\n\texport let label: string = \"\";\n</script>\n\n<div class=\"input-number\">\n\t<BlockTitle>{label}</BlockTitle>\n\t<div class=\"interpret_range flex\">\n\t\t{#each interpretation as interpret_value}\n\t\t\t<div\n\t\t\t\tclass=\"flex-1\"\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpret_value[1])}\n\t\t\t>\n\t\t\t\t{interpret_value[0]}\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n</div>\n\n<style lang=\"postcss\" global>\n\tinput::-webkit-outer-spin-button,\n\tinput::-webkit-inner-spin-button {\n\t\t-webkit-appearance: none;\n\t\tmargin: 0;\n\t}\n\tinput {\n\t\t-moz-appearance: textfield;\n\t}\n\t.input-number {\n\t\t@apply shadow transition hover:shadow-md dark:bg-gray-800;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let interpretation: Array<number>;\n\texport let choices: Array<string>;\n\texport let label: string = \"\";\n</script>\n\n<div class=\"input-dropdown\">\n\t<BlockTitle>{label}</BlockTitle>\n\t<ul class=\"dropdown-menu\">\n\t\t{#each choices as choice, i}\n\t\t\t<li\n\t\t\t\tclass=\"dropdown-item first:rounded-t transition last:rounded-b py-2 px-3 block whitespace-nowrap cursor-pointer\"\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i])}\n\t\t\t>\n\t\t\t\t{choice}\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</div>\n\n<style lang=\"postcss\" global>\n\t.input-dropdown {\n\t\t.selector {\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\n\t\t}\n\t\t.dropdown-menu {\n\t\t\t@apply shadow;\n\t\t}\n\t\t.dropdown-item {\n\t\t\t@apply bg-white dark:bg-gray-800 hover:font-semibold;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let label: string = \"\";\n\texport let original: boolean;\n\texport let interpretation: [number, number];\n</script>\n\n<div class=\"input-checkbox inline-block\">\n\t<BlockTitle>{label}</BlockTitle>\n\t<button\n\t\tclass=\"checkbox-item py-2 px-3 rounded cursor-pointer flex gap-1\"\n\t\tclass:selected={original}\n\t>\n\t\t<div\n\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\n\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[0])}\n\t\t/>\n\t\t<div\n\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\n\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[1])}\n\t\t>\n\t\t\t<svg class=\"check h-3 w-4\" viewBox=\"-10 -10 20 20\">\n\t\t\t\t<line\n\t\t\t\t\tx1=\"-7.5\"\n\t\t\t\t\ty1=\"0\"\n\t\t\t\t\tx2=\"-2.5\"\n\t\t\t\t\ty2=\"5\"\n\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\tstroke-width=\"4\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t/>\n\t\t\t\t<line\n\t\t\t\t\tx1=\"-2.5\"\n\t\t\t\t\ty1=\"5\"\n\t\t\t\t\tx2=\"7.5\"\n\t\t\t\t\ty2=\"-7.5\"\n\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\tstroke-width=\"4\"\n\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</div>\n\t</button>\n</div>\n\n<style lang=\"postcss\">\n\t.selected .check {\n\t\t@apply opacity-100;\n\t}\n\t.input-checkbox {\n\t\t.checkbox-item {\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\n\t\t}\n\t\t.checkbox-item.selected {\n\t\t\t@apply bg-amber-500 dark:bg-red-600 text-white;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let original: Array<string>;\n\texport let interpretation: Array<[number, number]>;\n\texport let choices: Array<string>;\n\texport let label: string = \"\";\n</script>\n\n<div class=\"input-checkbox-group flex flex-wrap gap-2\">\n\t<BlockTitle>{label}</BlockTitle>\n\t{#each choices as choice, i}\n\t\t<button\n\t\t\tclass=\"checkbox-item py-2 px-3 font-semibold rounded cursor-pointer flex items-center gap-1\"\n\t\t\tclass:selected={original.includes(choice)}\n\t\t>\n\t\t\t<div\n\t\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i][0])}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tclass=\"checkbox w-4 h-4 bg-white flex items-center justify-center border border-gray-400 box-border\"\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i][1])}\n\t\t\t>\n\t\t\t\t<svg class=\"check h-3 w-4\" viewBox=\"-10 -10 20 20\">\n\t\t\t\t\t<line\n\t\t\t\t\t\tx1=\"-7.5\"\n\t\t\t\t\t\ty1=\"0\"\n\t\t\t\t\t\tx2=\"-2.5\"\n\t\t\t\t\t\ty2=\"5\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\tstroke-width=\"4\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t/>\n\t\t\t\t\t<line\n\t\t\t\t\t\tx1=\"-2.5\"\n\t\t\t\t\t\ty1=\"5\"\n\t\t\t\t\t\tx2=\"7.5\"\n\t\t\t\t\t\ty2=\"-7.5\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\tstroke-width=\"4\"\n\t\t\t\t\t\tstroke-linecap=\"round\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t{choice}\n\t\t</button>\n\t{/each}\n</div>\n\n<style lang=\"postcss\">\n\t.selected .check {\n\t\t@apply opacity-100;\n\t}\n\t.input-checkbox-group {\n\t\t.checkbox-item {\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\n\t\t}\n\t\t.checkbox {\n\t\t\t@apply bg-gray-100 dark:bg-gray-400 transition;\n\t\t}\n\t\t.checkbox-item.selected {\n\t\t\t@apply bg-amber-500 dark:bg-red-600 text-white;\n\t\t}\n\t\t.selected .checkbox {\n\t\t\t@apply bg-amber-600 dark:bg-red-700;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let original: number;\n\texport let interpretation: Array<number>;\n\texport let minimum: number;\n\texport let maximum: number;\n\texport let step: number;\n\texport let label: string = \"\";\n</script>\n\n<div class=\"input-slider text-center\">\n\t<BlockTitle>{label}</BlockTitle>\n\t<input\n\t\ttype=\"range\"\n\t\tclass=\"range w-full appearance-none transition rounded h-4 bg-blue-400\"\n\t\tdisabled\n\t\tmin={minimum}\n\t\tmax={maximum}\n\t\t{step}\n\t/>\n\t<div class=\"interpret_range flex\">\n\t\t{#each interpretation as interpret_value}\n\t\t\t<div\n\t\t\t\tclass=\"flex-1 h-4\"\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpret_value)}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n\t<div class=\"original inline-block mx-auto mt-1 px-2 py-0.5 rounded\">\n\t\t{original}\n\t</div>\n</div>\n\n<style lang=\"postcss\">\n\t.range::-webkit-slider-thumb {\n\t\t-webkit-appearance: none;\n\t\t@apply appearance-none w-5 h-5 rounded cursor-pointer;\n\t}\n\t.range::-moz-range-thumb {\n\t\t@apply appearance-none w-5 h-5 rounded cursor-pointer;\n\t}\n\n\t.input-slider {\n\t\t.range {\n\t\t\t@apply bg-white dark:bg-gray-800 shadow h-3 transition hover:shadow-md;\n\t\t}\n\t\t.range::-webkit-slider-thumb {\n\t\t\t@apply bg-gradient-to-b from-amber-400 to-amber-500 dark:from-red-500 dark:to-red-600 shadow;\n\t\t}\n\t\t.range::-moz-range-thumb {\n\t\t\t@apply bg-gradient-to-b from-amber-400 to-amber-500 shadow;\n\t\t}\n\t\t.value {\n\t\t\t@apply bg-gray-100 dark:bg-gray-600 font-semibold;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let original: string;\n\texport let interpretation: Array<number>;\n\texport let choices: Array<string>;\n\texport let label: string = \"\";\n</script>\n\n<div class=\"input-radio flex flex-wrap gap-2\">\n\t<BlockTitle>{label}</BlockTitle>\n\t{#each choices as choice, i}\n\t\t<button\n\t\t\tclass=\"radio-item py-2 px-3 font-semibold rounded cursor-pointer flex items-center gap-2\"\n\t\t\tclass:selected={original === choice}\n\t\t>\n\t\t\t<div\n\t\t\t\tclass=\"radio-circle w-4 h-4 rounded-full box-border\"\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpretation[i])}\n\t\t\t/>\n\t\t\t{choice}\n\t\t</button>\n\t{/each}\n</div>\n\n<style lang=\"postcss\">\n\t.input-radio {\n\t\t.radio-item {\n\t\t\t@apply bg-white dark:bg-gray-800 shadow transition hover:shadow-md;\n\t\t}\n\t\t.radio-circle {\n\t\t\t@apply w-4 h-4  rounded-full box-border;\n\t\t}\n\t\t.radio-item.selected {\n\t\t\t@apply bg-amber-500 dark:bg-red-600 text-white shadow;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getSaliencyColor, getObjectFitSize } from \"../utils\";\n\timport { afterUpdate } from \"svelte\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\n\texport let original: string;\n\texport let interpretation: Array<Array<number>>;\n\texport let shape: undefined | [number, number];\n\texport let label: string = \"\";\n\n\tlet saliency_layer: HTMLCanvasElement;\n\tlet image: HTMLImageElement;\n\n\tconst paintSaliency = (\n\t\tdata: Array<Array<number>>,\n\t\tctx: CanvasRenderingContext2D,\n\t\twidth: number,\n\t\theight: number\n\t) => {\n\t\tvar cell_width = width / data[0].length;\n\t\tvar cell_height = height / data.length;\n\t\tvar r = 0;\n\t\tdata.forEach(function (row) {\n\t\t\tvar c = 0;\n\t\t\trow.forEach(function (cell) {\n\t\t\t\tctx.fillStyle = getSaliencyColor(cell);\n\t\t\t\tctx.fillRect(c * cell_width, r * cell_height, cell_width, cell_height);\n\t\t\t\tc++;\n\t\t\t});\n\t\t\tr++;\n\t\t});\n\t};\n\n\tafterUpdate(() => {\n\t\tlet size = getObjectFitSize(\n\t\t\ttrue,\n\t\t\timage.width,\n\t\t\timage.height,\n\t\t\timage.naturalWidth,\n\t\t\timage.naturalHeight\n\t\t);\n\t\tif (shape) {\n\t\t\tsize = getObjectFitSize(\n\t\t\t\ttrue,\n\t\t\t\tsize.width,\n\t\t\t\tsize.height,\n\t\t\t\tshape[0],\n\t\t\t\tshape[1]\n\t\t\t);\n\t\t}\n\t\tlet width = size.width;\n\t\tlet height = size.height;\n\t\tsaliency_layer.setAttribute(\"height\", `${height}`);\n\t\tsaliency_layer.setAttribute(\"width\", `${width}`);\n\t\tpaintSaliency(\n\t\t\tinterpretation,\n\t\t\tsaliency_layer.getContext(\"2d\")!,\n\t\t\twidth,\n\t\t\theight\n\t\t);\n\t});\n</script>\n\n<div class=\"input-image\">\n\t<BlockTitle>{label}</BlockTitle>\n\t<div\n\t\tclass=\"image-preview w-full h-60 flex justify-center items-center bg-gray-200 dark:bg-gray-600 relative\"\n\t>\n\t\t<!-- svelte-ignore a11y-missing-attribute -->\n\t\t<div\n\t\t\tclass=\"interpretation w-full h-full absolute top-0 left-0 flex justify-center items-center opacity-90 hover:opacity-20 transition\"\n\t\t>\n\t\t\t<canvas bind:this={saliency_layer} />\n\t\t</div>\n\t\t<!-- svelte-ignore a11y-missing-attribute -->\n\t\t<img\n\t\t\tclass=\"w-full h-full object-contain\"\n\t\t\tbind:this={image}\n\t\t\tsrc={original}\n\t\t/>\n\t</div>\n</div>\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\texport let interpretation: Array<number>;\n\texport let label: string = \"\";\n</script>\n\n<div class=\"input-audio\">\n\t<BlockTitle>{label}</BlockTitle>\n\t<div class=\"interpret_range flex\">\n\t\t{#each interpretation as interpret_value}\n\t\t\t<div\n\t\t\t\tclass=\"flex-1 h-4\"\n\t\t\t\tstyle={\"background-color: \" + getSaliencyColor(interpret_value)}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n</div>\n","<script lang=\"ts\">\n\timport { getSaliencyColor } from \"../utils\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\texport let label: string = \"\";\n\texport let interpretation: Array<[string, number]>;\n</script>\n\n<div class=\"input-text w-full rounded box-border p-2 break-word\">\n\t<BlockTitle>{label}</BlockTitle>\n\t{#each interpretation as [text, saliency]}\n\t\t<span\n\t\t\tclass=\"textspan p-1 bg-opacity-20 dark:bg-opacity-80\"\n\t\t\tstyle={\"background-color: \" + getSaliencyColor(saliency)}\n\t\t>\n\t\t\t{text}\n\t\t</span>\n\t{/each}\n</div>\n","import InterpretationNumber from \"./InterpretationComponents/Number.svelte\";\nimport InterpretationDropdown from \"./InterpretationComponents/Dropdown.svelte\";\nimport InterpretationCheckbox from \"./InterpretationComponents/Checkbox.svelte\";\nimport InterpretationCheckboxGroup from \"./InterpretationComponents/CheckboxGroup.svelte\";\nimport InterpretationSlider from \"./InterpretationComponents/Slider.svelte\";\nimport InterpretationRadio from \"./InterpretationComponents/Radio.svelte\";\nimport InterpretationImage from \"./InterpretationComponents/Image.svelte\";\nimport InterpretationAudio from \"./InterpretationComponents/Audio.svelte\";\nimport InterpretationTextbox from \"./InterpretationComponents/Textbox.svelte\";\n\nexport const component_map = {\n\taudio: InterpretationAudio,\n\tdropdown: InterpretationDropdown,\n\tcheckbox: InterpretationCheckbox,\n\tcheckboxgroup: InterpretationCheckboxGroup,\n\tnumber: InterpretationNumber,\n\tslider: InterpretationSlider,\n\tradio: InterpretationRadio,\n\timage: InterpretationImage,\n\ttextbox: InterpretationTextbox\n};\n","<script lang=\"ts\">\n\timport type { ComponentType } from \"svelte\";\n\timport type { SvelteComponentDev } from \"svelte/internal\";\n\timport { component_map } from \"./directory\";\n\n\texport let component: keyof typeof component_map;\n\texport let component_props: Record<string, any>;\n\texport let value: any;\n\n\t$: _component = component_map[component] as ComponentType<SvelteComponentDev>;\n</script>\n\n{#if value}\n\t<svelte:component\n\t\tthis={_component}\n\t\t{...component_props}\n\t\toriginal={value.original}\n\t\tinterpretation={value.interpretation}\n\t/>\n{/if}\n\n<style lang=\"postcss\" global>\n</style>\n","export { default as Component } from \"./Interpretation.svelte\";\nexport const modes = [\"dynamic\"];\n"],"names":["InterpretationAudio","InterpretationDropdown","InterpretationCheckbox","InterpretationCheckboxGroup","InterpretationNumber","InterpretationSlider","InterpretationRadio","InterpretationImage","InterpretationTextbox"],"mappings":"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"}