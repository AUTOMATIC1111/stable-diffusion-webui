{"version":3,"file":"index.882bbdb5.js","sources":["../../../../ui/node_modules/.pnpm/d3-dsv@3.0.1/node_modules/d3-dsv/src/tsv.js","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Number.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Dropdown.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Checkbox.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/CheckboxGroup.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Slider.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Radio.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Textbox.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Audio.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Video.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/File.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Dataframe.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/ColorPicker.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/TimeSeries.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/Markdown.svelte","../../../../ui/packages/app/src/components/Dataset/ExampleComponents/HTML.svelte","../../../../ui/packages/app/src/components/Dataset/directory.ts","../../../../ui/packages/app/src/components/Dataset/Dataset.svelte","../../../../ui/packages/app/src/components/Dataset/index.ts"],"sourcesContent":["import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","<script lang=\"ts\">\n\texport let value: string;\n</script>\n\n<div class=\"gr-sample-number\">{value}</div>\n","<script lang=\"ts\">\n\texport let value: string;\n</script>\n\n<div class=\"gr-sample-dropdown\">{value}</div>\n","<script lang=\"ts\">\n\texport let value: boolean;\n</script>\n\n<div class=\"gr-sample-checkbox\">{value.toLocaleString()}</div>\n","<script lang=\"ts\">\n\texport let value: Array<string>;\n</script>\n\n<div class=\"gr-sample-checkboxgroup\">{value.join(\", \")}</div>\n","<script lang=\"ts\">\n\texport let value: number;\n</script>\n\n<div class=\"gr-sample-slider\">{value}</div>\n","<script lang=\"ts\">\n\texport let value: string;\n</script>\n\n<div class=\"gr-sample-radio\">{value}</div>\n","<script lang=\"ts\">\n\texport let value: string;\n</script>\n\n<div class=\"gr-sample-textbox\">{value}</div>\n","<script lang=\"ts\">\n\timport type { Value } from \"../../Audio/types\";\n\n\texport let value: Value;\n</script>\n\n<div class=\"gr-sample-audio\">{value}</div>\n","<script lang=\"ts\">\n\timport { playable } from \"../../utils/helpers\";\n\timport { onMount } from \"svelte\";\n\n\texport let value: string;\n\texport let samples_dir: string;\n\tlet video: HTMLVideoElement;\n\n\tonMount(() => {\n\t\tvideo.muted = true;\n\t\tvideo.playsInline = true;\n\t\tvideo.controls = false;\n\t\tvideo.setAttribute(\"muted\", \"\");\n\t\tvideo.play();\n\t\tvideo.pause();\n\t});\n</script>\n\n<!-- svelte-ignore a11y-media-has-caption -->\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n{#if playable()}\n\t<video\n\t\tmuted\n\t\tplaysinline\n\t\tbind:this={video}\n\t\ton:mouseover={video.play}\n\t\ton:mouseout={video.pause}\n\t\tclass=\"gr-sample-video\"\n\t\tsrc={samples_dir + value}\n\t/>\n{:else}\n\t<div class=\"gr-sample-video\">{value}</div>\n{/if}\n","<script lang=\"ts\">\n\timport type { FileData } from \"../../File/types\";\n\texport let value: FileData;\n</script>\n\n{#if Array.isArray(value)}\n\t<div class=\"truncate\">{value.join(\", \")}</div>\n{:else}\n\t<div class=\"truncate\">{value}</div>\n{/if}\n","<script lang=\"ts\">\n\t//@ts-ignore\n\timport { csvParseRows, tsvParseRows } from \"d3-dsv\";\n\texport let value: Array<Array<string | number>> | string;\n\texport let samples_dir: string;\n\tlet hovered = false;\n\tlet loaded_value: Array<Array<string | number>> | string = value;\n\tlet loaded = Array.isArray(loaded_value);\n\n\t$: if (!loaded && typeof value === \"string\" && /\\.[a-zA-Z]+$/.test(value)) {\n\t\tfetch(samples_dir + value)\n\t\t\t.then((v) => v.text())\n\t\t\t.then((v) => {\n\t\t\t\ttry {\n\t\t\t\t\tif ((value as string).endsWith(\"csv\")) {\n\t\t\t\t\t\tconst small_df = v\n\t\t\t\t\t\t\t.split(\"\\n\")\n\t\t\t\t\t\t\t.slice(0, 4)\n\t\t\t\t\t\t\t.map((v) => v.split(\",\").slice(0, 4).join(\",\"))\n\t\t\t\t\t\t\t.join(\"\\n\");\n\n\t\t\t\t\t\tloaded_value = csvParseRows(small_df);\n\t\t\t\t\t} else if ((value as string).endsWith(\"tsv\")) {\n\t\t\t\t\t\tconst small_df = v\n\t\t\t\t\t\t\t.split(\"\\n\")\n\t\t\t\t\t\t\t.slice(0, 4)\n\t\t\t\t\t\t\t.map((v) => v.split(\"\\t\").slice(0, 4).join(\"\\t\"))\n\t\t\t\t\t\t\t.join(\"\\n\");\n\n\t\t\t\t\t\tloaded_value = tsvParseRows(small_df);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"Incorrect format, only CSV and TSV files are supported\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tloaded = true;\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n</script>\n\n{#if loaded}\n\t<div\n\t\tclass=\"gr-sample-dataframe\"\n\t\ton:mouseenter={() => (hovered = true)}\n\t\ton:mouseleave={() => (hovered = false)}\n\t>\n\t\t<table class=\"gr-sample-dataframe relative\">\n\t\t\t{#each loaded_value.slice(0, 3) as row, i}\n\t\t\t\t<tr>\n\t\t\t\t\t{#each row.slice(0, 3) as cell, j}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclass=\"p-2 {i < 3\n\t\t\t\t\t\t\t\t? 'border-b border-b-slate-300 dark:border-b-slate-700'\n\t\t\t\t\t\t\t\t: ''} \n\t\t\t\t\t\t\t{j < 3 ? 'border-r border-r-slate-300 dark:border-r-slate-700 ' : ''}\"\n\t\t\t\t\t\t\t>{cell}</td\n\t\t\t\t\t\t>\n\t\t\t\t\t{/each}\n\t\t\t\t\t{#if row.length > 3}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\tclass=\"p-2  border-r border-b  border-r-slate-300 dark:border-r-slate-700 border-b-slate-300 dark:border-b-slate-700\"\n\t\t\t\t\t\t\t>â€¦</td\n\t\t\t\t\t\t>\n\t\t\t\t\t{/if}\n\t\t\t\t</tr>\n\t\t\t{/each}\n\t\t\t{#if value.length > 3}\n\t\t\t\t<div\n\t\t\t\t\tclass=\"absolute w-full h-[50%] bottom-0 bg-gradient-to-b from-[rgba(255,255,255,0)] dark:from-[rgba(0,0,0,0)] to-white\"\n\t\t\t\t\tclass:dark:to-gray-950={!hovered}\n\t\t\t\t\tclass:dark:to-gray-800={hovered}\n\t\t\t\t\tclass:to-gray-50={hovered}\n\t\t\t\t/>\n\t\t\t{/if}\n\t\t</table>\n\t</div>\n{/if}\n","<script lang=\"ts\">\n\texport let value: string;\n</script>\n\n<div\n\tclass=\"w-10 h-10 border dark:border-slate-300\"\n\tstyle=\"background-color: {value}\"\n/>\n","<script lang=\"ts\">\n\timport type { FileData } from \"../../File/types\";\n\texport let value: FileData;\n</script>\n\n<div class=\"truncate\">{value}</div>\n","<script lang=\"ts\">\n\texport let value: string;\n</script>\n\n<div class=\"gr-sample-markdown\">{@html value}</div>\n","<script lang=\"ts\">\n\texport let value: string;\n</script>\n\n<div class=\"gr-sample-html\">{@html value}</div>\n","import ExampleNumber from \"./ExampleComponents/Number.svelte\";\nimport ExampleDropdown from \"./ExampleComponents/Dropdown.svelte\";\nimport ExampleCheckbox from \"./ExampleComponents/Checkbox.svelte\";\nimport ExampleCheckboxGroup from \"./ExampleComponents/CheckboxGroup.svelte\";\nimport ExampleSlider from \"./ExampleComponents/Slider.svelte\";\nimport ExampleRadio from \"./ExampleComponents/Radio.svelte\";\nimport ExampleImage from \"./ExampleComponents/Image.svelte\";\nimport ExampleTextbox from \"./ExampleComponents/Textbox.svelte\";\nimport ExampleAudio from \"./ExampleComponents/Audio.svelte\";\nimport ExampleVideo from \"./ExampleComponents/Video.svelte\";\nimport ExampleFile from \"./ExampleComponents/File.svelte\";\nimport ExampleDataframe from \"./ExampleComponents/Dataframe.svelte\";\nimport ExampleModel3D from \"./ExampleComponents/Model3D.svelte\";\nimport ExampleColorPicker from \"./ExampleComponents/ColorPicker.svelte\";\nimport ExampleTimeSeries from \"./ExampleComponents/TimeSeries.svelte\";\nimport ExampleMarkdown from \"./ExampleComponents/Markdown.svelte\";\nimport ExampleHTML from \"./ExampleComponents/HTML.svelte\";\n\nexport const component_map = {\n\tdropdown: ExampleDropdown,\n\tcheckbox: ExampleCheckbox,\n\tcheckboxgroup: ExampleCheckboxGroup,\n\tnumber: ExampleNumber,\n\tslider: ExampleSlider,\n\tradio: ExampleRadio,\n\timage: ExampleImage,\n\ttextbox: ExampleTextbox,\n\taudio: ExampleAudio,\n\tvideo: ExampleVideo,\n\tfile: ExampleFile,\n\tdataframe: ExampleDataframe,\n\tmodel3d: ExampleModel3D,\n\tcolorpicker: ExampleColorPicker,\n\ttimeseries: ExampleTimeSeries,\n\tmarkdown: ExampleMarkdown,\n\thtml: ExampleHTML\n};\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport type { SvelteComponentDev, ComponentType } from \"svelte/internal\";\n\timport { component_map } from \"./directory\";\n\n\texport let components: Array<keyof typeof component_map>;\n\texport let label: string = \"Examples\";\n\texport let headers: Array<string>;\n\texport let samples: Array<Array<any>>;\n\texport let elem_id: string = \"\";\n\texport let visible: boolean = true;\n\texport let value: number | null = null;\n\texport let root: string;\n\texport let root_url: null | string;\n\texport let samples_per_page: number = 10;\n\n\tconst dispatch = createEventDispatcher<{ click: number }>();\n\n\tlet samples_dir: string = (root_url ?? root) + \"file=\";\n\tlet page = 0;\n\tlet gallery = headers.length === 1;\n\tlet paginate = samples.length > samples_per_page;\n\n\tlet selected_samples: Array<Array<any>>;\n\tlet page_count: number;\n\tlet visible_pages: Array<number> = [];\n\n\t$: {\n\t\tif (paginate) {\n\t\t\tvisible_pages = [];\n\t\t\tselected_samples = samples.slice(\n\t\t\t\tpage * samples_per_page,\n\t\t\t\t(page + 1) * samples_per_page\n\t\t\t);\n\t\t\tpage_count = Math.ceil(samples.length / samples_per_page);\n\t\t\t[0, page, page_count - 1].forEach((anchor) => {\n\t\t\t\tfor (let i = anchor - 2; i <= anchor + 2; i++) {\n\t\t\t\t\tif (i >= 0 && i < page_count && !visible_pages.includes(i)) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tvisible_pages.length > 0 &&\n\t\t\t\t\t\t\ti - visible_pages[visible_pages.length - 1] > 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tvisible_pages.push(-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvisible_pages.push(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tselected_samples = samples.slice();\n\t\t}\n\t}\n\n\t$: component_meta = selected_samples.map((sample_row) =>\n\t\tsample_row.map((sample_cell, j) => ({\n\t\t\tvalue: sample_cell,\n\t\t\tcomponent: component_map[\n\t\t\t\tcomponents[j]\n\t\t\t] as ComponentType<SvelteComponentDev>\n\t\t}))\n\t);\n</script>\n\n<div\n\tid={elem_id}\n\tclass=\"mt-4 inline-block max-w-full text-gray-700 w-full\"\n\tclass:!hidden={!visible}\n>\n\t<div class=\"text-xs mb-2 flex items-center text-gray-500\">\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\"\n\t\t\taria-hidden=\"true\"\n\t\t\trole=\"img\"\n\t\t\tclass=\"mr-1\"\n\t\t\twidth=\"1em\"\n\t\t\theight=\"1em\"\n\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\tviewBox=\"0 0 32 32\"\n\t\t\t><path\n\t\t\t\tfill=\"currentColor\"\n\t\t\t\td=\"M10 6h18v2H10zm0 18h18v2H10zm0-9h18v2H10zm-6 0h2v2H4zm0-9h2v2H4zm0 18h2v2H4z\"\n\t\t\t/></svg\n\t\t>\n\t\t{label}\n\t</div>\n\t{#if gallery}\n\t\t<div class=\"gr-samples-gallery\">\n\t\t\t{#each selected_samples as sample_row, i}\n\t\t\t\t<!-- {@const x = component_map[]} -->\n\n\t\t\t\t<button\n\t\t\t\t\tclass=\"group rounded-lg\"\n\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\tvalue = i + page * samples_per_page;\n\t\t\t\t\t\tdispatch(\"click\", value);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{#if Object.keys(component_map).includes(components[0]) && component_map[components[0]]}\n\t\t\t\t\t\t<svelte:component\n\t\t\t\t\t\t\tthis={component_meta[0][0].component}\n\t\t\t\t\t\t\tvalue={sample_row[0]}\n\t\t\t\t\t\t\t{samples_dir}\n\t\t\t\t\t\t/>\n\t\t\t\t\t{/if}\n\t\t\t\t</button>\n\t\t\t{/each}\n\t\t</div>\n\t{:else}\n\t\t<div class=\"overflow-x-auto border table-auto rounded-lg w-full text-sm\">\n\t\t\t<table class=\"gr-samples-table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr\n\t\t\t\t\t\tclass=\"border-b dark:border-gray-800 divide-x dark:divide-gray-800 shadow-sm\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{#each headers as header}\n\t\t\t\t\t\t\t<th class=\"p-2 whitespace-nowrap min-w-lg text-left\">\n\t\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{#each component_meta as sample_row, i}\n\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\tclass=\"group cursor-pointer odd:bg-gray-50 border-b dark:border-gray-800 divide-x dark:divide-gray-800 last:border-none hover:bg-orange-50 hover:divide-orange-100 dark:hover:bg-gray-700\"\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\tvalue = i + page * samples_per_page;\n\t\t\t\t\t\t\t\tdispatch(\"click\", value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#each sample_row as { value, component }, j}\n\t\t\t\t\t\t\t\t{#if components[j] !== undefined && component_map[components[j]] !== undefined}\n\t\t\t\t\t\t\t\t\t<td class=\"p-2\">\n\t\t\t\t\t\t\t\t\t\t<svelte:component this={component} {value} {samples_dir} />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t{/each}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t{/if}\n</div>\n{#if paginate}\n\t<div class=\"flex gap-2 items-center justify-center text-sm\">\n\t\tPages:\n\t\t{#each visible_pages as visible_page}\n\t\t\t{#if visible_page === -1}\n\t\t\t\t<div>...</div>\n\t\t\t{:else}\n\t\t\t\t<button\n\t\t\t\t\tclass:font-bold={page === visible_page}\n\t\t\t\t\ton:click={() => (page = visible_page)}\n\t\t\t\t>\n\t\t\t\t\t{visible_page + 1}\n\t\t\t\t</button>\n\t\t\t{/if}\n\t\t{/each}\n\t</div>\n{/if}\n","export { default as Component } from \"./Dataset.svelte\";\nexport const modes = [\"dynamic\"];\n\nexport const document = () => ({\n\ttype: \"number\",\n\tdescription: \"index of selected row\",\n\texample_data: 0\n});\n"],"names":["dsv","ExampleDropdown","ExampleCheckbox","ExampleCheckboxGroup","ExampleNumber","ExampleSlider","ExampleRadio","ExampleTextbox","ExampleAudio","ExampleVideo","ExampleFile","ExampleDataframe","ExampleColorPicker","ExampleTimeSeries","ExampleMarkdown","ExampleHTML"],"mappings":"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"}