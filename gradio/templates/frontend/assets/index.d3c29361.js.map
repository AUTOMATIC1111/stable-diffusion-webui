{"version":3,"file":"index.d3c29361.js","sources":["../../../../ui/packages/upload-button/src/UploadButton.svelte","../../../../ui/packages/app/src/components/UploadButton/UploadButton.svelte","../../../../ui/packages/app/src/components/UploadButton/index.ts"],"sourcesContent":["<script lang=\"ts\">\n\timport { Button } from \"@gradio/button\";\n\timport type { Styles } from \"@gradio/utils\";\n\timport { createEventDispatcher } from \"svelte\";\n\timport type { FileData } from \"@gradio/upload\";\n\n\texport let style: Styles = {};\n\texport let elem_id: string = \"\";\n\texport let elem_classes: Array<string> = [];\n\texport let visible: boolean = true;\n\texport let size: \"sm\" | \"lg\" = style.size || \"lg\";\n\texport let file_count: string;\n\texport let file_types: Array<string> = [\"file\"];\n\texport let include_file_metadata = true;\n\n\tlet hidden_upload: HTMLInputElement;\n\tconst dispatch = createEventDispatcher();\n\tlet accept_file_types: string | null;\n\tif (file_types == null) {\n\t\taccept_file_types = null;\n\t} else {\n\t\tfile_types = file_types.map((x) => {\n\t\t\tif (x.startsWith(\".\")) {\n\t\t\t\treturn x;\n\t\t\t} else {\n\t\t\t\treturn x + \"/*\";\n\t\t\t}\n\t\t});\n\t\taccept_file_types = file_types.join(\", \");\n\t}\n\n\tconst openFileUpload = () => {\n\t\thidden_upload.click();\n\t};\n\n\tconst loadFiles = (files: FileList) => {\n\t\tlet _files: Array<File> = Array.from(files);\n\t\tif (!files.length) {\n\t\t\treturn;\n\t\t}\n\t\tif (file_count === \"single\") {\n\t\t\t_files = [files[0]];\n\t\t}\n\t\tvar all_file_data: Array<FileData | File> = [];\n\t\t_files.forEach((f, i) => {\n\t\t\tall_file_data[i] = include_file_metadata\n\t\t\t\t? {\n\t\t\t\t\t\tname: f.name,\n\t\t\t\t\t\tsize: f.size,\n\t\t\t\t\t\tdata: \"\",\n\t\t\t\t\t\tblob: f\n\t\t\t\t  }\n\t\t\t\t: f;\n\t\t\tif (\n\t\t\t\tall_file_data.filter((x) => x !== undefined).length === files.length\n\t\t\t) {\n\t\t\t\tdispatch(\n\t\t\t\t\t\"load\",\n\t\t\t\t\tfile_count == \"single\" ? all_file_data[0] : all_file_data\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst loadFilesFromUpload = (e: Event) => {\n\t\tconst target = e.target as HTMLInputElement;\n\n\t\tif (!target.files) return;\n\t\tloadFiles(target.files);\n\t};\n</script>\n\n<input\n\tclass=\"hide\"\n\taccept={accept_file_types}\n\ttype=\"file\"\n\tbind:this={hidden_upload}\n\ton:change={loadFilesFromUpload}\n\tmultiple={file_count === \"multiple\" || undefined}\n\twebkitdirectory={file_count === \"directory\" || undefined}\n\tmozdirectory={file_count === \"directory\" || undefined}\n/>\n\n<Button\n\t{size}\n\tvariant=\"secondary\"\n\t{elem_id}\n\t{elem_classes}\n\t{visible}\n\ton:click={openFileUpload}\n\t{style}\n>\n\t<slot />\n</Button>\n\n<style>\n\t.hide {\n\t\tdisplay: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, tick } from \"svelte\";\n\timport type { Styles } from \"@gradio/utils\";\n\timport type { FileData } from \"@gradio/upload\";\n\timport { UploadButton } from \"@gradio/upload-button\";\n\timport { upload_files } from \"@gradio/client\";\n\timport { blobToBase64 } from \"@gradio/upload\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let style: Styles = {};\n\texport let elem_id: string = \"\";\n\texport let elem_classes: Array<string> = [];\n\texport let visible: boolean = true;\n\texport let label: string;\n\texport let value: null | FileData;\n\texport let file_count: string;\n\texport let file_types: Array<string> = [\"file\"];\n\texport let root: string;\n\n\tasync function handle_upload({ detail }: CustomEvent<FileData>) {\n\t\tvalue = detail;\n\t\tawait tick();\n\t\tupload_files(root, [detail.blob!]).then(async (response) => {\n\t\t\tif (response.error) {\n\t\t\t\tdetail.data = await blobToBase64(detail.blob!);\n\t\t\t} else {\n\t\t\t\tdetail.orig_name = detail.name;\n\t\t\t\tdetail.name = response.files![0];\n\t\t\t\tdetail.is_file = true;\n\t\t\t}\n\t\t\tdispatch(\"change\", value);\n\t\t\tdispatch(\"upload\", detail);\n\t\t});\n\t}\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: FileData | null;\n\t\tupload: FileData;\n\t}>();\n</script>\n\n<UploadButton\n\t{elem_id}\n\t{elem_classes}\n\t{style}\n\t{visible}\n\t{file_count}\n\t{file_types}\n\ton:click\n\ton:load={handle_upload}\n>\n\t{$_(label)}\n</UploadButton>\n","export { default as Component } from \"./UploadButton.svelte\";\nexport const modes = [\"static\"];\n"],"names":[],"mappings":"u5BAyFW,8FAfF,sCAIE,OAAe,YAAc,+BACtB,OAAe,aAAe,MAAS,uBAC1C,OAAe,aAAe,MAAS,UARtD,4DAKY,gDAHH,wBAIE,OAAe,YAAc,2CACtB,OAAe,aAAe,qDACjC,OAAe,aAAe,gXA1EjC,eACA,UAAkB,OAClB,sBACA,UAAmB,OACnB,OAAoB,EAAM,MAAQ,SAClC,iBACA,cAA6B,MAAM,MACnC,wBAAwB,MAE/B,OACE,GAAW,OACb,GACA,GAAc,KACjB,EAAoB,KAEpB,GAAa,EAAW,IAAK,GACxB,EAAE,WAAW,GAAG,EACZ,EAEA,EAAI,MAGb,EAAoB,EAAW,KAAK,IAAI,QAGnC,QACL,EAAc,SAGT,EAAa,OACd,GAAsB,MAAM,KAAK,CAAK,OACrC,EAAM,QAGP,IAAe,UAClB,IAAU,EAAM,QAEb,MACJ,EAAO,SAAS,EAAG,KAClB,EAAc,GAAK,GAEhB,KAAM,EAAE,KACR,KAAM,EAAE,KACR,KAAM,GACN,KAAM,GAEN,EAEF,EAAc,OAAQ,GAAM,IAAM,MAAS,EAAE,SAAW,EAAM,QAE9D,EACC,OACA,GAAc,SAAW,EAAc,GAAK,CAAa,MAMvD,EAAuB,SACtB,GAAS,EAAE,QAEZ,EAAO,OACZ,EAAU,EAAO,KAAK,4CAQZ,skBCzBV,KAAG,oEAAH,KAAG,oPAFK,qYAxCE,eACA,UAAkB,OAClB,sBACA,UAAmB,OACnB,YACA,YACA,iBACA,cAA6B,MAAM,MACnC,4BAEoB,eAC9B,EAAQ,CAAM,OACR,KACN,EAAa,GAAO,EAAO,IAAK,GAAG,UAAY,KAC1C,EAAS,MACZ,EAAO,UAAa,GAAa,EAAO,IAAK,EAE7C,GAAO,UAAY,EAAO,KAC1B,EAAO,KAAO,EAAS,MAAO,GAC9B,EAAO,QAAU,IAElB,EAAS,SAAU,CAAK,EACxB,EAAS,SAAU,CAAM,SAIrB,GAAW,iiBClCL,IAAQ,CAAC,QAAQ"}