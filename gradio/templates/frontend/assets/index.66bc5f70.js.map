{"version":3,"file":"index.66bc5f70.js","sources":["../../../../ui/packages/form/src/Radio.svelte","../../../../ui/packages/app/src/components/Radio/Radio.svelte","../../../../ui/packages/app/src/components/Radio/index.ts"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { BlockTitle } from \"@gradio/atoms\";\n\timport { get_styles } from \"@gradio/utils\";\n\timport type { Styles, SelectData } from \"@gradio/utils\";\n\n\texport let value: string | null;\n\texport let style: Styles = {};\n\texport let choices: Array<string>;\n\texport let disabled: boolean = false;\n\texport let label: string;\n\texport let info: string | undefined = undefined;\n\texport let show_label: boolean = true;\n\texport let elem_id: string;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: string | null;\n\t\tselect: SelectData;\n\t}>();\n\n\t$: dispatch(\"change\", value);\n\n\t$: ({ item_container } = get_styles(style, [\"item_container\"]));\n</script>\n\n<BlockTitle {show_label} {info}>{label}</BlockTitle>\n\n<div class=\"wrap\">\n\t{#each choices as choice, i (i)}\n\t\t<label\n\t\t\tclass:disabled\n\t\t\tclass:selected={value === choice}\n\t\t\tstyle={item_container}\n\t\t>\n\t\t\t<input\n\t\t\t\t{disabled}\n\t\t\t\tbind:group={value}\n\t\t\t\ton:input={() => dispatch(\"select\", { value: choice, index: i })}\n\t\t\t\ttype=\"radio\"\n\t\t\t\tname=\"radio-{elem_id}\"\n\t\t\t\tvalue={choice}\n\t\t\t/>\n\t\t\t<span class=\"ml-2\">{choice}</span>\n\t\t</label>\n\t{/each}\n</div>\n\n<style>\n\t.wrap {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: var(--checkbox-label-gap);\n\t}\n\tlabel {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: var(--button-transition);\n\t\tcursor: pointer;\n\t\tbox-shadow: var(--checkbox-label-shadow);\n\t\tborder: var(--checkbox-label-border-width) solid\n\t\t\tvar(--checkbox-label-border-color);\n\t\tborder-radius: var(--button-small-radius);\n\t\tbackground: var(--checkbox-label-background-fill);\n\t\tpadding: var(--checkbox-label-padding);\n\t\tcolor: var(--checkbox-label-text-color);\n\t\tfont-weight: var(--checkbox-label-text-weight);\n\t\tfont-size: var(--checkbox-label-text-size);\n\t\tline-height: var(--line-md);\n\t}\n\n\tlabel:hover {\n\t\tbackground: var(--checkbox-label-background-fill-hover);\n\t}\n\tlabel:focus {\n\t\tbackground: var(--checkbox-label-background-fill-focus);\n\t}\n\tlabel.selected {\n\t\tbackground: var(--checkbox-label-background-fill-selected);\n\t\tcolor: var(--checkbox-label-text-color-selected);\n\t}\n\n\tlabel > * + * {\n\t\tmargin-left: var(--size-2);\n\t}\n\n\tinput {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\tbox-shadow: var(--checkbox-shadow);\n\t\tborder: var(--checkbox-border-width) solid var(--checkbox-border-color);\n\t\tborder-radius: var(--radius-full);\n\t\tbackground-color: var(--checkbox-background-color);\n\t\tline-height: var(--line-sm);\n\t}\n\n\tinput:checked,\n\tinput:checked:hover,\n\tinput:checked:focus {\n\t\tborder-color: var(--checkbox-border-color-selected);\n\t\tbackground-image: var(--radio-circle);\n\t\tbackground-color: var(--checkbox-background-color-selected);\n\t}\n\n\tinput:hover {\n\t\tborder-color: var(--checkbox-border-color-hover);\n\t\tbackground-color: var(--checkbox-background-color-hover);\n\t}\n\n\tinput:focus {\n\t\tborder-color: var(--checkbox-border-color-focus);\n\t\tbackground-color: var(--checkbox-background-color-focus);\n\t}\n\n\tinput[disabled],\n\t.disabled {\n\t\tcursor: not-allowed;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { Radio } from \"@gradio/form\";\n\timport { Block } from \"@gradio/atoms\";\n\timport StatusTracker from \"../StatusTracker/StatusTracker.svelte\";\n\timport type { LoadingStatus } from \"../StatusTracker/types\";\n\timport type { Styles } from \"@gradio/utils\";\n\n\texport let label: string = \"Radio\";\n\texport let info: string | undefined = undefined;\n\texport let elem_id: string = \"\";\n\texport let elem_classes: Array<string> = [];\n\texport let visible: boolean = true;\n\texport let value: string | null = null;\n\texport let choices: Array<string> = [];\n\texport let mode: \"static\" | \"dynamic\";\n\texport let show_label: boolean;\n\texport let style: Styles = {};\n\texport let loading_status: LoadingStatus;\n</script>\n\n<Block\n\t{visible}\n\ttype=\"fieldset\"\n\t{elem_id}\n\t{elem_classes}\n\tdisable={typeof style.container === \"boolean\" && !style.container}\n>\n\t<StatusTracker {...loading_status} />\n\n\t<Radio\n\t\tbind:value\n\t\t{label}\n\t\t{info}\n\t\t{elem_id}\n\t\t{show_label}\n\t\t{choices}\n\t\t{style}\n\t\tdisabled={mode === \"static\"}\n\t\ton:change\n\t\ton:select\n\t/>\n</Block>\n","export { default as Component } from \"./Radio.svelte\";\nexport const modes = [\"static\", \"dynamic\"];\n\nexport const document = (config: Record<string, any>) => ({\n\ttype: {\n\t\tpayload: \"string\"\n\t},\n\tdescription: {\n\t\tpayload: \"selected choice\"\n\t},\n\texample_data: config.choices.length > 1 ? config.choices[0] : \"\"\n});\n"],"names":[],"mappings":"gnBAyBiC,wCAAA,wDAiBV,uMAHN,kBACN,sHARD,wEADS,OAAU,4BAF3B,SAKC,6BAEa,YAMb,+HAHc,iCACN,oEAJK,kBAMO,qCAVb,oDADS,OAAU,2MAHrB,gBAAsB,sBAA3B,uMADH,qLACQ,qMAtBI,YACA,eACA,cACA,WAAoB,OACpB,YACA,OAA2B,WAC3B,aAAsB,OACtB,kBAEL,GAAW,wBAqBF,qCACI,EAAS,UAAY,MAAO,EAAQ,MAAO,6SAjB3D,EAAS,SAAU,CAAK,uBAErB,kBAAmB,EAAW,GAAQ,gBAAgB,mNCKzC,4LAUR,OAAS,6PAVD,yLAUR,OAAS,0TAZJ,MAAM,WAAc,YAAc,KAAM,sNAAxC,MAAM,WAAc,YAAc,KAAM,iKAlB7C,QAAgB,YAChB,OAA2B,WAC3B,UAAkB,OAClB,sBACA,UAAmB,OACnB,QAAuB,SACvB,iBACA,WACA,iBACA,eACA,osBChBC,IAAQ,CAAC,SAAU,SAAS,EAE5B,GAAW,AAAC,KACxB,KAAM,CACL,QAAS,UAEV,YAAa,CACZ,QAAS,mBAEV,aAAc,EAAO,QAAQ,OAAS,EAAI,EAAO,QAAQ,GAAK,EAC/D"}